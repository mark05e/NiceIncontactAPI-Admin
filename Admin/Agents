{
  "access-keys": {
    "get": {
      "tags": [
        "Agents"
      ],
      "summary": "  Returns a list of access keys",
      "operationId": "get-access-keys",
      "description": "This method will return a list of “accessKeyIds” and the agentId who can use it.It can be filter by adding “agentId” or paging parameters to the request.<br/> The Integrated Softphone (WebRTC) URLs and their weights for the Agent. Only applies if the business unit is configured for Integrated Softphone (WebRTC) URLs to be custom, not default. Limit of 2 URLs total that can be configured.<br/><br/> <b><i><span style='color:red'>NOTE: </span></i></b>The Access Key APIs in this section are only to be used with Central.  Access Key APIs for Userhub are documented on the Access Key page. https://developer.niceincontact.com/API/UserHubAPI <div class='tabs_wrapper' data-path='admin_agents_getaccesskeys.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "agentId",
          "description": "ID of the Agent",
          "type": "string",
          "required": true,
          "in": "path"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "totalRecords": {
                "type": "integer"
              },
              "accesskeys": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "accessKeyId": {
                      "type": "string",
                      "description": "public id used to request a token"
                    },
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent"
                    },
                    "billingId": {
                      "type": "integer",
                      "description": "billing ID for the business unit"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Filter results based on active status"
                    },
                    "lastUsedDate": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "<p>invalid agentId</p><p>Invalid orderBy</p><p>Invalid top</p><p>Invalid skip</p><p>Inavlid fields</p>"
        },
        "403": {
          "description": "Agent doesn't have view permission"
        }
      }
    },
    "post": {
      "tags": [
        "Agents"
      ],
      "summary": "  Creates an accessKey",
      "operationId": "post-access-keys",
      "description": "This method will create an accessKey for an agentId. Response will provide the public accessKeyId and the private accessKeySecret. Those parameters will can then be used to request a token. An agentId is limited to 20 active or inactive access keys.Access Key token request: POST https://api.incontact.com/inContactAuthorizationServer/token/access-key Body: {'accessKeyId': ,'accessKeySecret': }.<br/><br/> <b><i><span style='color:red'>NOTE: </span></i></b>The Access Key APIs in this section are only to be used with Central.  Access Key APIs for Userhub are documented on the Access Key page. https://developer.niceincontact.com/API/UserHubAPI <div class='tabs_wrapper' data-path='admin_agents_postaccesskeys.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "agentId",
          "description": "ID of the Agent",
          "type": "integer",
          "in": "query"
        }
      ],
      "responses": {
        "201": {
          "description": "Created",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "accesskeys": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "accessKeyId": {
                      "type": "string",
                      "description": "public id used to request a token"
                    },
                    "accessKeySecret": {
                      "type": "string",
                      "description": "Private id"
                    },
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent"
                    },
                    "billingId": {
                      "type": "integer",
                      "description": "billing ID for the business unit"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Filter results based on active status"
                    }

                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid agentId "
        },
        "403": {
          "description": "Agent doesn't have create permission"
        }
      }
    }
  },
  "access-keys_accesskeyId": {
    "patch": {
      "tags": [
        "Agents"
      ],
      "summary": "  Updates an accessKey by Id",
      "operationId": "patch-access-keys-id",
      "description": "This method updates an access keys configuration of “isActive” to true or false.AgentIds can only have 20 active or inactive accessKeys configured.<br/><br/> <b><i><span style='color:red'>NOTE: </span></i></b>The Access Key APIs in this section are only to be used with Central.  Access Key APIs for Userhub are documented on the Access Key page. https://developer.niceincontact.com/API/UserHubAPI <div class='tabs_wrapper' data-path='admin_agents_patchaccesskeyid.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "accessKeyId",
          "description": "public ID used to request a token",
          "type": "string",
          "required": true,
          "in": "path"
        },
        {
          "$ref": "#/definitions/parameters/isActive"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Invalid parameter 'isActive', must be type Boolean"
        },
        "403": {
          "description": "Agent doesn't have edit permission"
        },
        "404": {
          "description": "Access key not found"
        }
      }
    },
    "get": {
      "tags": [
        "Agents"
      ],
      "summary": "  Returns the configuration of an accessKey",
      "operationId": "get-access-keys-id",
      "description": "This method will return the configuration of an accessKey.<br/><br/> <b><i><span style='color:red'>NOTE: </span></i></b>The Access Key APIs in this section are only to be used with Central.  Access Key APIs for Userhub are documented on the Access Key page. https://developer.niceincontact.com/API/UserHubAPI <div class='tabs_wrapper' data-path='admin_agents_getAccesskeyid.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "accessKeyId",
          "description": "public ID used to request a token",
          "type": "string",
          "required": true,
          "in": "path"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "accessKey": {
                "type": "object",
                "properties": {
                  "accessKeyId": {
                    "type": "string",
                    "description": "public id used to request a token"
                  },
                  "agentId": {
                    "type": "integer",
                    "description": "ID of the Agent"
                  },
                  "billingId": {
                    "type": "integer",
                    "description": "billing ID for the business unit"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Filter results based on active status"
                  },
                  "lastUsedDate": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Agent doesn't have view permission"
        },
        "404": {
          "description": "Access key not found"
        }
      }
    },
    "delete": {
      "tags": [
        "Agents"
      ],
      "summary": "  Deletes an accessKey",
      "operationId": "delete-access-keys-id",
      "description": "This method will delete an accessKey configured for an agent.The maximum number of configured access keys for and agentId is 20.That includes active and inactive access keys.<br/><br/> <b><i><span style='color:red'>NOTE: </span></i></b>The Access Key APIs in this section are only to be used with Central.  Access Key APIs for Userhub are documented on the Access Key page. https://developer.niceincontact.com/API/UserHubAPI <div class='tabs_wrapper' data-path='admin_agents_deleteaccesskeyid.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "accesskeyId",
          "description": "public ID used to request a token",
          "type": "string",
          "required": true,
          "in": "path"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "403": {
          "description": "Agent doesn't have delete permission"
        },
        "404": {
          "description": "Access key not found"
        }
      }
    }
  },
  "agents": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Updated in v24.0  Get Agents List",
      "operationId": "get-agents",
      "description": "This method will return a list of all agents currently configured in the business unit. The Integrated Softphone (WebRTC) URLs and their weights for the Agent. Only applies if the business unit is configured for Integrated Softphone (WebRTC) URLs to be custom, not default. Limit of 2 URLs total that can be configured.<br/><br/><b>urlName: </b> Indicates an Integrated Softphone (WebRTC) URL selected for the user. Must be a valid value from the Integrated Softphone URL drop-down lists in the user interface. Limit of 2 URLs total that can be configured.<br/><b>weight: </b> The relative weight assigned to an Integrated Softphone URL. Higher numbers correspond to more weight or priority compared to lower numbers. Accepted values: 10, 20, 30, 40, 50, 60, 70, 80, 90, 100. Note: does not apply when urlName is set to 'Default. <br/><br/>Now returns integratedSoftphoneWebRtcUrls array.<br/><br/><b><i><span style='color:red'> NOTE: </span></i></b> This field is not shown when business unit configuration for Integrated Softphone (WebRTC) URLs is default.<div class='tabs_wrapper' data-path='admin_agents_getAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/isActive"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessUnitId": {
                "type": "integer",
                "description": "ID of Business Unit",
                "required": true
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll. Passed in \"updatedSince\" parameter on next call",
                "required": true
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the payload",
                "required": true
              },
              "hiddenAgents": {
                "type": "integer"
              },
              "agents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent",
                      "required": true
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Middle name of the Agent",
                      "required": true,
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "userId": {
                      "type": "string",
                      "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Email address of the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active",
                      "required": true
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team for the Agent",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team for the Agent"
                    },
                    "reportToId": {
                      "type": "integer",
                      "description": "ID of the manager the Agent reports to",
                      "required": true
                    },
                    "reportToName": {
                      "type": "string",
                      "description": "Name of the manager the Agent reports to",
                      "required": true
                    },
                    "isSupervisor": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is a Supervisor",
                      "required": true
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time of last login for Agent",
                      "required": true
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was last updated",
                      "required": true
                    },
                    "location": {
                      "type": "string",
                      "description": "Location for Agent",
                      "required": true
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Custom ID associated with Agent",
                      "required": true
                    },
                    "profileId": {
                      "type": "integer",
                      "description": "ID of the Security Profile assigned to the Agent",
                      "required": true
                    },
                    "profileName": {
                      "type": "string",
                      "description": "Name of the Security Profile assigned to the Agent",
                      "required": true
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "Country assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "countryName": {
                      "type": "string",
                      "description": "Proper name of Country assigned to the Agent",
                      "required": true
                    },
                    "state": {
                      "type": "string",
                      "description": "State or Province assigned to the Agent",
                      "required": true
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of City assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact",
                      "required": true
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a phone contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a workitem contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "defaultDialingPattern": {
                      "type": "integer",
                      "description": "ID of Dialing Pattern assigned to the Agent",
                      "required": true
                    },
                    "defaultDialingPatternName": {
                      "type": "string",
                      "description": "Name of Dialing Pattern assigned to the Agent",
                      "required": true
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean",
                      "description": "Indicates if Agent uses Team settings for max concurrent chats",
                      "required": true
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Indicates number of chat contacts the Agent can accept concurrently",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Agent",
                      "required": true
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was created",
                      "required": true
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent was marked inactive",
                      "required": true
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was hired",
                      "required": true
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was terminated",
                      "required": true
                    },
                    "hourlyCost": {
                      "type": "number",
                      "description": "Cost of Agent",
                      "required": true
                    },
                    "rehireStatus": {
                      "type": "boolean",
                      "description": "Indicates is the Agent is a re-hire",
                      "required": true
                    },
                    "employmentType": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 5.0
                    },
                    "employmentTypeName": {
                      "type": "string",
                      "description": "Name of the employment type"
                    },
                    "referral": {
                      "type": "string",
                      "description": "Description of any referral given",
                      "maxLength": 30
                    },
                    "atHome": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is an at home worker"
                    },
                    "hiringSource": {
                      "type": "string",
                      "description": "Source of Agent hiring"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "scheduleNotification": {
                      "type": "integer",
                      "description": "Time between work schedule notifications"
                    },
                    "federatedId": {
                      "type": "string",
                      "description": "ID of Agent in external Identity Provider.Used with Federated Identity Management functionality",
                      "required": true,
                      "maxLength": 128
                    },
                    "useTeamEmailAutoParkingLimit": {
                      "type": "boolean"
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "description": "Maximum number of Emails an Agent can have in their inbox.A number between 1 and 25",
                      "required": true,
                      "minimum": 1.0,
                      "maximum": 25.0
                    },
                    "sipUser": {
                      "type": "string",
                      "description": "Associates the Agent with a Skype for Business user.Used with the inContact Gateway for Skype for Business",
                      "required": true,
                      "maxLength": 100
                    },
                    "systemUser": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to authenticate with Windows for screen recording",
                      "required": true
                    },
                    "systemDomain": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to identify Windows domain for screen recording",
                      "required": true
                    },
                    "crmUserName": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to tag call recordings with metadata",
                      "required": true
                    },
                    "useAgentTimeZone": {
                      "type": "boolean"
                    },
                    "timeDisplayFormat": {
                      "type": "string",
                      "description": "Used by iWFO to indicate what if reports will use Agent's timezone"
                    },
                    "sendEmailNotifications": {
                      "type": "boolean",
                      "description": "Indicates if analytics notifications should be sent"
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "Key value used for Social analytics"
                    },
                    "telephone1": {
                      "type": "string",
                      "description": "Optional telephone number for Agent"
                    },
                    "telephone2": {
                      "type": "string",
                      "description": "Optional telephone number for Agent"
                    },
                    "userType": {
                      "type": "string",
                      "description": "Type of user for WFM"
                    },
                    "isWhatIfAgent": {
                      "type": "boolean",
                      "description": " Used to indicate if Agent is used in WFM simulations or planning"
                    },
                    "timeZoneOffset": {
                      "type": "string",
                      "description": "ISO 8601"
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamChatThreshold": {
                      "type": "boolean"
                    },
                    "emailThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamEmailThreshold": {
                      "type": "boolean"
                    },
                    "workItemThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamWorkItemThreshold": {
                      "type": "boolean"
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamRequestContact": {
                      "type": "boolean"
                    },
                    "voiceThreshold": {
                      "type": "integer"
                    },
                    "useTeamVoiceThreshold": {
                      "type": "boolean"
                    },
                    "recordingNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "subject": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "issuer": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "isOpenIdProfileComplete": {
                      "type": "boolean"
                    },
                    "teamUuid": {
                      "type": "string",
                      "example": "66ac6103-df24-22ea-886c-023113831ff4",
                      "description": "Added to facilitate CXOne suite. Value can be null.",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "maxPreview": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "voicemailRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    },
                    "isBillable": {
                      "type": "boolean"
                    },
                    "agentVoiceThreshold": {
                      "type": "integer"
                    },
                    "agentChatThreshold": {
                      "type": "integer"
                    },
                    "agentEmailThreshold": {
                      "type": "integer"
                    },
                    "agentWorkItemThreshold": {
                      "type": "integer"
                    },
                    "agentDeliveryMode": {
                      "type": "string"
                    },
                    "agentTotalContactCount": {
                      "type": "integer"
                    },
                    "agentContactAutoFocus": {
                      "type": "boolean"
                    },
                    "agentRequestContact": {
                      "type": "boolean"
                    },
                    "agentMaxVersion": {
                      "type": "integer"
                    },
                    "customerCard": {
                      "type": "boolean"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "userNameDomain": {
                      "type": "string"
                    },
                    "combinedUserNameDomain": {
                      "type": "string"
                    },
                    "rowNumber": {
                      "type": "integer"
                    },
                    "SmsThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "UseTeamsmsThreshold": {
                      "type": "boolean"
                    },
                    "LoginAuthenticatorId": {
                      "type": "string"
                    },
                    "DigitalThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 50.0
                    },
                    "UseTeamDigitalThreshold": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "agentPhoneTimeout": {
                      "type": "integer",
                      "nullable": true
                    },
                    "agentPhoneTimeoutSeconds": {
                      "type": "integer"
                    },
                    "digitalRefusalTimeout": {
                      "maximum": 300,
                      "minimum": 15,
                      "type": "integer"
                    },
                    "integratedSoftphoneWebRtcUrls": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "urlName": {
                            "type": "string",
                            "nullable": true
                          },
                          "weight": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "address1": {
                      "nullable": true,
                      "type": "string",
                      "maxLength": 100
                    },
                    "address2": {
                      "nullable": true,
                      "type": "string",
                      "maxLength": 100
                    },
                    "zipCode": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "noFixedAddress": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessUnitId": {
                "type": "integer",
                "description": "ID of Business Unit",
                "required": true
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll. Passed in \"updatedSince\" parameter on next call",
                "required": true
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the payload",
                "required": true
              },
              "hiddenAgents": {
                "type": "integer"
              },
              "agents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent",
                      "required": true
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Middle name of the Agent",
                      "required": true,
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "userId": {
                      "type": "string",
                      "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Email address of the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active",
                      "required": true
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team for the Agent",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team for the Agent"
                    },
                    "reportToId": {
                      "type": "integer",
                      "description": "ID of the manager the Agent reports to",
                      "required": true
                    },
                    "reportToName": {
                      "type": "string",
                      "description": "Name of the manager the Agent reports to",
                      "required": true
                    },
                    "isSupervisor": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is a Supervisor",
                      "required": true
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time of last login for Agent",
                      "required": true
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was last updated",
                      "required": true
                    },
                    "location": {
                      "type": "string",
                      "description": "Location for Agent",
                      "required": true
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Custom ID associated with Agent",
                      "required": true
                    },
                    "profileId": {
                      "type": "integer",
                      "description": "ID of the Security Profile assigned to the Agent",
                      "required": true
                    },
                    "profileName": {
                      "type": "string",
                      "description": "Name of the Security Profile assigned to the Agent",
                      "required": true
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "Country assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "countryName": {
                      "type": "string",
                      "description": "Proper name of Country assigned to the Agent",
                      "required": true
                    },
                    "state": {
                      "type": "string",
                      "description": "State or Province assigned to the Agent",
                      "required": true
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of City assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact",
                      "required": true
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a phone contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a workitem contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "defaultDialingPattern": {
                      "type": "integer",
                      "description": "ID of Dialing Pattern assigned to the Agent",
                      "required": true
                    },
                    "defaultDialingPatternName": {
                      "type": "string",
                      "description": "Name of Dialing Pattern assigned to the Agent",
                      "required": true
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean",
                      "description": "Indicates if Agent uses Team settings for max concurrent chats",
                      "required": true
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Indicates number of chat contacts the Agent can accept concurrently",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Agent",
                      "required": true
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was created",
                      "required": true
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent was marked inactive",
                      "required": true
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was hired",
                      "required": true
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was terminated",
                      "required": true
                    },
                    "hourlyCost": {
                      "type": "number",
                      "description": "Cost of Agent",
                      "required": true
                    },
                    "rehireStatus": {
                      "type": "boolean",
                      "description": "Indicates is the Agent is a re-hire",
                      "required": true
                    },
                    "employmentType": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 5.0
                    },
                    "employmentTypeName": {
                      "type": "string",
                      "description": "Name of the employment type"
                    },
                    "referral": {
                      "type": "string",
                      "description": "Description of any referral given",
                      "maxLength": 30
                    },
                    "atHome": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is an at home worker"
                    },
                    "hiringSource": {
                      "type": "string",
                      "description": "Source of Agent hiring"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "scheduleNotification": {
                      "type": "integer",
                      "description": "Time between work schedule notifications"
                    },
                    "federatedId": {
                      "type": "string",
                      "description": "ID of Agent in external Identity Provider.Used with Federated Identity Management functionality",
                      "required": true,
                      "maxLength": 128
                    },
                    "useTeamEmailAutoParkingLimit": {
                      "type": "boolean"
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "description": "Maximum number of Emails an Agent can have in their inbox.A number between 1 and 25",
                      "required": true,
                      "minimum": 1.0,
                      "maximum": 25.0
                    },
                    "sipUser": {
                      "type": "string",
                      "description": "Associates the Agent with a Skype for Business user.Used with the inContact Gateway for Skype for Business",
                      "required": true,
                      "maxLength": 100
                    },
                    "systemUser": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to authenticate with Windows for screen recording",
                      "required": true
                    },
                    "systemDomain": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to identify Windows domain for screen recording",
                      "required": true
                    },
                    "crmUserName": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to tag call recordings with metadata",
                      "required": true
                    },
                    "useAgentTimeZone": {
                      "type": "boolean"
                    },
                    "timeDisplayFormat": {
                      "type": "string",
                      "description": "Used by iWFO to indicate what if reports will use Agent's timezone"
                    },
                    "sendEmailNotifications": {
                      "type": "boolean",
                      "description": "Indicates if analytics notifications should be sent"
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "Key value used for Social analytics"
                    },
                    "telephone1": {
                      "type": "string",
                      "description": "Optional telephone number for Agent"
                    },
                    "telephone2": {
                      "type": "string",
                      "description": "Optional telephone number for Agent"
                    },
                    "userType": {
                      "type": "string",
                      "description": "Type of user for WFM"
                    },
                    "isWhatIfAgent": {
                      "type": "boolean",
                      "description": " Used to indicate if Agent is used in WFM simulations or planning"
                    },
                    "timeZoneOffset": {
                      "type": "string",
                      "description": "ISO 8601"
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamChatThreshold": {
                      "type": "boolean"
                    },
                    "emailThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamEmailThreshold": {
                      "type": "boolean"
                    },
                    "workItemThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamWorkItemThreshold": {
                      "type": "boolean"
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamRequestContact": {
                      "type": "boolean"
                    },
                    "voiceThreshold": {
                      "type": "integer"
                    },
                    "useTeamVoiceThreshold": {
                      "type": "boolean"
                    },
                    "recordingNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "subject": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "issuer": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "isOpenIdProfileComplete": {
                      "type": "boolean"
                    },
                    "teamUuid": {
                      "type": "string",
                      "example": "66ac6103-df24-22ea-886c-023113831ff4",
                      "description": "Added to facilitate CXOne suite. Value can be null.",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "maxPreview": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "voicemailRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    },
                    "isBillable": {
                      "type": "boolean"
                    },
                    "agentVoiceThreshold": {
                      "type": "integer"
                    },
                    "agentChatThreshold": {
                      "type": "integer"
                    },
                    "agentEmailThreshold": {
                      "type": "integer"
                    },
                    "agentWorkItemThreshold": {
                      "type": "integer"
                    },
                    "agentDeliveryMode": {
                      "type": "string"
                    },
                    "agentTotalContactCount": {
                      "type": "integer"
                    },
                    "agentContactAutoFocus": {
                      "type": "boolean"
                    },
                    "agentRequestContact": {
                      "type": "boolean"
                    },
                    "agentMaxVersion": {
                      "type": "integer"
                    },
                    "customerCard": {
                      "type": "boolean"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "userNameDomain": {
                      "type": "string"
                    },
                    "combinedUserNameDomain": {
                      "type": "string"
                    },
                    "rowNumber": {
                      "type": "integer"
                    },
                    "SmsThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "UseTeamsmsThreshold": {
                      "type": "boolean"
                    },
                    "LoginAuthenticatorId": {
                      "type": "string"
                    },
                    "DigitalThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 50.0
                    },
                    "UseTeamDigitalThreshold": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "agentPhoneTimeout": {
                      "type": "integer",
                      "nullable": true
                    },
                    "agentPhoneTimeoutSeconds": {
                      "type": "integer"
                    },
                    "digitalRefusalTimeout": {
                      "maximum": 300,
                      "minimum": 15,
                      "type": "integer"
                    },
                    "integratedSoftphoneWebRtcUrls": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "urlName": {
                            "type": "string",
                            "nullable": true
                          },
                          "weight": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "address1": {
                      "nullable": true,
                      "type": "string",
                      "maxLength": 100
                    },
                    "address2": {
                      "nullable": true,
                      "type": "string",
                      "maxLength": 100
                    },
                    "zipCode": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "noFixedAddress": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "<p>Invalid fields</p><p>Invalid orderBy</p><p>Invalid top</p>"
        },
        "403": {
          "description": "Restricted agentId"
        },
        "404": {
          "description": "<p>Invalid Agent Id</p><p>Agent Id Not Exist</p>"
        },
        "409": {
          "description": "Invalid Permissions"
        },
        "500": {
          "description": "Error has occured while calling external service"
        }
      }
    },
    "post": {
      "tags": [ "Agents" ],
      "summary": "Updated in v24.0 Create an agent",
      "operationId": "post-agents",
      "description": "This method will create new Agents in the business unit.The Integrated Softphone (WebRTC) URLs and their weights for the Agent. Only applies if the business unit is configured for Integrated Softphone (WebRTC) URLs to be custom, not default. Limit of 2 URLs total that can be configured.<br/><br/><b>urlName: </b> Indicates an Integrated Softphone (WebRTC) URL selected for the user. Must be a valid value from the Integrated Softphone URL drop-down lists in the user interface. Limit of 2 URLs total that can be configured.<br/><b>weight: </b> The relative weight assigned to an Integrated Softphone URL. Higher numbers correspond to more weight or priority compared to lower numbers. Accepted values: 10, 20, 30, 40, 50, 60, 70, 80, 90, 100. Note: does not apply when urlName is set to 'Default. <br/><br/>Now returns integratedSoftphoneWebRtcUrls array.<br/><br/><b><i><span style='color:red'> NOTE: </span></i></b> This field is not shown when business unit configuration for Integrated Softphone (WebRTC) URLs is default. <div class='tabs_wrapper' data-path='admin_agents_postAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "agents",
          "description": "agents",
          "type": "DynamicData",
          "in": "body",
          "allowMultiple": true,
          "schema": {
            "$ref": "#/definitions/postAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postAgentsResponse"
          }
        },
        "206": {
          "description": "Partial success. One or more Agent not created",
          "schema": {
            "$ref": "#/definitions/postAgentsResponse"
          }
        },
        "400": {
          "description": "<p><p><p><p>Cannot create more than {0} agents at a time</p><p>Invalid roleId</p></p><p>Invalid agents - cannot be null or empty</p></p><p>Enter ProfileId or RoleId</p></p><p>ProfileId and RoleId cannot be specified at the same time</p>"
        },
        "409": {
          "description": "Unauthorized"
        }
      }
    },
    "put": {
      "tags": [ "Agents" ],
      "summary": "Updated in v24.0  Update an agent",
      "operationId": "put-agents",
      "description": "This method will update Agents in the business unit. <div class='tabs_wrapper' data-path='admin_agents_putAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "agents",
          "description": "agents",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/putAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/putAgentsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid agents</p><p>Partial Success</p>"
        },
        "409": {
          "description": "Invalid Permissions/ Unauthorized"
        }
      }
    }
  },
  "agents_agentId": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Updated in v24.0  Get Agent Details by Agent ID",
      "operationId": "get-agents-id",
      "description": "This method will return the key attributes for the Agent specified by \"agentId\". The Integrated Softphone (WebRTC) URLs and their weights for the Agent. Only applies if the business unit is configured for Integrated Softphone (WebRTC) URLs to be custom, not default. Limit of 2 URLs total that can be configured.<br/><br/><b>urlName: </b> Indicates an Integrated Softphone (WebRTC) URL selected for the user. Must be a valid value from the Integrated Softphone URL drop-down lists in the user interface. Limit of 2 URLs total that can be configured.<br/><b>weight: </b> The relative weight assigned to an Integrated Softphone URL. Higher numbers correspond to more weight or priority compared to lower numbers. Accepted values: 10, 20, 30, 40, 50, 60, 70, 80, 90, 100. Note: does not apply when urlName is set to 'Default. <br/><br/>Now returns integratedSoftphoneWebRtcUrls array.<br/><br/><b><i><span style='color:red'> NOTE: </span></i></b> This field is not shown when business unit configuration for Integrated Softphone (WebRTC) URLs is default.<div class='tabs_wrapper' data-path='admin_agents_getAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "agents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent",
                      "required": true
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Middle name of the Agent",
                      "required": true,
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "userId": {
                      "type": "string",
                      "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Email address of the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active",
                      "required": true
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team for the Agent",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team for the Agent"
                    },
                    "reportToId": {
                      "type": "integer",
                      "description": "ID of the manager the Agent reports to",
                      "required": true
                    },
                    "reportToName": {
                      "type": "string",
                      "description": "Name of the manager the Agent reports to",
                      "required": true
                    },
                    "isSupervisor": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is a Supervisor",
                      "required": true
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time of last login for Agent",
                      "required": true
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was last updated",
                      "required": true
                    },
                    "location": {
                      "type": "string",
                      "description": "Location for Agent",
                      "required": true
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Custom ID associated with Agent",
                      "required": true
                    },
                    "profileId": {
                      "type": "integer",
                      "description": "ID of the Security Profile assigned to the Agent",
                      "required": true
                    },
                    "profileName": {
                      "type": "string",
                      "description": "Name of the Security Profile assigned to the Agent",
                      "required": true
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "Country assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "countryName": {
                      "type": "string",
                      "description": "Proper name of Country assigned to the Agent",
                      "required": true
                    },
                    "state": {
                      "type": "string",
                      "description": "State or Province assigned to the Agent",
                      "required": true
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of City assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact",
                      "required": true
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a phone contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a workitem contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "defaultDialingPattern": {
                      "type": "integer",
                      "description": "ID of Dialing Pattern assigned to the Agent",
                      "required": true
                    },
                    "defaultDialingPatternName": {
                      "type": "string",
                      "description": "Name of Dialing Pattern assigned to the Agent",
                      "required": true
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean",
                      "description": "Indicates if Agent uses Team settings for max concurrent chats",
                      "required": true
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Indicates number of chat contacts the Agent can accept concurrently",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Agent",
                      "required": true
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was created",
                      "required": true
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent was marked inactive",
                      "required": true
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was hired",
                      "required": true
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was terminated",
                      "required": true
                    },
                    "hourlyCost": {
                      "type": "number",
                      "description": "Cost of Agent",
                      "required": true
                    },
                    "rehireStatus": {
                      "type": "boolean",
                      "description": "Indicates is the Agent is a re-hire",
                      "required": true
                    },
                    "employmentType": {
                      "type": "integer",
                      "description": "ID of the employment type",
                      "minimum": 1.0,
                      "maximum": 5.0
                    },
                    "employmentTypeName": {
                      "type": "string",
                      "description": "Name of the employment type"
                    },
                    "referral": {
                      "type": "string",
                      "description": "Description of any referral given",
                      "maxLength": 30
                    },
                    "atHome": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is an at home worker"
                    },
                    "hiringSource": {
                      "type": "string",
                      "description": "Source of Agent hiring"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "scheduleNotification": {
                      "type": "integer",
                      "description": "Time between work schedule notifications"
                    },
                    "federatedId": {
                      "type": "string",
                      "description": "ID of Agent in external Identity Provider.Used with Federated Identity Management functionality",
                      "required": true,
                      "maxLength": 128
                    },
                    "useTeamEmailAutoParkingLimit": {
                      "type": "boolean"
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "description": "Maximum number of Emails an Agent can have in their inbox.A number between 1 and 25",
                      "required": true,
                      "minimum": 1.0,
                      "maximum": 25.0
                    },
                    "sipUser": {
                      "type": "string",
                      "description": "Associates the Agent with a Skype for Business user.Used with the inContact Gateway for Skype for Business",
                      "required": true,
                      "maxLength": 100
                    },
                    "systemUser": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to authenticate with Windows for screen recording",
                      "required": true
                    },
                    "systemDomain": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to identify Windows domain for screen recording",
                      "required": true
                    },
                    "crmUserName": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to tag call recordings with metadata",
                      "required": true
                    },
                    "useAgentTimeZone": {
                      "type": "boolean",
                      "description": "Used by iWFO to indicate what if reports will use Agent's timezone"
                    },
                    "timeDisplayFormat": {
                      "type": "string",
                      "description": "Used by iWFO to indicate what if reports will use Agent's timezone"
                    },
                    "sendEmailNotifications": {
                      "type": "boolean",
                      "description": "Indicates if analytics notifications should be sent"
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "Key value used for Social analytics"
                    },
                    "telephone1": {
                      "type": "string",
                      "description": "Optional telephone number for Agent"
                    },
                    "telephone2": {
                      "type": "string",
                      "description": "Optional telephone number for Agent"
                    },
                    "userType": {
                      "type": "string",
                      "description": "Type of user for WFM"
                    },
                    "isWhatIfAgent": {
                      "type": "boolean",
                      "description": "Used to indicate if Agent is used in WFM simulations or planning"
                    },
                    "timeZoneOffset": {
                      "type": "string",
                      "description": "ISO 8601 formatted offset from UTC"
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamChatThreshold": {
                      "type": "boolean"
                    },
                    "emailThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamEmailThreshold": {
                      "type": "boolean"
                    },
                    "workItemThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamWorkItemThreshold": {
                      "type": "boolean"
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamRequestContact": {
                      "type": "boolean"
                    },
                    "voiceThreshold": {
                      "type": "integer"
                    },
                    "useTeamVoiceThreshold": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "recordingNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "subject": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "issuer": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "isOpenIdProfileComplete": {
                      "type": "boolean"
                    },
                    "teamUuid": {
                      "type": "string",
                      "example": "66ac6103-df24-22ea-886c-023113831ff4",
                      "description": "Added to facilitate CXOne suite. Value can be null.",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "maxPreview": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "voicemailRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    },
                    "isBillable": {
                      "type": "boolean"
                    },
                    "agentVoiceThreshold": {
                      "type": "integer"
                    },
                    "agentChatThreshold": {
                      "type": "integer"
                    },
                    "agentEmailThreshold": {
                      "type": "integer"
                    },
                    "agentWorkItemThreshold": {
                      "type": "integer"
                    },
                    "agentDeliveryMode": {
                      "type": "string"
                    },
                    "agentTotalContactCount": {
                      "type": "integer"
                    },
                    "agentContactAutoFocus": {
                      "type": "boolean"
                    },
                    "agentRequestContact": {
                      "type": "boolean"
                    },
                    "agentMaxVersion": {
                      "type": "integer"
                    },
                    "customerCard": {
                      "type": "boolean"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "userNameDomain": {
                      "type": "string"
                    },
                    "combinedUserNameDomain": {
                      "type": "string"
                    },
                    "rowNumber": {
                      "type": "integer"
                    },
                    "SmsThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "UseTeamsmsThreshold": {
                      "type": "boolean"
                    },
                    "LoginAuthenticatorId": {
                      "type": "string"
                    },
                    "DigitalThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 50.0
                    },
                    "UseTeamDigitalThreshold": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "agentPhoneTimeout": {
                      "type": "integer",
                      "nullable": true
                    },
                    "agentPhoneTimeoutSeconds": {
                      "type": "integer"
                    },
                    "digitalRefusalTimeout": {
                      "maximum": 300,
                      "minimum": 15,
                      "type": "integer"
                    },
                    "integratedSoftphoneWebRtcUrls": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "urlName": {
                            "type": "string",
                            "nullable": true
                          },
                          "weight": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "address1": {
                      "nullable": true,
                      "type": "string",
                      "maxLength": 100
                    },
                    "address2": {
                      "nullable": true,
                      "type": "string",
                      "maxLength": 100
                    },
                    "zipCode": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "noFixedAddress": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "agents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent",
                      "required": true
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Middle name of the Agent",
                      "required": true,
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "userId": {
                      "type": "string",
                      "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Email address of the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active",
                      "required": true
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team for the Agent",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team for the Agent"
                    },
                    "reportToId": {
                      "type": "integer",
                      "description": "ID of the manager the Agent reports to",
                      "required": true
                    },
                    "reportToName": {
                      "type": "string",
                      "description": "Name of the manager the Agent reports to",
                      "required": true
                    },
                    "isSupervisor": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is a Supervisor",
                      "required": true
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time of last login for Agent",
                      "required": true
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was last updated",
                      "required": true
                    },
                    "location": {
                      "type": "string",
                      "description": "Location for Agent",
                      "required": true
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Custom ID associated with Agent",
                      "required": true
                    },
                    "profileId": {
                      "type": "integer",
                      "description": "ID of the Security Profile assigned to the Agent",
                      "required": true
                    },
                    "profileName": {
                      "type": "string",
                      "description": "Name of the Security Profile assigned to the Agent",
                      "required": true
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "Country assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "countryName": {
                      "type": "string",
                      "description": "Proper name of Country assigned to the Agent",
                      "required": true
                    },
                    "state": {
                      "type": "string",
                      "description": "State or Province assigned to the Agent",
                      "required": true
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of City assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact",
                      "required": true
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a phone contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a workitem contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "defaultDialingPattern": {
                      "type": "integer",
                      "description": "ID of Dialing Pattern assigned to the Agent",
                      "required": true
                    },
                    "defaultDialingPatternName": {
                      "type": "string",
                      "description": "Name of Dialing Pattern assigned to the Agent",
                      "required": true
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean",
                      "description": "Indicates if Agent uses Team settings for max concurrent chats",
                      "required": true
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Indicates number of chat contacts the Agent can accept concurrently",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Agent",
                      "required": true
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was created",
                      "required": true
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent was marked inactive",
                      "required": true
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was hired",
                      "required": true
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was terminated",
                      "required": true
                    },
                    "hourlyCost": {
                      "type": "number",
                      "description": "Cost of Agent",
                      "required": true
                    },
                    "rehireStatus": {
                      "type": "boolean",
                      "description": "Indicates is the Agent is a re-hire",
                      "required": true
                    },
                    "employmentType": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 5.0
                    },
                    "employmentTypeName": {
                      "type": "string",
                      "description": "Name of the employment type"
                    },
                    "referral": {
                      "type": "string",
                      "description": "Description of any referral given",
                      "maxLength": 30
                    },
                    "atHome": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is an at home worker"
                    },
                    "hiringSource": {
                      "type": "string",
                      "description": "Source of Agent hiring"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "scheduleNotification": {
                      "type": "integer",
                      "description": "Time between work schedule notifications"
                    },
                    "federatedId": {
                      "type": "string",
                      "description": "ID of Agent in external Identity Provider.Used with Federated Identity Management functionality",
                      "required": true,
                      "maxLength": 128
                    },
                    "useTeamEmailAutoParkingLimit": {
                      "type": "boolean"
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "description": "Maximum number of Emails an Agent can have in their inbox.A number between 1 and 25",
                      "required": true,
                      "minimum": 1.0,
                      "maximum": 25.0
                    },
                    "sipUser": {
                      "type": "string",
                      "description": "Associates the Agent with a Skype for Business user.Used with the inContact Gateway for Skype for Business",
                      "required": true,
                      "maxLength": 100
                    },
                    "systemUser": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to authenticate with Windows for screen recording",
                      "required": true
                    },
                    "systemDomain": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to identify Windows domain for screen recording",
                      "required": true
                    },
                    "crmUserName": {
                      "type": "string",
                      "maxLength": 100,
                      "description": "Used by iWFO to tag call recordings with metadata",
                      "required": true
                    },
                    "useAgentTimeZone": {
                      "type": "boolean"
                    },
                    "timeDisplayFormat": {
                      "type": "string",
                      "description": "Used by iWFO to indicate what if reports will use Agent's timezone"
                    },
                    "sendEmailNotifications": {
                      "type": "boolean",
                      "description": "Indicates if analytics notifications should be sent"
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "Key value used for Social analytics"
                    },
                    "telephone1": {
                      "type": "string",
                      "description": "Optional telephone number for Agent"
                    },
                    "telephone2": {
                      "type": "string",
                      "description": "Optional telephone number for Agent"
                    },
                    "userType": {
                      "type": "string",
                      "description": "Type of user for WFM"
                    },
                    "isWhatIfAgent": {
                      "type": "boolean",
                      "description": " Used to indicate if Agent is used in WFM simulations or planning"
                    },
                    "timeZoneOffset": {
                      "type": "string",
                      "description": "ISO 8601"
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamChatThreshold": {
                      "type": "boolean"
                    },
                    "emailThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamEmailThreshold": {
                      "type": "boolean"
                    },
                    "workItemThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamWorkItemThreshold": {
                      "type": "boolean"
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamRequestContact": {
                      "type": "boolean"
                    },
                    "voiceThreshold": {
                      "type": "integer"
                    },
                    "useTeamVoiceThreshold": {
                      "type": "boolean"
                    },
                    "recordingNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "subject": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "issuer": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "isOpenIdProfileComplete": {
                      "type": "boolean"
                    },
                    "teamUuid": {
                      "type": "string",
                      "example": "66ac6103-df24-22ea-886c-023113831ff4",
                      "description": "Added to facilitate CXOne suite. Value can be null.",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "maxPreview": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "voicemailRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    },
                    "isBillable": {
                      "type": "boolean"
                    },
                    "agentVoiceThreshold": {
                      "type": "integer"
                    },
                    "agentChatThreshold": {
                      "type": "integer"
                    },
                    "agentEmailThreshold": {
                      "type": "integer"
                    },
                    "agentWorkItemThreshold": {
                      "type": "integer"
                    },
                    "agentDeliveryMode": {
                      "type": "string"
                    },
                    "agentTotalContactCount": {
                      "type": "integer"
                    },
                    "agentContactAutoFocus": {
                      "type": "boolean"
                    },
                    "agentRequestContact": {
                      "type": "boolean"
                    },
                    "agentMaxVersion": {
                      "type": "integer"
                    },
                    "customerCard": {
                      "type": "boolean"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "userNameDomain": {
                      "type": "string"
                    },
                    "combinedUserNameDomain": {
                      "type": "string"
                    },
                    "rowNumber": {
                      "type": "integer"
                    },
                    "SmsThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "UseTeamsmsThreshold": {
                      "type": "boolean"
                    },
                    "LoginAuthenticatorId": {
                      "type": "string"
                    },
                    "DigitalThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 50.0
                    },
                    "UseTeamDigitalThreshold": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "agentPhoneTimeout": {
                      "type": "integer",
                      "nullable": true
                    },
                    "agentPhoneTimeoutSeconds": {
                      "type": "integer"
                    },
                    "digitalRefusalTimeout": {
                      "maximum": 300,
                      "minimum": 15,
                      "type": "integer"
                    },
                    "integratedSoftphoneWebRtcUrls": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "urlName": {
                            "type": "string",
                            "nullable": true
                          },
                          "weight": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "address1": {
                      "nullable": true,
                      "type": "string",
                      "maxLength": 100
                    },
                    "address2": {
                      "nullable": true,
                      "type": "string",
                      "maxLength": 100
                    },
                    "zipCode": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "noFixedAddress": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid Parameters"
        },
        "403": {
          "description": "<p>AgentId or UserId is restricted</p><p>Forbidden</p>"
        },
        "404": {
          "description": "<p>AgentId or UserId does not exist</p><p>Invalid agentId or userId</p>"
        },
        "409": {
          "description": "Invalid Permissions"
        },
        "500": {
          "description": "Error has occured while calling external service"
        }
      }
    },
    "put": {
      "tags": [ "Agents" ],
      "summary": "Updated in v24.0 Update an Agent",
      "operationId": "put-agents-id",
      "description": "This method will update the attributes for the Agent specified by agentId.<br/><br/><b><i><span style='color:red'>NOTE: </span></i></b>This method should not be used to update a user in UserHub.  If business unit is set to Omni Session Handling when requesting \" deliveryMode \" as <b>\"Single Contact\" </b> \"totalContactCount\" is required to be \"1\". <br/><br/> <div class='tabs_wrapper' data-path='admin_agents_putAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "name": "agent",
          "description": "Agent Object",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "agent": {
                "type": "object",
                "properties": {
                  "agentId": {
                    "type": "integer",
                    "maxLength": 38,
                    "description": "Agent ID that need to be updated"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "Agent First Name",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "middleName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Middle Name",
                    "maxLength": 50
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Agent Last Name",
                    "minLength": 1,
                    "maxLength": 50
                  },
                  "teamId": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Team Id"
                  },
                  "teamUuid": {
                    "type": "string",
                    "nullable": true,
                    "description": "Added to facilitate CXOne suite. Value can be null."
                  },
                  "reportToId": {
                    "type": "integer",
                    "description": "Agent Manager Id"
                  },
                  "internalId": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Custom Id",
                    "maxLength": 50
                  },
                  "profileId": {
                    "type": "integer",
                    "description": "Unique identifier for a security profile"
                  },
                  "roleId": {
                    "type": "string",
                    "nullable": true,
                    "description": "Unique identifier for a role"
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "Agent Email Address"
                  },
                  "userName": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string",
                    "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                    "nullable": true
                  },
                  "timeZone": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Timezone",
                    "minLength": 1
                  },
                  "country": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Country",
                    "minLength": 1
                  },
                  "state": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent State or Province"
                  },
                  "city": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent City",
                    "minLength": 1
                  },
                  "chatRefusalTimeout": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Time in seconds the Agent has to accept a chat contact",
                    "minimum": 15.0,
                    "maximum": 300.0
                  },
                  "phoneRefusalTimeout": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Time in seconds the Agent has to accept a phone contact",
                    "minimum": 15.0,
                    "maximum": 300.0
                  },
                  "workItemRefusalTimeout": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Time in seconds the Agent has to accept a workitem contact",
                    "minimum": 15.0,
                    "maximum": 300.0
                  },
                  "defaultDialingPattern": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Agent Dialing Pattern Id"
                  },
                  "useTeamMaxConcurrentChats": {
                    "type": "boolean"
                  },
                  "maxConcurrentChats": {
                    "type": "integer",
                    "nullable": true,
                    "description": "Indicates number of chat contacts the Agent can accept concurrently",
                    "minimum": 0.0,
                    "maximum": 12.0
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "locationId": {
                    "type": "integer"
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Notes",
                    "maxLength": 1000
                  },
                  "hireDate": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Hire Date (ISO 8601 time)"
                  },
                  "terminationDate": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Termination Date(ISO 8601 time)"
                  },
                  "hourlyCost": {
                    "type": "number",
                    "description": "Agent Hourly Cost"
                  },
                  "rehireStatus": {
                    "type": "boolean",
                    "description": "Agent Rehire Status"
                  },
                  "employmentType": {
                    "type": "integer",
                    "description": "Employment Type Id. 1 for Full-Time, 2 for Part-Time, 3 for Temporary, 4 for Outsources or 5 for Other"
                  },
                  "referral": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Referral Description",
                    "maxLength": 30
                  },
                  "atHome": {
                    "type": "boolean",
                    "description": "Agent At Home Worker Status"
                  },
                  "hiringSource": {
                    "type": "integer",
                    "description": "Agent Hiring Source Id"
                  },
                  "ntLoginName": {
                    "type": "string",
                    "nullable": true
                  },
                  "customerCard": {
                    "type": "boolean"
                  },
                  "custom1": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Custom Value 1. 40 characters max",
                    "maxLength": 40
                  },
                  "custom2": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Custom Value 2. 40 characters max",
                    "maxLength": 40
                  },
                  "custom3": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Custom Value 3. 40 characters max",
                    "maxLength": 40
                  },
                  "custom4": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Custom Value 4. 40 characters max",
                    "maxLength": 40
                  },
                  "custom5": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Custom Value 5. 40 characters max",
                    "maxLength": 40
                  },
                  "scheduleNotification": {
                    "type": "integer",
                    "description": "Time between work schedule notifications"
                  },
                  "federatedId": {
                    "type": "string",
                    "nullable": true,
                    "description": "Agent Id in External Identity Provider.  Used with Federated Identity Management functionality",
                    "maxLength": 128
                  },
                  "useTeamEmailAutoParkingLimit": {
                    "type": "boolean"
                  },
                  "maxEmailAutoParkingLimit": {
                    "type": "integer",
                    "minimum": 1.0,
                    "maximum": 25.0
                  },
                  "sipUser": {
                    "type": "string",
                    "nullable": true,
                    "description": "Used to associate the Agent with a Skype for Business user.  Used with the inContact Gateway for Skype for Business",
                    "maxLength": 100
                  },
                  "systemUser": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 100
                  },
                  "systemDomain": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 100
                  },
                  "crmUserName": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 100
                  },
                  "useAgentTimeZone": {
                    "type": "boolean"
                  },
                  "timeDisplayFormat": {
                    "type": "integer"
                  },
                  "sendEmailNotifications": {
                    "type": "boolean"
                  },
                  "apiKey": {
                    "type": "string",
                    "nullable": true
                  },
                  "telephone1": {
                    "type": "string",
                    "nullable": true
                  },
                  "telephone2": {
                    "type": "string",
                    "nullable": true
                  },
                  "userType": {
                    "type": "string",
                    "nullable": true
                  },
                  "isWhatIfAgent": {
                    "type": "boolean"
                  },
                  "requestContact": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "chatThreshold": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 0.0,
                    "maximum": 12.0
                  },
                  "useTeamChatThreshold": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "emailThreshold": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 0.0,
                    "maximum": 25.0
                  },
                  "useTeamEmailThreshold": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "workItemThreshold": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 0.0,
                    "maximum": 25.0
                  },
                  "useTeamWorkItemThreshold": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "smsThreshold": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 0.0,
                    "maximum": 12.0
                  },
                  "useTeamSmsThreshold": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "digitalThreshold": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 50.0
                  },
                  "useTeamDigitalThreshold": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "voiceThreshold": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 0.0,
                    "maximum": 1.0
                  },
                  "useTeamVoiceThreshold": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "contactAutoFocus": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "useTeamContactAutoFocus": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "useTeamRequestContact": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "recordingNumbers": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "number": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 100
                        }
                      },
                      "required": [
                        "number"
                      ]
                    }
                  },
                  "subject": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 255
                  },
                  "issuer": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 255
                  },
                  "isOpenIdProfileComplete": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "deliveryMode": {
                    "type": "string",
                    "nullable": true
                  },
                  "totalContactCount": {
                    "type": "integer",
                    "nullable": true
                  },
                  "useTeamDeliveryModeSettings": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "emailRefusalTimeOut": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 15.0,
                    "maximum": 300.0
                  },
                  "voicemailRefusalTimeOut": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 15.0,
                    "maximum": 300.0
                  },
                  "smsRefusalTimeout": {
                    "type": "integer",
                    "nullable": true,
                    "minimum": 15.0,
                    "maximum": 300.0
                  },
                  "isBillable": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "useTeamDefaults": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "agentvoiceThreshold": {
                    "type": "integer",
                    "nullable": true
                  },
                  "agentchatThreshold": {
                    "type": "integer",
                    "nullable": true
                  },
                  "agentemailThreshold": {
                    "type": "integer",
                    "nullable": true
                  },
                  "agentworkItemThreshold": {
                    "type": "integer",
                    "nullable": true
                  },
                  "agentSmsThreshold": {
                    "type": "integer",
                    "nullable": true
                  },
                  "agentDeliveryMode": {
                    "type": "string",
                    "nullable": true
                  },
                  "agentTotalContactCount": {
                    "type": "integer",
                    "nullable": true
                  },
                  "agentRequestContact": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "agentContactAutoFocus": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "integratedSoftphoneWebRtcUrls": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "urlName": {
                          "type": "string",
                          "nullable": true
                        },
                        "weight": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  },
                  "agentMaxVersion": {
                    "type": "integer",
                    "nullable": true
                  },
                  "agentPhoneTimeout": {
                    "type": "integer",
                    "nullable": true
                  },
                  "digitalRefusalTimeout": {
                    "maximum": 300,
                    "minimum": 15,
                    "type": "integer"
                  },
                  "address1": {
                    "nullable": true,
                    "type": "string",
                    "maxLength": 100
                  },
                  "address2": {
                    "nullable": true,
                    "type": "string",
                    "maxLength": 100
                  },
                  "zipCode": {
                    "nullable": true,
                    "type": "string",
                    "maxLength": 50
                  },
                  "noFixedAddress": {
                    "type": "boolean"
                  }
                },
                "required": [ "agent" ]
              }
            },
            "required": [
              "agent"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "error": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "<p><p><p><p><p><p><p><p><p><p><p><p><p><p><p><p><p><p><p>Invalid {0}</p><p>Invalid {0} - '{1}', must be unique</p></p><p>Invalid {0} - maximum length is {1} characters</p></p><p>Invalid {0} - '{1}', does not exist</p></p><p>Invalid {0} - '{1}', must be an integer, Invalid ParamMustInt</p></p><p>Invalid {0} cannot be null or empty</p></p><p>Invalid {0} - '{1}', must be a double</p></p><p>Invalid {0} - '{1}', is not a valid statecode</p></p><p>TeamId or teamUuid is required</p></p><p>Invalid {0} - '{1}', must be an integer, Invalid TeamId</p></p><p>Invalid {0} - '{1}', must be a GUID, Invalid TeamUuId </p></p><p>Invalid {0} - '{1}', must be a GUID, Invalid RoleId </p></p><p>Enter ProfileId or RoleId</p></p><p>profileId and roleId cannot be specified at the same time</p></p><p>Invalid deliveryMode - Cannot be null or empty.</p></p><p>Invalid totalContactCount - Expected Integer but got Null.</p></p><p>Invalid totalContactCount - Integer '{0}' exceeds maximum value of 1.</p></p><p>Invalid totalContactCount. '{0}' must be >= 2 and <= <sum of contact counts > and <= 63.</p></p><p>Invalid useTeamDeliveryModeSettings - Expected boolean but got Null.</p></p><p>Invalid deliveryMode - '{0}'.</p>"
        },
        "401": {
          "description": "<p>Invalid {0} - '{1}', does not exist. TeamUuId Does Not Exist</p><p>Invalid {0} - '{1}', does not exist. RoleId Does Not Exist</p>"
        },
        "402": {
          "description": "Maximum active user limit of '{0}' has been reached"
        },
        "403": {
          "description": "{0} - '{1}' is restricted"
        },
        "404": {
          "description": "<p>Invalid {0}Id - '{1}'</p><p>Invalid {0} - '{1}', must be a GUID or an integer</p>"
        },
        "409": {
          "description": "<p>Exceeds limit. Maximum non-billable agents allowed is 5</p><p>Unauthorized</p>"
        }
      }
    }
  },
  "agents-agentId-state": {
    "post": {
      "tags": [ "Agents" ],
      "summary": "Sets an Agent's State",
      "operationId": "SetAgentState",
      "description": "This method will set the state of the Agent who owns the session specified by sessionId.<br><br>An Agent can only be set to either \"Available\" or \"Unavailable\"  state.  The other Agent States are controlled by the platform as it route contacts or as the Agent logs in and out of the platform. There is only one \"Available\" state, but there are multiple reasons an Agent can be in the \"Unavailable\" state as described below:</p><ol style='margin-left: 20px; list-style-type: decimal'><li style='list-style-type: decimal'>The Agent can be in the default \"Unavailable\" state with no reason code. This is the state when an agent session is started.<br/></li><li style='list-style-type: decimal'>The Agent can be assigned a reason code for being \"Unavailable\" from a collection of reasons known as \"unavailable codes\". These unavailable codes are created by the customer. For example, they may have an \"On Break\" unavailable code, a \"Lunch\" unavailable code, or a \"Training\" unavailable code, etc.  These unavailable codes can be retrieved from the <b><i><a href='AdminAPI#!/Agents/getTeamUnavailableCodes'>GET /teams/{teamId}/unavailable-codes</a></i></b> method.<br/></li><li style='list-style-type: decimal'>The Agent can be in an \"After Contact Work\" (ACW) state. These are special unavailable states that are created by the customer on the inContact platform, and are unavailable codes with the \"ACW\" flag. These unavailable codes can only be used as \"reason\" if the Agent is handling an active contact, otherwise the API will return a 409 error</li></ol><p>Unavailable codes that are \"ACW\" states will have the \"isAcw\" flag set to \"true\". Note that ACW unavailable codes can also have an auto-timeout, which is used by the platform to automatically end the ACW unavailable code and move the Agent to their \"next\" state. You can use this to display a countdown timer to the Agent when the ACW unavailable code begins, enabling the Agent to see how much time they have before the ACW unavailable code ends.</p><p>Setting the Agent’s session to an ACW unavailable code causes the Agent to go into an \"Unavailable\" state during which the time is counted against the active interaction time, even though the interaction with the Patron has ended. While in this state, the Agent will not be delivered other interactions (because they are \"Unavailable\"), but the time is recorded as \"work\" time for the interaction that just ended.<div class='tabs_wrapper' data-path='admin_agents_postState.html'></div></p></span>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentID"
        },
        {
          "name": "state",
          "description": "Agent State (Available or Unavailable)",
          "required": true,
          "type": "string",
          "enum": [
            "Available",
            "Unavailable"
          ],
          "in": "query"
        },
        {
          "name": "outStateId",
          "description": "Unavailable code, if the requested state is Unavailable.",
          "type": "integer",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid state - '{0}', Must be either \"Available\" or \"Unavailable\"</p><p>Invalid outStateId - '{0}', Invalid Unavailable Code</p><p>Invalid outStateId - '{0}', must be an integer </p>"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}', is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}', Agent session not started</p><p>Invalid agentId - '{0}'</p>"
        },
        "409": {
          "description": "Invalid state - '{0}'"
        }
      }
    }
  },
  "agents_skills": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns Skills assigned to all Agents",
      "nickname": "AllAgentSkillAssignments",
      "description": "This method will return the skill mappings for all agents currently configured in the business unit.<div class='tabs_wrapper' data-path='admin_agents_getSkills.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/searchStringNew"
        },
        {
          "name": "mediaTypeId",
          "description": "Filters results by Media Type",
          "type": "integer",
          "in": "query"
        },
        {
          "name": "outboundStrategy",
          "description": "Filters based on outbound strategy for the Skill",
          "type": "string",
          "in": "query",
          "enum": [
            "Manual",
            "Personal Connection"
          ]
        },
        {
          "name": "isSkillActive",
          "description": "Filters based on active state of the Skill",
          "type": "boolean",
          "in": "query"
        },
        {
          "$ref": "#/definitions/parameters/skipNew"
        },
        {
          "$ref": "#/definitions/parameters/topNew"
        },
        {
          "$ref": "#/definitions/parameters/orderByNew"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentSkillsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid Fields List</p><p>Invalid Updated Since</p>"
        },
        "401": {
          "description": "Unauthorized"
        }
      }
    }
  },
  "agents_agentid_groups": {
    "get": {
      "tags": [
        "Agents"
      ],
      "summary": "Returns a list of groups an agent is assigned",
      "operationId": "getagentbyagentidgroups",
      "description": "This method returns a list of groups an agent is assigned.<div class='tabs_wrapper' data-path='admin_agent_getagentagentidgroups.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentID"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getagentagentidgroups"
          }
        },
        "204": {
          "description": "No Groups found for agentId ",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "agentGroups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "integer"
                    },
                    "groupName": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "lastUpdated": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid 'agentId'"
        },
        "404": {
          "description": "Agent {0} not found for BU: {1}"
        }
      }
    }
  },
  "agents_agentId_skills": {
    "post": {
      "tags": [ "Agents" ],
      "summary": "Assigns Skills to an Agent",
      "operationId": "AssignsSkillsToAnAgent",
      "description": "This method will create new skill assignments for the Agent identified by agentId.<div class='tabs_wrapper' data-path='admin_agents_postSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postAgentSkillsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postAgentSkillsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty</p><p>Cannot send more than 10,000 records in a single call</p>"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}', {1}</p><p>Invalid agentId - '{0}'</p>"
        }
      }
    },
    "put": {
      "tags": [ "Agents" ],
      "summary": "Modify Skill assignments for an Agent",
      "operationId": "ModifySkillAssignmentsForAgent",
      "description": "This method will modify the skill assignments for the Agent identified by agentId.<div class='tabs_wrapper' data-path='admin_agents_putSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/putAgentSkillsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postAgentSkillsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty</p><p>Cannot send more than 10,000 records in a single call</p>"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}', {1}</p><p>Invalid agentId - '{0}'</p>"
        }
      }
    },
    "get": {
      "tags": [ "Agents" ],
      "summary": "%UPDATED_IN_V23%  Returns Skills assigned to an agent",
      "operationId": "getSkillsByAgentId",
      "description": "This method will return the skill mappings for the Agent specified by agentId.<br/><br/><div class='tabs_wrapper' data-path='admin_agents_getSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/mediaTypeIdNew"
        },
        {
          "$ref": "#/definitions/parameters/outboundStrategyNew"
        },
        {
          "$ref": "#/definitions/parameters/isSkillActiveNew"
        },
        {
          "$ref": "#/definitions/parameters/searchStringNew"
        },
        {
          "name": "isAssignedSkillActive",
          "description": "Reduce response to skill that are active for the agent",
          "type": "boolean",
          "in": "query"

        },
        {
          "$ref": "#/definitions/parameters/skipNew"
        },
        {
          "$ref": "#/definitions/parameters/topNew"
        },
        {
          "$ref": "#/definitions/parameters/orderByNew"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentSkillsResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}'</p><p>Invalid agentId - '{0}', does not exist</p>"
        }
      }
    },
    "delete": {
      "tags": [ "Agents" ],
      "summary": "Remove Skill assignments for an Agent",
      "operationId": "RemoveSkillAssignmentsForAgent",
      "description": "This method will remove the skill assignments for the Agent specified by agentId.<br/><br/><b><i><span style='color:red'>v17.0 NOTE: </span></i></b> Added permission check, this API requires Users>Edit permission. <div class='tabs_wrapper' data-path='admin_agents_deleteSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/deleteAgentSkillsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postAgentSkillsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty </p><p>Cannot send more than {0} records in a single call</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Agent - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}', must be an integer</p><p>Invalid agentId - '{0}', does not exist</p>"
        }
      }
    }
  },
  "agents-agentId-skills-unassigned": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns Skills not assigned to an Agent",
      "operationId": "GetSkillsNotAssignedToAgent",
      "description": "This method will return the Skills that are not currently assigned to the Agent specified by agentId.<div class='tabs_wrapper' data-path='admin_agents_getUnassignedSkillsAgentID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentID"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/mediaTypeId"
        },
        {
          "$ref": "#/definitions/parameters/outboundStrategy"
        },
        {
          "$ref": "#/definitions/parameters/isSkillActive"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentUnassignedSkillsResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Agent - '{0}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid agentId - '{0}'</p><p>Invalid agentId - '{0}', does not exist</p>"
        }
      }
    }
  },
  "agents_skills_data": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns summary of all agent's contacts by skill",
      "operationId": "Agent Skill Data",
      "description": "This method will return summary information about the contacts handled for each skill assigned to an agent over the period of time specified by \"startDate\" and \"endDate\". This information will be returned for all agents in the business unit that were active during that time period.<br/><br/>This information is updated in 15 minute increments starting at the top of each hour therefore the API will only accept times in 15 minute increments.  If you span multiple 15 minute increments, the data is cumulated and then returned.<div class='tabs_wrapper' data-path='admin_agents_getSkillsData.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/startDate"
        },
        {
          "$ref": "#/definitions/parameters/endDate"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentSkillsDataResponse"
          }
        },
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Bad Request"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Not Found"
        }
      }
    }
  },
  "agents_agentId_skill_data": {
    "get": {
      "tags": [ "Agents" ],
      "summary": " Returns summary of an agent's contacts by skill",
      "operationId": "Agent Skill Data for skillid",
      "description": "This method will return summary information about the contacts handled for each skill assigned to an agent identified by agentId over the period of time specified by \"startDate\" and \"endDate\". This information will be returned only if the agent was active during that time period.<br/><br/>This information is updated in 15 minute increments starting at the top of each hour therefore the API will only accept times in 15 minute increments. If you span multiple 15 minute increments, the data is cumulated and then returned.<div class='tabs_wrapper' data-path='admin_agents_getSkillsAgentIDData.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentId"
        },
        {
          "$ref": "#/definitions/parameters/startDate"
        },
        {
          "$ref": "#/definitions/parameters/endDate"
        },
        {
          "$ref": "#/definitions/parameters/mediaTypeId"
        },
        {
          "name": "isOutbound",
          "type": "boolean",
          "description": "Indicates if the Skill is outbound",
          "in": "query"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentSkillsDataResponse"
          }
        },
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "<p>Invalid Parameter</p><p>Bad Request</p><p>Invalid Agent Id</p>"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "{0}. Security permissions prevent access to data"
        }
      }
    }
  },
  "agents_agentId_custom-event": {
    "put": {
      "tags": [ "Agents" ],
      "summary": "Creates a Custom Agent Event",
      "opeartionId": "Custom Agent Event",
      "description": "This method allows you to send an event to the agent identified by agentId.  This event has no system triggers but can be called at any point from an external application.<br/><br/>If the agent identified by agentId is not currently logged in, the event will either be ignored or remain for the agent once they log back in.  This is controlled using the persistInMemory parameter. <div class='tabs_wrapper' data-path='admin_agents_putCustomEventID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentID"
        },
        {
          "name": "eventName",
          "description": "A type name you want to give the custom event.  Multiple events with the same name will overwrite each other.  Only the last (most recent) instance of each event name is kept.",
          "type": "string",
          "in": "query"
        },
        {
          "name": "persistInMemory",
          "description": "Controls whether or not the VC keeps the event in memory.",
          "type": "boolean",
          "default": true,
          "enum": [ "true", "false" ],
          "in": "query"
        },
        {
          "name": "data",
          "description": "Data payload for this event.",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agents_quick_replies": {
    "get": {
      "tags": [ "Agents" ],
      "summary": " Returns a list of Quick Replies",
      "operationId": "Quick Replies",
      "description": "This method enables you to return all of the Quick Replies that are available in the Business Unit and a list of Skills that each Quick Reply is associated with.<div class='tabs_wrapper' data-path='admin_agents_getQuickReplies.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentsQuickRepliesResponse"
          }
        },
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "<p>Bad Skip</p><p>Bad Top</p>"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient permissions"
        },
        "404": {
          "description": "<p>Invalid AgentId</p>"
        }
      }
    }
  },
  "agents_agentId_quick_replies": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "%UPDATED_IN_V22%  Returns a list of Quick Replies for an Agent",
      "operationId": "Quick Replies by Agent",
      "description": "This method enables you to return all of the Quick Replies that are available to an Agent identified by agentId and a list of Skills that each Quick Reply is associated with for that Agent.<div class='tabs_wrapper' data-path='admin_agents_getQuickRepliesbyAgentId.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentID"
        },
        {
          "name": "skillId",
          "description": "skill Id",
          "type": "string",
          "required": true,
          "in": "query"
        },
        {
          "name": "contactId",
          "description": "Contact Id",
          "type": "string",
          "in": "query"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentQuickRepliesResponse"
          }
        },
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "<p>Invalid Skip</p><p>Invalid Top</p>"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient permissions"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agents_messages": {
    "post": {
      "tags": [
        "Agents"
      ],
      "summary": "Create an Agent message",
      "operationId": "CreateMessage",
      "description": "This method creates, configures and assigns agent messages.<div class='tabs_wrapper' data-path='admin_agents_postAgentMessages.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "agentMessages",
          "description": "Array of AgentMessages",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/postAgentsMessagesRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "agentMessageResults": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentMessageId": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "206": {
          "description": "Partial success. One or more agentMessages were not created",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "agentMessageResults": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentMessageId": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "agentMessages' is required"
        },
        "401": {
          "description": "Unauthorized"
        }
      }
    }
  },
  "agents_messages_messageId": {
    "delete": {
      "tags": [
        "Agents"
      ],
      "summary": "Delete agent message",
      "operationId": "deleteMessagebyMessageId",
      "description": "This method deletes an Agent message.<div class='tabs_wrapper' data-path='admin_agents_deleteAgentMessagebymessageid.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "messageId",
          "description": "",
          "type": "integer",
          "in": "path",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden. Check Security Profile permissions."
        },
        "404": {
          "description": "Invalid Agent Message"
        }
      }
    }
  },
  "agents_agentId_messages": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns an Agent Message List",
      "operationId": "Agent Message List",
      "description": "This method will return all messages currently queued for the agent specified by agentId.<div class='tabs_wrapper' data-path='admin_agents_getMessages.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentID"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentMessagesResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agents_agentId_indicators": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns an Agent Indicator List",
      "operationId": "Agent Indicator List",
      "description": "This method will return all indicators currently queued for the agent specified by agentId.<br/><br/><div class='tabs_wrapper' data-path='admin_agents_getIndicators.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentID"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentIndicatorsResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agents_agentId_logout": {
    "post": {
      "tags": [ "Agents" ],
      "summary": "Forces an agent session to end",
      "operationId": "agentLogout",
      "description": "This can be useful if an agent has left their computer, and remains logged in, or if an agent session somehow becomes \"stuck\" and the agent is not able to log off using agent software (a rare occurrence).<div class='tabs_wrapper' data-path='admin_agents_postAgentIDLogout.html'></div>",
      "parameters": [
        {
          "$ref": "#/definitions/parameters/agentID"
        }
      ],
      "responses": {
        "202": {
          "description": "Accepted"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient permissions"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "agent-patterns": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns Agent Dialing patterns",
      "operationId": "GetAgentDialingPatterns",
      "responseClass": "",
      "description": "This method will return a list of all possible Agent Dialing patterns that can be used for an Agent.  These are the valid patterns that can be used for the <a href='AgentAPI#!/Agents/CreateAnAgent'>POST /agents</a> and <a href='AgentAPI#!/Agents/UpdateAnAgent'>PUT /agents/{agentId}</a> methods to create or change an Agent.<div class='tabs_wrapper' data-path='admin_agent_getAgentPatterns.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentPatternsResponse"
          }
        },
        "204": {
          "description": "No dialing patterns configured"
        },
        "401": {
          "description": "<p>Unauthorized</p><p>Invalid or expired token</p>"
        },
        "403": {
          "description": "Forbidden. Check Security Profile permissions"
        }
      }
    }
  },
  "agent-patterns_agentpatternid_transform-phonenumbers": {
    "post": {
      "tags": [ "Agents" ],
      "summary": " Transform Input Number",
      "operationId": "post-agent-patterns-id-transform-phonenumbers",
      "description": "This Method takes Multiple Input Number and a dialing pattern set id which is a set of multiple dialing patterns. This will convert the input number based on the applicable best match dialing pattern from dialing pattern set and return the response. External Id will be used for record identification from requestor client.<br/><br/><b><i><span style='color:red'>NOTE: </span></i></b> In one request of method maximum input number can be passed is 100. Frequency for calling the method is 5 request per second maximum.<div class='tabs_wrapper' data-path='admin_agents_transformnumbers.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "agentpatternId",
          "type": "integer",
          "description": "Agent Dialing set pattern Id, which is applied on the input phone numbers for transforming the phone numbers.",
          "in": "path",
          "required": true
        },
        {
          "name": "inputPhoneNum ",
          "type": "string",
          "description": "Input Phone number on which the agent dialing pattern is applied.",
          "in": "query"
        },
        {
          "name": "externalId",
          "type": "string",
          "description": "External Id is unique Id passed to distinguish the input phone numbers. Note: This should be unique and distinct. It is user defined",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transformNumOut": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "inputNumber": {
                      "type": "string"
                    },
                    "outputNumber": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "errorDescription": {
                      "type": "string"
                    },
                    "isTransformed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "206": {
          "description": "PartialSuccess",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transformNumOut": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "inputNumber": {
                      "type": "string"
                    },
                    "outputNumber": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "errorDescription": {
                      "type": "string"
                    },
                    "isTransformed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Invalid Token"
        }
      }
    }
  },
  "agents_states": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns a list of Agent States",
      "operationId": "getAgentStates",
      "description": "This method will return a list of all possible Agent States that can be used for an Agent. These are the valid states that can be used for the <a href='AgentAPI#!/Sessions/setAgentStatus'>POST /agent-sessions/{sessionId}/state</a> method to change the state of an Agent.<div class='tabs_wrapper' data-path='admin_general_getAgentStates.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "reqBUIds",
          "type": "string",
          "description": "Required BU ID",
          "in": "query"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getAgentStatesResponse"
          }
        },
        "400": {
          "description": "Invalid Parameter"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Access to business unit is restricted</p><p>Security privileges prevent access to data</p>"
        },
        "409": {
          "description": "Failed Authorization (BU and Partner Tenant trusted relationship check)"
        }
      }
    }
  },
  "agents_extended": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Get Agents Extended",
      "operationId": "get-agents-extended",
      "description": "Get Agents Extended <div class='tabs_wrapper' data-path='admin_agents_getAgentExtended.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "activeUsersOnly",
          "description": "Active Users Only",
          "type": "boolean",
          "in": "query"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "totalRecords": {
                "type": "integer",
                "description": "Returns Total number of records"
              },
              "hiddenAgents": {
                "type": "integer"
              },
              "agents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "integer"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the Agent",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Middle name of the Agent",
                      "maxLength": 50
                    },
                    "team_no": {
                      "type": "integer"
                    },
                    "reportTo": {
                      "type": "integer"
                    },
                    "secondaryID": {
                      "type": "string"
                    },
                    "securityProfileID": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "combinedUserNameDomain": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Agent"
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "phoneCallRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    },
                    "voiceMailRefusalTimeout": {
                      "type": "integer"
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a workitem contact"
                    },
                    "skillInfo": {
                      "type": "string"
                    },
                    "agentDialingPatternID": {
                      "type": "integer"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone assigned to the Agent"
                    },
                    "country": {
                      "type": "string",
                      "description": "Country assigned to the Agent"
                    },
                    "state": {
                      "type": "string",
                      "description": "State or Province assigned to the Agent"
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of City assigned to the Agent"
                    },
                    "wfmNotificationEnabled": {
                      "type": "boolean",
                      "description": "Enable Disable WFM Notification"
                    },
                    "wfmNotificationInterval": {
                      "type": "integer",
                      "description": "Interval for WFM Notification"
                    },
                    "sipUserId": {
                      "type": "string"
                    },
                    "agentPhoneOther": {
                      "type": "string",
                      "description": "Agents other phone number"
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was hired"
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was terminated"
                    },
                    "employmentType": {
                      "type": "integer",
                      "description": "ID of the employment type"
                    },
                    "hourlyCost": {
                      "type": "number",
                      "description": "Cost of Agent"
                    },
                    "rehireStatus": {
                      "type": "boolean",
                      "description": "Indicates is the Agent is a re-hire"
                    },
                    "location": {
                      "type": "integer",
                      "description": "Location for Agent"
                    },
                    "hiringSourceId": {
                      "type": "integer"
                    },
                    "atHomeWorker": {
                      "type": "boolean"
                    },
                    "referral": {
                      "type": "string",
                      "description": "Description of any referral given"
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "crmUsername": {
                      "type": "string",
                      "description": "Used by iWFO to tag call recordings with metadata"
                    },
                    "systemDomain": {
                      "type": "string",
                      "description": "Used by iWFO to identify Windows domain for screen recording"
                    },
                    "systemUsername": {
                      "type": "string"
                    },
                    "shiftTimes": {
                      "type": "boolean"
                    },
                    "display24Hour": {
                      "type": "boolean"
                    },
                    "userType": {
                      "type": "string",
                      "description": "Type of user for WFM"
                    },
                    "maxEmailInboxCount": {
                      "type": "integer"
                    },
                    "mchVoice": {
                      "type": "integer"
                    },
                    "mchChat": {
                      "type": "integer"
                    },
                    "mchEmail": {
                      "type": "integer"
                    },
                    "mchSocial": {
                      "type": "integer"
                    },
                    "mchWorkitem": {
                      "type": "integer"
                    },
                    "mchRequestContact": {
                      "type": "boolean"
                    },
                    "useTeamMCHChat": {
                      "type": "boolean"
                    },
                    "useTeamMCHEmail": {
                      "type": "boolean"
                    },
                    "useTeamMCHWorkItem": {
                      "type": "boolean"
                    },
                    "useTeamMCHRequestContact": {
                      "type": "boolean"
                    },
                    "schRequestContact": {
                      "type": "boolean"
                    },
                    "useDefaultEmail": {
                      "type": "boolean"
                    },
                    "useDefaultRequestContact": {
                      "type": "boolean"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "mchContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamMCHContactAutoFocus": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "integer"
                    },
                    "locationNo": {
                      "type": "integer"
                    },
                    "locationname": {
                      "type": "string"
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "hiringSourceDesc": {
                      "type": "string"
                    },
                    "federatedId": {
                      "type": "string"
                    },
                    "externalIdentity": {
                      "type": "string"
                    },
                    "autoAttendantAccessType": {
                      "type": "integer"
                    },
                    "groupIds": {
                      "type": "string"
                    },
                    "phones": {
                      "type": "string"
                    },
                    "integratedSoftphoneWebRtcUrls": {
                      "type": "string"
                    },
                    "agentPhoneHome": {
                      "type": "string"
                    },
                    "useTeamMaxEmailInboxCount": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "totalRecords": {
                "type": "integer",
                "description": "Returns Total number of records"
              },
              "hiddenAgents": {
                "type": "integer"
              },
              "agents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "integer"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the Agent",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Middle name of the Agent",
                      "maxLength": 50
                    },
                    "team_no": {
                      "type": "integer"
                    },
                    "reportTo": {
                      "type": "integer"
                    },
                    "secondaryID": {
                      "type": "string"
                    },
                    "securityProfileID": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "combinedUserNameDomain": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Agent"
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "phoneCallRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    },
                    "voiceMailRefusalTimeout": {
                      "type": "integer"
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a workitem contact"
                    },
                    "skillInfo": {
                      "type": "string"
                    },
                    "agentDialingPatternID": {
                      "type": "integer"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone assigned to the Agent"
                    },
                    "country": {
                      "type": "string",
                      "description": "Country assigned to the Agent"
                    },
                    "state": {
                      "type": "string",
                      "description": "State or Province assigned to the Agent"
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of City assigned to the Agent"
                    },
                    "wfmNotificationEnabled": {
                      "type": "boolean",
                      "description": "Enable Disable WFM Notification"
                    },
                    "wfmNotificationInterval": {
                      "type": "integer",
                      "description": "Interval for WFM Notification"
                    },
                    "sipUserId": {
                      "type": "string"
                    },
                    "agentPhoneOther": {
                      "type": "string",
                      "description": "Agents other phone number"
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was hired"
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Agent record was terminated"
                    },
                    "employmentType": {
                      "type": "integer",
                      "description": "ID of the employment type"
                    },
                    "hourlyCost": {
                      "type": "number",
                      "description": "Cost of Agent"
                    },
                    "rehireStatus": {
                      "type": "boolean",
                      "description": "Indicates is the Agent is a re-hire"
                    },
                    "location": {
                      "type": "integer",
                      "description": "Location for Agent"
                    },
                    "hiringSourceId": {
                      "type": "integer"
                    },
                    "atHomeWorker": {
                      "type": "boolean"
                    },
                    "referral": {
                      "type": "string",
                      "description": "Description of any referral given"
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Custom value associated with Agent"
                    },
                    "crmUsername": {
                      "type": "string",
                      "description": "Used by iWFO to tag call recordings with metadata"
                    },
                    "systemDomain": {
                      "type": "string",
                      "description": "Used by iWFO to identify Windows domain for screen recording"
                    },
                    "systemUsername": {
                      "type": "string"
                    },
                    "shiftTimes": {
                      "type": "boolean"
                    },
                    "display24Hour": {
                      "type": "boolean"
                    },
                    "userType": {
                      "type": "string",
                      "description": "Type of user for WFM"
                    },
                    "maxEmailInboxCount": {
                      "type": "integer"
                    },
                    "mchVoice": {
                      "type": "integer"
                    },
                    "mchChat": {
                      "type": "integer"
                    },
                    "mchEmail": {
                      "type": "integer"
                    },
                    "mchSocial": {
                      "type": "integer"
                    },
                    "mchWorkitem": {
                      "type": "integer"
                    },
                    "mchRequestContact": {
                      "type": "boolean"
                    },
                    "useTeamMCHChat": {
                      "type": "boolean"
                    },
                    "useTeamMCHEmail": {
                      "type": "boolean"
                    },
                    "useTeamMCHWorkItem": {
                      "type": "boolean"
                    },
                    "useTeamMCHRequestContact": {
                      "type": "boolean"
                    },
                    "schRequestContact": {
                      "type": "boolean"
                    },
                    "useDefaultEmail": {
                      "type": "boolean"
                    },
                    "useDefaultRequestContact": {
                      "type": "boolean"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "mchContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamMCHContactAutoFocus": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "integer"
                    },
                    "locationNo": {
                      "type": "integer"
                    },
                    "locationname": {
                      "type": "string"
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "hiringSourceDesc": {
                      "type": "string"
                    },
                    "federatedId": {
                      "type": "string"
                    },
                    "externalIdentity": {
                      "type": "string"
                    },
                    "autoAttendantAccessType": {
                      "type": "integer"
                    },
                    "groupIds": {
                      "type": "string"
                    },
                    "phones": {
                      "type": "string"
                    },
                    "integratedSoftphoneWebRtcUrls": {
                      "type": "string"
                    },
                    "agentPhoneHome": {
                      "type": "string"
                    },
                    "useTeamMaxEmailInboxCount": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid parameter"
        },
        "403": {
          "description": "Forbidden"
        },
        "405": {
          "description": "Method not allowed"
        },
        "500": {
          "description": "Service Exception - Error has occured while calling external service"
        }
      }
    }
  },
  "agents_issues": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Lists all agent issues",
      "operationId": "get-agents-issues",
      "description": "This method returns all agent issues <div class='tabs_wrapper' data-path='admin_agents_getAgentIssues.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        },
        {
          "name": "isClosed",
          "description": "Filter results based on closed status",
          "type": "boolean",
          "in": "query",
          "required": true
        },
        {
          "name": "agentName",
          "description": "Agent Name",
          "type": "string",
          "in": "query"
        },
        {
          "name": "issueType",
          "description": "Issue Type",
          "type": "string",
          "in": "query"
        },
        {
          "name": "teamName",
          "description": "Team Name",
          "type": "string",
          "in": "query"
        },
        {
          "$ref": "#/definitions/parameters/startDate"
        },
        {
          "$ref": "#/definitions/parameters/endDate"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "hiddenAgents": {
                "type": "integer"
              },
              "agentIssue": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "rowNumber": {
                      "type": "integer"
                    },
                    "agentIssueId": {
                      "type": "integer"
                    },
                    "agent_Name": {
                      "type": "string",
                      "description": "Agent Name"
                    },
                    "contact_ID": {
                      "type": "integer"
                    },
                    "issueTypeName": {
                      "type": "string"
                    },
                    "scriptName": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "salesForceCaseID": {
                      "type": "string"
                    },
                    "submitTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Submit Time"
                    },
                    "team_Name": {
                      "type": "string",
                      "description": "Team Name"
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "<p>Invalid parameter</p><p>Invalid Start Date</p><p>Invalid End Date</p><p>Bad Request</p>"
        },
        "401": {
          "description": "<p>Invalid Security User</p><p>Invalid or expired token</p>"
        },
        "403": {
          "description": "Forbidden"
        },
        "405": {
          "description": "Method not allowed"
        },
        "500": {
          "description": "Error has occured while calling external service"
        }
      }
    }
  },
  "agent-messages_messagegroupid": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Lists agent group messages",
      "operationId": "get-agent-messages-id",
      "description": "This method returns agent group messages <div class='tabs_wrapper' data-path='admin_agents_getAgentMessageGroupId.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "messageGroupId",
          "description": "Message Group Id",
          "required": true,
          "type": "string",
          "in": "path"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the payload"
              },
              "hiddenAgents": {
                "type": "integer"
              },
              "agentMessage": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "integer"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the Agent"
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the Agent"
                    },
                    "userNameDomain": {
                      "type": "string"
                    },
                    "combinedUserNameDomain": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "team": {
                      "type": "string"
                    },
                    "team_no": {
                      "type": "integer"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active"
                    },
                    "subject": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "sentOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "sentTo": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "integer"
                    },
                    "expireDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "msgText": {
                      "type": "string"
                    },
                    "msgId": {
                      "type": "integer"
                    },
                    "msgType": {
                      "type": "string"
                    },
                    "delivered": {
                      "type": "integer"
                    },
                    "messageGroupGuid": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the payload"
              },
              "hiddenAgents": {
                "type": "integer"
              },
              "agentMessage": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "type": "integer"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the Agent"
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the Agent"
                    },
                    "userNameDomain": {
                      "type": "string"
                    },
                    "combinedUserNameDomain": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "team": {
                      "type": "string"
                    },
                    "team_no": {
                      "type": "integer"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active"
                    },
                    "subject": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "sentOn": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "sentTo": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "integer"
                    },
                    "expireDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "msgText": {
                      "type": "string"
                    },
                    "msgId": {
                      "type": "integer"
                    },
                    "msgType": {
                      "type": "string"
                    },
                    "delivered": {
                      "type": "integer"
                    },
                    "messageGroupGuid": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid parameter"
        },
        "401": {
          "description": "<p>Invalid Security User</p><p>Invalid or expired token</p>"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Invalid message group Id"
        },
        "405": {
          "description": "Method not allowed"
        },
        "500": {
          "description": "Error has occured while calling external service"
        }
      }
    }
  },
  "agents_skills-download": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Lists existing skills for download",
      "operationId": "get-gents-skills-download",
      "description": "This method returns existing skills for download <div class='tabs_wrapper' data-path='admin_agents_getAgentSkillsDownload.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillRecordTypeID",
          "description": "Skill Record Type ID",
          "type": "string",
          "in": "query"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the payload"
              },
              "skillDownloadInput": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentSkillDownloadInput": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skillRecordTypeId": {
                            "type": "integer",
                            "description": "Skill Record Type ID"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "agentSkillDownload": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skill_Name": {
                      "type": "string"
                    },
                    "skill_No": {
                      "type": "integer"
                    },
                    "media_Type": {
                      "type": "integer"
                    },
                    "campaign_No": {
                      "type": "integer"
                    },
                    "isOutbound": {
                      "type": "boolean"
                    },
                    "service_Threshold": {
                      "type": "integer"
                    },
                    "service_Goal": {
                      "type": "integer"
                    },
                    "interruptible": {
                      "type": "boolean"
                    },
                    "screen_Pops": {
                      "type": "boolean"
                    },
                    "custom_Screen_Pops": {
                      "type": "boolean"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "initial_Priority": {
                      "type": "integer"
                    },
                    "max_Priority": {
                      "type": "integer"
                    },
                    "acceleration": {
                      "type": "integer"
                    },
                    "dispositionsRequired": {
                      "type": "string"
                    },
                    "emailFromAddress": {
                      "type": "string"
                    },
                    "shortAbandonThreshold": {
                      "type": "integer"
                    },
                    "useShortAbandonThreshold": {
                      "type": "boolean"
                    },
                    "includeShortAbandons": {
                      "type": "boolean"
                    },
                    "includeOtherAbandons": {
                      "type": "boolean"
                    },
                    "hoursOfOperation": {
                      "type": "integer"
                    },
                    "timeBeforeInterrupt": {
                      "type": "integer"
                    },
                    "isDialer": {
                      "type": "boolean"
                    },
                    "isNaturalCalling": {
                      "type": "boolean"
                    },
                    "callerID": {
                      "type": "string"
                    },
                    "skillRecordTypeID": {
                      "type": "integer"
                    },
                    "defaultRoutingCriteria": {
                      "type": "string"
                    },
                    "queueDefaultMasterID": {
                      "type": "integer"
                    },
                    "wfiMinimumAgentsLevel": {
                      "type": "integer"
                    },
                    "wfiMinimumAvailableAgentsLevel": {
                      "type": "integer"
                    },
                    "emailParking": {
                      "type": "boolean"
                    },
                    "chatWarningThreshold": {
                      "type": "integer"
                    },
                    "agentTypingIndicator": {
                      "type": "boolean"
                    },
                    "patronTypingPreview": {
                      "type": "boolean"
                    },
                    "emailBccAddress": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "enableChatMessagingTimeout": {
                      "type": "boolean"
                    },
                    "timetoInactiveChatMessage": {
                      "type": "integer"
                    },
                    "inactiveChatMessage": {
                      "type": "string"
                    },
                    "chatTerminationCountDown": {
                      "type": "integer"
                    },
                    "chatTerminatedMessage": {
                      "type": "string"
                    },
                    "media_Name": {
                      "type": "string"
                    },
                    "campaign_Name": {
                      "type": "string"
                    },
                    "custom_Screen_Pop_Application": {
                      "type": "string"
                    },
                    "hoursOfOperationName": {
                      "type": "string"
                    },
                    "customScript": {
                      "type": "string"
                    },
                    "assignedAgents": {
                      "type": "string"
                    },
                    "assignedPOCs": {
                      "type": "string"
                    },
                    "callingLists": {
                      "type": "string"
                    },
                    "multiNumberSerialDeliveryId": {
                      "type": "integer"
                    },
                    "agentless": {
                      "type": "boolean"
                    },
                    "agentlessPortsUsed": {
                      "type": "integer"
                    },
                    "smsMessageTemplateId": {
                      "type": "integer"
                    },
                    "treatProgressAsRinging": {
                      "type": "boolean"
                    },
                    "preConnectCPAEnabled": {
                      "type": "boolean"
                    },
                    "agentOverrideButtonOptions": {
                      "type": "integer"
                    },
                    "ansMachineOverrideSeconds": {
                      "type": "integer"
                    },
                    "screenPopTriggerEvent": {
                      "type": "integer"
                    },
                    "ratio": {
                      "type": "integer"
                    },
                    "maximumRingingDuration": {
                      "type": "integer"
                    },
                    "minimumPercentageHopDestinations": {
                      "type": "integer"
                    },
                    "ansMachineDetMode": {
                      "type": "integer"
                    },
                    "ansMachineMsg": {
                      "type": "string"
                    },
                    "abandonMsg": {
                      "type": "string"
                    },
                    "abandonMsgMode": {
                      "type": "integer"
                    },
                    "customerLiveSilenceSeconds": {
                      "type": "number"
                    },
                    "machineEndSilenceSeconds": {
                      "type": "number"
                    },
                    "machineMinimumWithoutAgentSeconds": {
                      "type": "number"
                    },
                    "machineEndTimeoutSeconds": {
                      "type": "number"
                    },
                    "utteranceMinimumSeconds": {
                      "type": "number"
                    },
                    "machineMinimumWithAgentSeconds": {
                      "type": "number"
                    },
                    "agentNoResponseSeconds": {
                      "type": "number"
                    },
                    "agentResponseUtteranceMinimumSeconds": {
                      "type": "number"
                    },
                    "agentVoiceThreshold": {
                      "type": "number"
                    },
                    "customerVoiceThreshold": {
                      "type": "number"
                    },
                    "recordPlaceCallAudio": {
                      "type": "boolean"
                    },
                    "cpaPatternForLogging": {
                      "type": "string"
                    },
                    "blockMultipleCalls": {
                      "type": "boolean"
                    },
                    "notifyAgentsWhenListIsEmpty": {
                      "type": "boolean"
                    },
                    "endOfListNotificationDelaySeconds": {
                      "type": "integer"
                    },
                    "confirmationRequiredDeliveryTypeID": {
                      "type": "integer"
                    },
                    "confirmationRequiredTimeout": {
                      "type": "integer"
                    },
                    "confirmationRequiredTimeoutSubsequent": {
                      "type": "integer"
                    },
                    "confirmationRequiredDefaultAccept": {
                      "type": "boolean"
                    },
                    "complianceRecordsDeliveryTypeID": {
                      "type": "integer"
                    },
                    "complianceRecordsTimeout": {
                      "type": "integer"
                    },
                    "complianceRecordsTimeoutSubsequent": {
                      "type": "integer"
                    },
                    "complianceRecordsDefaultAccept": {
                      "type": "boolean"
                    },
                    "overrideBUAbandonRate": {
                      "type": "boolean"
                    },
                    "beginDampenPercentage": {
                      "type": "number"
                    },
                    "abandonRateCutoff": {
                      "type": "number"
                    },
                    "abandonRateThreshold": {
                      "type": "number"
                    },
                    "aggressiveRatioFactor": {
                      "type": "integer"
                    },
                    "abandonTimeout": {
                      "type": "integer"
                    },
                    "isScheduled": {
                      "type": "boolean"
                    },
                    "enableDialingByProficiency": {
                      "type": "boolean"
                    },
                    "proficiencyFactor": {
                      "type": "number"
                    },
                    "waitTimeFactor": {
                      "type": "number"
                    },
                    "maxConcurrentCallsPerAgent": {
                      "type": "integer"
                    },
                    "maxWaitTimeSeconds": {
                      "type": "integer"
                    },
                    "complianceButtonOptions": {
                      "type": "integer"
                    },
                    "previewButtonOptions": {
                      "type": "integer"
                    },
                    "smsMessageTemplate": {
                      "type": "string"
                    },
                    "transportCode": {
                      "type": "string"
                    },
                    "enableBlending": {
                      "type": "boolean"
                    },
                    "inactiveBlendingTimerSeconds": {
                      "type": "integer"
                    },
                    "callbackInitialPriority": {
                      "type": "integer"
                    },
                    "priorityInitialPriority": {
                      "type": "integer"
                    },
                    "externalOutboundSkill_No": {
                      "type": "string"
                    },
                    "minCallbackMinutes": {
                      "type": "integer"
                    },
                    "maximumAttempts": {
                      "type": "integer"
                    },
                    "loadFresh": {
                      "type": "boolean"
                    },
                    "loadCallbacks": {
                      "type": "boolean"
                    },
                    "loadNonFresh": {
                      "type": "boolean"
                    },
                    "defaultContactExpirationMinutes": {
                      "type": "integer"
                    },
                    "restrictedCallingMaxAttempts": {
                      "type": "integer"
                    },
                    "restrictedCallingMinutes": {
                      "type": "integer"
                    },
                    "confirmationRequiredDefault": {
                      "type": "boolean"
                    },
                    "runGetPriorityContactsOnContactInsertion": {
                      "type": "boolean"
                    },
                    "xsGetContactsActive": {
                      "type": "boolean"
                    },
                    "xsReadyThreshold": {
                      "type": "integer"
                    },
                    "xsFreshThreshold": {
                      "type": "integer"
                    },
                    "xsAvailableThreshold": {
                      "type": "integer"
                    },
                    "xsNumberToRetrieve": {
                      "type": "integer"
                    },
                    "xsSkillChangedActive": {
                      "type": "boolean"
                    },
                    "complianceRecordsDisabled": {
                      "type": "boolean"
                    },
                    "confirmationRequiredDisabled": {
                      "type": "boolean"
                    },
                    "maxBlendingAttempts": {
                      "type": "integer"
                    },
                    "maxNumAnsweredCalls": {
                      "type": "integer"
                    },
                    "maxNumCallbacks": {
                      "type": "integer"
                    },
                    "finalizeWhenExhausted": {
                      "type": "boolean"
                    },
                    "callbackRestMinutes": {
                      "type": "integer"
                    },
                    "unassignAgentSpecificCallbacks": {
                      "type": "boolean"
                    },
                    "staleMinutesCallbacks": {
                      "type": "integer"
                    },
                    "staleMinutesGeneral": {
                      "type": "integer"
                    },
                    "xsScriptID": {
                      "type": "integer"
                    },
                    "xsCheckinScriptID": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the payload"
              },
              "skillDownloadInput": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentSkillDownloadInput": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skillRecordTypeId": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "agentSkillDownload": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skill_Name": {
                      "type": "string"
                    },
                    "skill_No": {
                      "type": "integer"
                    },
                    "media_Type": {
                      "type": "integer"
                    },
                    "campaign_No": {
                      "type": "integer"
                    },
                    "isOutbound": {
                      "type": "boolean"
                    },
                    "service_Threshold": {
                      "type": "integer"
                    },
                    "service_Goal": {
                      "type": "integer"
                    },
                    "interruptible": {
                      "type": "boolean"
                    },
                    "screen_Pops": {
                      "type": "boolean"
                    },
                    "custom_Screen_Pops": {
                      "type": "boolean"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "initial_Priority": {
                      "type": "integer"
                    },
                    "max_Priority": {
                      "type": "integer"
                    },
                    "acceleration": {
                      "type": "integer"
                    },
                    "dispositionsRequired": {
                      "type": "string"
                    },
                    "emailFromAddress": {
                      "type": "string"
                    },
                    "shortAbandonThreshold": {
                      "type": "integer"
                    },
                    "useShortAbandonThreshold": {
                      "type": "boolean"
                    },
                    "includeShortAbandons": {
                      "type": "boolean"
                    },
                    "includeOtherAbandons": {
                      "type": "boolean"
                    },
                    "hoursOfOperation": {
                      "type": "integer"
                    },
                    "timeBeforeInterrupt": {
                      "type": "integer"
                    },
                    "isDialer": {
                      "type": "boolean"
                    },
                    "isNaturalCalling": {
                      "type": "boolean"
                    },
                    "callerID": {
                      "type": "string"
                    },
                    "skillRecordTypeID": {
                      "type": "integer"
                    },
                    "defaultRoutingCriteria": {
                      "type": "string"
                    },
                    "queueDefaultMasterID": {
                      "type": "integer"
                    },
                    "wfiMinimumAgentsLevel": {
                      "type": "integer"
                    },
                    "wfiMinimumAvailableAgentsLevel": {
                      "type": "integer"
                    },
                    "emailParking": {
                      "type": "boolean"
                    },
                    "chatWarningThreshold": {
                      "type": "integer"
                    },
                    "agentTypingIndicator": {
                      "type": "boolean"
                    },
                    "patronTypingPreview": {
                      "type": "boolean"
                    },
                    "emailBccAddress": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "enableChatMessagingTimeout": {
                      "type": "boolean"
                    },
                    "timetoInactiveChatMessage": {
                      "type": "integer"
                    },
                    "inactiveChatMessage": {
                      "type": "string"
                    },
                    "chatTerminationCountDown": {
                      "type": "integer"
                    },
                    "chatTerminatedMessage": {
                      "type": "string"
                    },
                    "media_Name": {
                      "type": "string"
                    },
                    "campaign_Name": {
                      "type": "string"
                    },
                    "custom_Screen_Pop_Application": {
                      "type": "string"
                    },
                    "hoursOfOperationName": {
                      "type": "string"
                    },
                    "customScript": {
                      "type": "string"
                    },
                    "assignedAgents": {
                      "type": "string"
                    },
                    "assignedPOCs": {
                      "type": "string"
                    },
                    "callingLists": {
                      "type": "string"
                    },
                    "multiNumberSerialDeliveryId": {
                      "type": "integer"
                    },
                    "agentless": {
                      "type": "boolean"
                    },
                    "agentlessPortsUsed": {
                      "type": "integer"
                    },
                    "smsMessageTemplateId": {
                      "type": "integer"
                    },
                    "treatProgressAsRinging": {
                      "type": "boolean"
                    },
                    "preConnectCPAEnabled": {
                      "type": "boolean"
                    },
                    "agentOverrideButtonOptions": {
                      "type": "integer"
                    },
                    "ansMachineOverrideSeconds": {
                      "type": "integer"
                    },
                    "screenPopTriggerEvent": {
                      "type": "integer"
                    },
                    "ratio": {
                      "type": "integer"
                    },
                    "maximumRingingDuration": {
                      "type": "integer"
                    },
                    "minimumPercentageHopDestinations": {
                      "type": "integer"
                    },
                    "ansMachineDetMode": {
                      "type": "integer"
                    },
                    "ansMachineMsg": {
                      "type": "string"
                    },
                    "abandonMsg": {
                      "type": "string"
                    },
                    "abandonMsgMode": {
                      "type": "integer"
                    },
                    "customerLiveSilenceSeconds": {
                      "type": "number"
                    },
                    "machineEndSilenceSeconds": {
                      "type": "number"
                    },
                    "machineMinimumWithoutAgentSeconds": {
                      "type": "number"
                    },
                    "machineEndTimeoutSeconds": {
                      "type": "number"
                    },
                    "utteranceMinimumSeconds": {
                      "type": "number"
                    },
                    "machineMinimumWithAgentSeconds": {
                      "type": "number"
                    },
                    "agentNoResponseSeconds": {
                      "type": "number"
                    },
                    "agentResponseUtteranceMinimumSeconds": {
                      "type": "number"
                    },
                    "agentVoiceThreshold": {
                      "type": "number"
                    },
                    "customerVoiceThreshold": {
                      "type": "number"
                    },
                    "recordPlaceCallAudio": {
                      "type": "boolean"
                    },
                    "cpaPatternForLogging": {
                      "type": "string"
                    },
                    "blockMultipleCalls": {
                      "type": "boolean"
                    },
                    "notifyAgentsWhenListIsEmpty": {
                      "type": "boolean"
                    },
                    "endOfListNotificationDelaySeconds": {
                      "type": "integer"
                    },
                    "confirmationRequiredDeliveryTypeID": {
                      "type": "integer"
                    },
                    "confirmationRequiredTimeout": {
                      "type": "integer"
                    },
                    "confirmationRequiredTimeoutSubsequent": {
                      "type": "integer"
                    },
                    "confirmationRequiredDefaultAccept": {
                      "type": "boolean"
                    },
                    "complianceRecordsDeliveryTypeID": {
                      "type": "integer"
                    },
                    "complianceRecordsTimeout": {
                      "type": "integer"
                    },
                    "complianceRecordsTimeoutSubsequent": {
                      "type": "integer"
                    },
                    "complianceRecordsDefaultAccept": {
                      "type": "boolean"
                    },
                    "overrideBUAbandonRate": {
                      "type": "boolean"
                    },
                    "beginDampenPercentage": {
                      "type": "number"
                    },
                    "abandonRateCutoff": {
                      "type": "number"
                    },
                    "abandonRateThreshold": {
                      "type": "number"
                    },
                    "aggressiveRatioFactor": {
                      "type": "integer"
                    },
                    "abandonTimeout": {
                      "type": "integer"
                    },
                    "isScheduled": {
                      "type": "boolean"
                    },
                    "enableDialingByProficiency": {
                      "type": "boolean"
                    },
                    "proficiencyFactor": {
                      "type": "number"
                    },
                    "waitTimeFactor": {
                      "type": "number"
                    },
                    "maxConcurrentCallsPerAgent": {
                      "type": "integer"
                    },
                    "maxWaitTimeSeconds": {
                      "type": "integer"
                    },
                    "complianceButtonOptions": {
                      "type": "integer"
                    },
                    "previewButtonOptions": {
                      "type": "integer"
                    },
                    "smsMessageTemplate": {
                      "type": "string"
                    },
                    "transportCode": {
                      "type": "string"
                    },
                    "enableBlending": {
                      "type": "boolean"
                    },
                    "inactiveBlendingTimerSeconds": {
                      "type": "integer"
                    },
                    "callbackInitialPriority": {
                      "type": "integer"
                    },
                    "priorityInitialPriority": {
                      "type": "integer"
                    },
                    "externalOutboundSkill_No": {
                      "type": "string"
                    },
                    "minCallbackMinutes": {
                      "type": "integer"
                    },
                    "maximumAttempts": {
                      "type": "integer"
                    },
                    "loadFresh": {
                      "type": "boolean"
                    },
                    "loadCallbacks": {
                      "type": "boolean"
                    },
                    "loadNonFresh": {
                      "type": "boolean"
                    },
                    "defaultContactExpirationMinutes": {
                      "type": "integer"
                    },
                    "restrictedCallingMaxAttempts": {
                      "type": "integer"
                    },
                    "restrictedCallingMinutes": {
                      "type": "integer"
                    },
                    "confirmationRequiredDefault": {
                      "type": "boolean"
                    },
                    "runGetPriorityContactsOnContactInsertion": {
                      "type": "boolean"
                    },
                    "xsGetContactsActive": {
                      "type": "boolean"
                    },
                    "xsReadyThreshold": {
                      "type": "integer"
                    },
                    "xsFreshThreshold": {
                      "type": "integer"
                    },
                    "xsAvailableThreshold": {
                      "type": "integer"
                    },
                    "xsNumberToRetrieve": {
                      "type": "integer"
                    },
                    "xsSkillChangedActive": {
                      "type": "boolean"
                    },
                    "complianceRecordsDisabled": {
                      "type": "boolean"
                    },
                    "confirmationRequiredDisabled": {
                      "type": "boolean"
                    },
                    "maxBlendingAttempts": {
                      "type": "integer"
                    },
                    "maxNumAnsweredCalls": {
                      "type": "integer"
                    },
                    "maxNumCallbacks": {
                      "type": "integer"
                    },
                    "finalizeWhenExhausted": {
                      "type": "boolean"
                    },
                    "callbackRestMinutes": {
                      "type": "integer"
                    },
                    "unassignAgentSpecificCallbacks": {
                      "type": "boolean"
                    },
                    "staleMinutesCallbacks": {
                      "type": "integer"
                    },
                    "staleMinutesGeneral": {
                      "type": "integer"
                    },
                    "xsScriptID": {
                      "type": "integer"
                    },
                    "xsCheckinScriptID": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid parameter"
        },
        "401": {
          "description": "<p>Invalid Security User</p><p>Invalid or expired token</p>"
        },
        "403": {
          "description": "Forbidden"
        },
        "405": {
          "description": "Method not allowed"
        },
        "500": {
          "description": "Error has occured while calling external service"
        }
      }
    }
  },
  "teams": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "%UPDATED_IN_V22%   Returns list of Teams",
      "operationsId": "get-teams",
      "description": "This method returns a list of details for all teams in the business unit.<br/><br/><b><i><span style='color:red'>v15.0 NOTE: </span></i></b> Added new response fields to facilitate sms and omni session routing.<div class='tabs_wrapper' data-path='admin_agents_getTeams.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/isActive"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "title": "TeamsResultSet",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to same page of results"
                  },
                  "next": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to next page of results"
                  },
                  "previous": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to previous page of results"
                  }
                }
              },
              "businessUnitId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of Business Unit",
                "required": true
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call",
                "required": true
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the payload",
                "required": true
              },
              "teams": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "teams",
                  "description": "",
                  "type": "object",
                  "properties": {
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team",
                      "required": true
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Team is active",
                      "required": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description associated with the Team",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Team",
                      "required": true
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Team record was last updated",
                      "required": true
                    },
                    "inViewEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView",
                      "required": true
                    },
                    "wfoEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use WFO",
                      "required": true
                    },
                    "wfm2Enabled": {
                      "type": "boolean"
                    },
                    "qm2Enabled": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum number of concurrent chats for Agents in this Team",
                      "required": true
                    },
                    "agentCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of Agents assigned to Team",
                      "required": true
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "description": "Maximum number of concurrent Emails a Team can handle",
                      "required": true
                    },
                    "inViewGamificationEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView Gamificattion",
                      "required": true
                    },
                    "inViewChatEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView chat",
                      "required": true
                    },
                    "inViewWallboardEnabled": {
                      "type": "boolean"
                    },
                    "inViewLMSEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView LMS",
                      "required": true
                    },
                    "analyticsEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team will use inContact Analytics",
                      "required": true
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer"
                    },
                    "emailThreshold": {
                      "type": "integer"
                    },
                    "workItemThreshold": {
                      "type": "integer"
                    },
                    "smsItemThreshold": {
                      "type": "integer"
                    },
                    "digitalThreshold": {
                      "type": "integer"
                    },
                    "voiceThreshold": {
                      "type": "integer"
                    },
                    "evolveTeamId": {
                      "type": "string"
                    },
                    "teamLeadUuid": {
                      "type": "string"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "niceAudioRecordingEnabled": {
                      "type": "boolean"
                    },
                    "niceDesktopAnalyticsEnabled": {
                      "type": "boolean"
                    },
                    "niceQmEnabled": {
                      "type": "boolean"
                    },
                    "niceScreenRecordingEnabled": {
                      "type": "boolean"
                    },
                    "niceSpeechAnalyticsEnabled": {
                      "type": "boolean"
                    },
                    "niceWfmEnabled": {
                      "type": "boolean"
                    },
                    "niceQualityOptimizationEnabled": {
                      "type": "boolean"
                    },
                    "niceSurvey_CustomerEnabled": {
                      "type": "boolean"
                    },
                    "nicePerformanceManagementEnabled": {
                      "type": "boolean"
                    },
                    "niceAnalyticsEnabled": {
                      "type": "boolean"
                    },
                    "niceLessonManagementEnabled": {
                      "type": "boolean"
                    },
                    "niceCoachingEnabled": {
                      "type": "boolean"
                    },
                    "niceStrategicPlannerEnabled": {
                      "type": "boolean"
                    },
                    "niceShiftBiddingEnabled": {
                      "type": "boolean"
                    },
                    "niceWfoAdvancedEnabled": {
                      "type": "boolean"
                    },
                    "niceWfoEssentialsEnabled": {
                      "type": "boolean"
                    },
                    "cxOneCustomerAuthentication": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": " Invalid fields -{0} is not a valid field name"
        },
        "401": {
          "description": "Invalid or expired token"
        }
      }
    },
    "post": {
      "tags": [ "Agents" ],
      "summary": "%UPDATED_IN_V22%  Create a Team",
      "operationId": "post-teams",
      "description": "This method will create a new Team in the business unit.<br/><br/><b><i><span style='color:red'> NOTE: </span></i></b>This method should not be used to update a user in UserHub.  If business unit is set to Omni Session Handling when requesting \" deliveryMode \" as <b>\"Single Contact\" </b> \"totalContactCount\" is required to be \"1\".<br/><br/><div class='tabs_wrapper' data-path='admin_agents_postTeams.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "teams",
          "description": "",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "teams": {
                "type": "array",
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "teamName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "wfoEnabled": {
                      "type": "boolean"
                    },
                    "wfm2Enabled": {
                      "type": "boolean"
                    },
                    "qm2Enabled": {
                      "type": "boolean"
                    },
                    "inViewEnabled": {
                      "type": "boolean"
                    },
                    "inViewGamificationEnabled": {
                      "type": "boolean"
                    },
                    "inViewChatEnabled": {
                      "type": "boolean"
                    },
                    "inViewLMSEnabled": {
                      "type": "boolean"
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 2000
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "analyticsEnabled": {
                      "type": "boolean"
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "emailThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "workItemThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "voiceThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 1.0
                    },
                    "smsThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "digitalThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 50.0
                    },
                    "teamUuid": {
                      "type": "string"
                    },
                    "teamLeadId": {
                      "type": "string",
                      "nullable": true
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer",
                      "nullable": true
                    },
                    "niceAudioRecordingEnabled": {
                      "type": "boolean"
                    },
                    "niceCoachingEnabled": {
                      "type": "boolean"
                    },
                    "niceDesktopAnalyticsEnabled": {
                      "type": "boolean"
                    },
                    "niceLessonManagementEnabled": {
                      "type": "boolean"
                    },
                    "nicePerformanceManagementEnabled": {
                      "type": "boolean"
                    },
                    "niceQmEnabled": {
                      "type": "boolean"
                    },
                    "niceQualityOptimizationEnabled": {
                      "type": "boolean"
                    },
                    "niceScreenRecordingEnabled": {
                      "type": "boolean"
                    },
                    "niceShiftBiddingEnabled": {
                      "type": "boolean"
                    },
                    "niceSpeechAnalyticsEnabled": {
                      "type": "boolean"
                    },
                    "niceStrategicPlannerEnabled": {
                      "type": "boolean"
                    },
                    "niceSurvey_CustomerEnabled": {
                      "type": "boolean"
                    },
                    "niceWfmEnabled": {
                      "type": "boolean"
                    },
                    "niceWfoAdvancedEnabled": {
                      "type": "boolean"
                    },
                    "cxOneCustomerAuthenticationEnabled": {
                      "type": "boolean"
                    },
                    "niceWfoEssentialsEnabled": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "teamName"
                  ]
                },
                "maxItems": 100
              }
            },
            "required": [
              "teams"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "results": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "teamId": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "206": {
          "description": "Partial success. One or more teams were not created",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "results": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "teamId": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid teams '{0}'.teamName - String '' is less than minimum length of 1."
        }
      }
    }
  },
  "teams_teamId": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "%UPDATED_IN_V22%  Get Team by TeamId",
      "operationId": "get-teams-id",
      "description": "This method returns a list of details for the Team specified by \"teamId\" and includes an array of elements containing information about the Agents assigned to that Team.<b><i><span style='color:red'>v15.0 NOTE: </span></i></b>Added new response fields to facilitate sms and omni session routing.<div class='tabs_wrapper' data-path='admin_agents_getTeamID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "teamId",
          "description": "Team Id",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessUnitId": {
                "type": "integer",
                "description": "ID of Business Unit",
                "required": true
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call",
                "required": true
              },
              "teams": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team",
                      "required": true
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Team is active",
                      "required": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description associated with the Team",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Team",
                      "required": true
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Team record was last updated",
                      "required": true
                    },
                    "inViewEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView",
                      "required": true
                    },
                    "wfoEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use WFO",
                      "required": true
                    },
                    "wfm2Enabled": {
                      "type": "boolean"
                    },
                    "qm2Enabled": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Maximum number of concurrent chats for Agents in this Team",
                      "required": true
                    },
                    "agentCount": {
                      "type": "integer",
                      "description": "Number of Agents assigned to Team",
                      "required": true
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "description": "Maximum number of concurrent Emails a Team can handle",
                      "required": true
                    },
                    "inViewGamificationEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView Gamificattion",
                      "required": true
                    },
                    "inViewChatEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView chat",
                      "required": true
                    },
                    "inViewWallboardEnabled": {
                      "type": "boolean"
                    },
                    "inViewLMSEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team can use inView LMS",
                      "required": true
                    },
                    "analyticsEnabled": {
                      "type": "boolean",
                      "description": "Indicates the Team will use inContact Analytics",
                      "required": true
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer"
                    },
                    "emailThreshold": {
                      "type": "integer"
                    },
                    "workItemThreshold": {
                      "type": "integer"
                    },
                    "smsThreshold": {
                      "type": "integer"
                    },
                    "digitalThreshold": {
                      "type": "integer"
                    },
                    "socialThreshold": {
                      "type": "integer"
                    },
                    "voiceThreshold": {
                      "type": "integer"
                    },
                    "evolveTeamId": {
                      "type": "string"
                    },
                    "teamLeadId": {
                      "type": "string"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "niceAudioRecordingEnabled": {
                      "type": "boolean"
                    },
                    "niceDesktopAnalyticsEnabled": {
                      "type": "boolean"
                    },
                    "niceQmEnabled": {
                      "type": "boolean"
                    },
                    "niceScreenRecordingEnabled": {
                      "type": "boolean"
                    },
                    "niceSpeechAnalyticsEnabled": {
                      "type": "boolean"
                    },
                    "niceWfmEnabled": {
                      "type": "boolean"
                    },
                    "niceQualityOptimizationEnabled": {
                      "type": "boolean"
                    },
                    "niceSurvey_CustomerEnabled": {
                      "type": "boolean"
                    },
                    "nicePerformanceManagementEnabled": {
                      "type": "boolean"
                    },
                    "niceAnalyticsEnabled": {
                      "type": "boolean"
                    },
                    "niceLessonManagementEnabled": {
                      "type": "boolean"
                    },
                    "niceCoachingEnabled": {
                      "type": "boolean"
                    },
                    "niceStrategicPlannerEnabled": {
                      "type": "boolean"
                    },
                    "niceShiftBiddingEnabled": {
                      "type": "boolean"
                    },
                    "niceWfoAdvancedEnabled": {
                      "type": "boolean"
                    },
                    "cxOneCustomerAuthenticationEnabled": {
                      "type": "boolean"
                    },
                    "niceWfoEssentialsEnabled": {
                      "type": "boolean"
                    },
                    "agents": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "object",
                        "title": "agents",
                        "description": "",
                        "properties": {
                          "agentId": {
                            "type": "integer",
                            "description": "ID of the Agent",
                            "required": true
                          },
                          "firstName": {
                            "type": "string",
                            "description": "First name of the Agent",
                            "required": true
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of the Agent",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid fields '{0}' is not a valid field name"
        },
        "404": {
          "description": "Invalid teamId '{0}' "
        }
      }
    },
    "put": {
      "tags": [ "Agents" ],
      "summary": "%UPDATED_IN_V22%  Update a Team",
      "operationId": "put-teams-id",
      "description": "This method updates the Team specified by teamId. </br></br><b><i><span style='color:red'>NOTE: </span></i></b> This method should not be used to update a user in UserHub.  If business unit is set to Omni Session Handling when requesting \"deliveryMode\" as <b>\"Single Contact\" </b> \"totalContactCount\" is required to be \"1\". <div class='tabs_wrapper' data-path='admin_agents_putTeamID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "teamId",
          "description": "Team Id",
          "type": "string",
          "in": "path",
          "required": true
        },
        {
          "name": "forceInactive",
          "description": "Inactivate team with assigned agents",
          "type": "boolean",
          "required": true,
          "in": "query"
        },
        {
          "name": "team",
          "description": "Team Object",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "forceInactive": {
                "type": "boolean"
              },
              "team": {
                "type": "object",
                "properties": {
                  "teamName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "maxConcurrentChats": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 12.0
                  },
                  "wfoEnabled": {
                    "type": "boolean"
                  },
                  "wfm2Enabled": {
                    "type": "boolean"
                  },
                  "qm2Enabled": {
                    "type": "boolean"
                  },
                  "inViewEnabled": {
                    "type": "boolean"
                  },
                  "inViewGamificationEnabled": {
                    "type": "boolean"
                  },
                  "inViewWallboardEnabled": {
                    "type": "boolean"
                  },
                  "inViewLMSEnabled": {
                    "type": "boolean"
                  },
                  "notes": {
                    "type": "string",
                    "maxLength": 2000
                  },
                  "maxEmailAutoParkingLimit": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 25.0
                  },
                  "analyticsEnabled": {
                    "type": "boolean"
                  },
                  "requestContact": {
                    "type": "boolean"
                  },
                  "contactAutoFocus": {
                    "type": "boolean"
                  },
                  "chatThreshold": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 12.0
                  },
                  "emailThreshold": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 25.0
                  },
                  "workItemThreshold": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 25.0
                  },
                  "smsThreshold": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 12.0
                  },
                  "digitalThreshold": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 50.0
                  },
                  "voiceThreshold": {
                    "type": "integer",
                    "minimum": 0.0,
                    "maximum": 1.0
                  },
                  "teamUuid": {
                    "type": "string"
                  },
                  "teamLeadId": {
                    "type": "string"
                  },
                  "deliveryMode": {
                    "type": "string"
                  },
                  "totalContactCount": {
                    "type": "integer"
                  },
                  "niceAudioRecordingEnabled": {
                    "type": "boolean"
                  },
                  "niceCoachingEnabled": {
                    "type": "boolean"
                  },
                  "niceDesktopAnalyticsEnabled": {
                    "type": "boolean"
                  },
                  "niceLessonManagementEnabled": {
                    "type": "boolean"
                  },
                  "nicePerformanceManagementEnabled": {
                    "type": "boolean"
                  },
                  "niceQmEnabled": {
                    "type": "boolean"
                  },
                  "niceQualityOptimizationEnabled": {
                    "type": "boolean"
                  },
                  "niceScreenRecordingEnabled": {
                    "type": "boolean"
                  },
                  "niceShiftBiddingEnabled": {
                    "type": "boolean"
                  },
                  "niceSpeechAnalyticsEnabled": {
                    "type": "boolean"
                  },
                  "niceStrategicPlannerEnabled": {
                    "type": "boolean"
                  },
                  "niceSurvey_CustomerEnabled": {
                    "type": "boolean"
                  },
                  "niceWfmEnabled": {
                    "type": "boolean"
                  },
                  "niceWfoAdvancedEnabled": {
                    "type": "boolean"
                  },
                  "cxOneCustomerAuthenticationEnabled": {
                    "type": "boolean"
                  },
                  "niceWfoEssentialsEnabled": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "team"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": " Invalid team teamName String {0} is less than minimum length of 1"
        },
        "403": {
          "description": "<p>{0} cannot be enabled when {1}</p><p>TeamId restricted</p>"
        },
        "404": {
          "description": "Invalid teamId or teamUuid"
        },
        "409": {
          "description": "<p>Cannot make a Team with active Agents inactive. Use forceInactive to make all Agents in Team inactive</p><p>Default Team Enabled</p>"
        }
      }
    }
  },
  "teams-teamId-agents": {
    "post": {
      "tags": [ "Agents" ],
      "summary": "Assign Agents to a Team",
      "operationId": "AssignAgentsToTeam",
      "description": "This method assigns the Agents in the agents parameter to the Team identified by teamId.<div class='tabs_wrapper' data-path='admin_agents_postTeamAgentsID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "teamId",
          "type": "string",
          "description": "ID of the Team",
          "required": true,
          "in": "path"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postTeamAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postTeamAgentsResponse"
          }
        },
        "400": {
          "description": "<p>Cannot send more than 10,000 records in a single call</p><p>Invalid agents - cannot be null or empty</p>"
        },
        "403": {
          "description": "<p>Team - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid teamId - '{0}' "
        }
      }
    },
    "delete": {
      "tags": [ "Agents" ],
      "summary": " Remove Agents from a Team",
      "operationId": "RemoveAgentsFromTeam",
      "description": "This method deletes the Agents in the agents parameter from the Team identified by teamId.</br></br><b><i><span style='color:red'>NOTE: </span></i></b>This method should not be used to remove an assigned user from a team in UserHub.<div class='tabs_wrapper' data-path='admin_agents_deleteTeamAgentsID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "name": "transferTeamId",
          "description": "ID of Team the removed Agents will be assigned to. All Agents must be assigned to a Team",
          "required": true,
          "type": "integer",
          "in": "query"
        },
        {
          "in": "body",
          "name": "Agents",
          "description": "Content Body",
          "type": "DynamicData",
          "schema": {
            "$ref": "#/definitions/postTeamAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/deleteTeamAgentsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid transferTeamId - {0}</p><p>Invalid agents - cannot be null or empty</p><p>Cannot send more than 10,000 records in a single call</p>"
        },
        "403": {
          "description": "<p>Team - '{0}' is restricted</p><p>TransferTeam - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid teamId - '{0}' "
        }
      }
    },
    "get": {
      "tags": [ "Agents" ],
      "summary": "%UPDATED_IN_V22%   Returns a Team’s Agents",
      "operationId": "get-teams-id-agents",
      "description": "This method returns the full list of Teams including the Agents on each of the Teams.</br></br><b><i><span style='color:red'>v17.0 NOTE: </span></i></b>New response parameters in the agent array added for Omni Session Handling. Granular configuration must be enabled to use these parameters.<div class='tabs_wrapper' data-path='admin_agents_getTeamAgentsID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "teamId",
          "description": "Team Id",
          "type": "string",
          "required": true,
          "in": "path"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/isActive"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "teamId": {
                "type": "integer",
                "description": "ID of the Team",
                "required": true
              },
              "teamName": {
                "type": "string",
                "description": "Name of the Team",
                "required": true
              },
              "isActive": {
                "type": "boolean",
                "description": "Indicates if Team is active",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "Description associated with the Team",
                "required": true
              },
              "notes": {
                "type": "string",
                "description": "Notes associated with the Team",
                "required": true
              },
              "lastUpdateTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 time the Team record was last updated",
                "required": true
              },
              "inViewEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use inView",
                "required": true
              },
              "wfoEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use WFO",
                "required": true
              },
              "wfm2Enabled": {
                "type": "boolean"
              },
              "qm2Enabled": {
                "type": "boolean"
              },
              "maxConcurrentChats": {
                "type": "integer"
              },
              "agentCount": {
                "type": "integer",
                "format": "int64",
                "description": "Number of Agents assigned to Team",
                "required": true
              },
              "maxEmailAutoParkingLimit": {
                "type": "integer"
              },
              "inViewGamificationEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use inView Gamificattion",
                "required": true
              },
              "inViewChatEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use inView chat",
                "required": true
              },
              "inViewLMSEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use inView LMS",
                "required": true
              },
              "analyticsEnabled": {
                "type": "boolean",
                "description": "Indicates the Team will use inContact Analytics",
                "required": true
              },
              "requestContact": {
                "type": "boolean"
              },
              "contactAutoFocus": {
                "type": "boolean"
              },
              "chatThreshold": {
                "type": "integer"
              },
              "emailThreshold": {
                "type": "integer"
              },
              "workItemThreshold": {
                "type": "integer"
              },
              "voiceThreshold": {
                "type": "integer"
              },
              "socialThreshold": {
                "type": "integer"
              },
              "smsThreshold": {
                "type": "integer"
              },
              "digitalThreshold": {
                "type": "integer"
              },
              "agents": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "agents",
                  "description": "",
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent",
                      "required": true
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Middle name of the Agent",
                      "required": true,
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 50,
                      "description": "Last name of the Agent",
                      "required": true
                    },
                    "userID": {
                      "type": "string",
                      "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Email address of the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active",
                      "required": true
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team for the Agent",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team for the Agent",
                      "required": true
                    },
                    "reportToId": {
                      "type": "integer",
                      "description": "ID of user the Agent reports to",
                      "required": true
                    },
                    "reportToName": {
                      "type": "string"
                    },
                    "isSupervisor": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is a Supervisor",
                      "required": true
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time of last login for Agent",
                      "required": true
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "location": {
                      "type": "string"
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Custom ID associated with Agent",
                      "required": true
                    },
                    "profileId": {
                      "type": "integer"
                    },
                    "profileName": {
                      "type": "string",
                      "description": "name of profile"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "Country assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "countryName": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "description": "State or Province assigned to the Agent",
                      "required": true
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of City assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact",
                      "required": true
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a phone contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a work item contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "defaultDialingPattern": {
                      "type": "integer",
                      "description": "ID of the Agent Pattern associated with this Agent",
                      "required": true
                    },
                    "defaultDialingPatternName": {
                      "type": "string"
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "ID of the Agent Pattern associated with this Agent",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Agent",
                      "required": true
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hourlyCost": {
                      "type": "number"
                    },
                    "rehireStatus": {
                      "type": "boolean"
                    },
                    "employmentType": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 5.0
                    },
                    "employmentTypeName": {
                      "type": "string"
                    },
                    "referral": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "atHome": {
                      "type": "boolean"
                    },
                    "hiringSource": {
                      "type": "integer"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "scheduleNotification": {
                      "type": "integer"
                    },
                    "federatedId": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "useTeamEmailAutoParkingLimit": {
                      "type": "boolean"
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 25.0
                    },
                    "sipUser": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "systemUser": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "systemDomain": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "crmUserName": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "useAgentTimeZone": {
                      "type": "boolean"
                    },
                    "timeDisplayFormat": {
                      "type": "string"
                    },
                    "sendEmailNotifications": {
                      "type": "boolean"
                    },
                    "apiKey": {
                      "type": "string"
                    },
                    "telephone1": {
                      "type": "string"
                    },
                    "telephone2": {
                      "type": "string"
                    },
                    "userType": {
                      "type": "string"
                    },
                    "isWhatIfAgent": {
                      "type": "boolean"
                    },
                    "timeZoneOffset": {
                      "type": "string"
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamChatThreshold": {
                      "type": "boolean"
                    },
                    "emailThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamEmailThreshold": {
                      "type": "boolean"
                    },
                    "workItemThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamWorkItemThreshold": {
                      "type": "boolean"
                    },
                    "smsThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamSmsThreshold": {
                      "type": "boolean"
                    },
                    "digitalThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 50.0
                    },
                    "useTeamDigitalThreshold": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamRequestContact": {
                      "type": "boolean"
                    },
                    "subject": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "issuer": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "recordingNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "isOpenIdProfileComplete": {
                      "type": "boolean"
                    },
                    "teamUuId": {
                      "type": "string",
                      "example": "66ac6103-df24-22ea-886c-023113831ff4",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "maxPreview": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "voicemailRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    },
                    "agentMaxVersion": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "teamId": {
                "type": "integer",
                "description": "ID of the Team",
                "required": true
              },
              "teamName": {
                "type": "string",
                "description": "Name of the Team",
                "required": true
              },
              "isActive": {
                "type": "boolean",
                "description": "Indicates if Team is active",
                "required": true
              },
              "description": {
                "type": "string",
                "description": "Description associated with the Team",
                "required": true
              },
              "notes": {
                "type": "string",
                "description": "Notes associated with the Team",
                "required": true
              },
              "lastUpdateTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 time the Team record was last updated",
                "required": true
              },
              "inViewEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use inView",
                "required": true
              },
              "wfoEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use WFO",
                "required": true
              },
              "wfm2Enabled": {
                "type": "boolean"
              },
              "qm2Enabled": {
                "type": "boolean"
              },
              "maxConcurrentChats": {
                "type": "integer"
              },
              "agentCount": {
                "type": "integer",
                "format": "int64",
                "description": "Number of Agents assigned to Team",
                "required": true
              },
              "maxEmailAutoParkingLimit": {
                "type": "integer"
              },
              "inViewGamificationEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use inView Gamificattion",
                "required": true
              },
              "inViewChatEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use inView chat",
                "required": true
              },
              "inViewLMSEnabled": {
                "type": "boolean",
                "description": "Indicates the Team can use inView LMS",
                "required": true
              },
              "analyticsEnabled": {
                "type": "boolean",
                "description": "Indicates the Team will use inContact Analytics",
                "required": true
              },
              "requestContact": {
                "type": "boolean"
              },
              "contactAutoFocus": {
                "type": "boolean"
              },
              "chatThreshold": {
                "type": "integer"
              },
              "emailThreshold": {
                "type": "integer"
              },
              "workItemThreshold": {
                "type": "integer"
              },
              "voiceThreshold": {
                "type": "integer"
              },
              "socialThreshold": {
                "type": "integer"
              },
              "smsThreshold": {
                "type": "integer"
              },
              "digitalThreshold": {
                "type": "integer"
              },
              "agents": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "agents",
                  "description": "",
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent",
                      "required": true
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name of the Agent",
                      "required": true,
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Middle name of the Agent",
                      "required": true,
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 50,
                      "description": "Last name of the Agent",
                      "required": true
                    },
                    "userID": {
                      "type": "string",
                      "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Email address of the Agent",
                      "required": true,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Agent is active",
                      "required": true
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "ID of the Team for the Agent",
                      "required": true
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Name of the Team for the Agent",
                      "required": true
                    },
                    "reportToId": {
                      "type": "integer",
                      "description": "ID of user the Agent reports to",
                      "required": true
                    },
                    "reportToName": {
                      "type": "string"
                    },
                    "isSupervisor": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is a Supervisor",
                      "required": true
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time of last login for Agent",
                      "required": true
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "location": {
                      "type": "string"
                    },
                    "custom1": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom2": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom3": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom4": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "custom5": {
                      "type": "string",
                      "description": "Custom value associated with Agent",
                      "required": true
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Custom ID associated with Agent",
                      "required": true
                    },
                    "profileId": {
                      "type": "integer"
                    },
                    "profileName": {
                      "type": "string",
                      "description": "name of profile"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Timezone assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "description": "Country assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "countryName": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "description": "State or Province assigned to the Agent",
                      "required": true
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of City assigned to the Agent",
                      "required": true,
                      "minLength": 1
                    },
                    "chatRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a chat contact",
                      "required": true
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a phone contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "description": "Time in seconds the Agent has to accept a work item contact",
                      "required": true,
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "defaultDialingPattern": {
                      "type": "integer",
                      "description": "ID of the Agent Pattern associated with this Agent",
                      "required": true
                    },
                    "defaultDialingPatternName": {
                      "type": "string"
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "ID of the Agent Pattern associated with this Agent",
                      "required": true
                    },
                    "notes": {
                      "type": "string",
                      "description": "Notes associated with the Agent",
                      "required": true
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hourlyCost": {
                      "type": "number"
                    },
                    "rehireStatus": {
                      "type": "boolean"
                    },
                    "employmentType": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 5.0
                    },
                    "employmentTypeName": {
                      "type": "string"
                    },
                    "referral": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "atHome": {
                      "type": "boolean"
                    },
                    "hiringSource": {
                      "type": "integer"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "scheduleNotification": {
                      "type": "integer"
                    },
                    "federatedId": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "useTeamEmailAutoParkingLimit": {
                      "type": "boolean"
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 25.0
                    },
                    "sipUser": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "systemUser": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "systemDomain": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "crmUserName": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "useAgentTimeZone": {
                      "type": "boolean"
                    },
                    "timeDisplayFormat": {
                      "type": "string"
                    },
                    "sendEmailNotifications": {
                      "type": "boolean"
                    },
                    "apiKey": {
                      "type": "string"
                    },
                    "telephone1": {
                      "type": "string"
                    },
                    "telephone2": {
                      "type": "string"
                    },
                    "userType": {
                      "type": "string"
                    },
                    "isWhatIfAgent": {
                      "type": "boolean"
                    },
                    "timeZoneOffset": {
                      "type": "string"
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamChatThreshold": {
                      "type": "boolean"
                    },
                    "emailThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamEmailThreshold": {
                      "type": "boolean"
                    },
                    "workItemThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamWorkItemThreshold": {
                      "type": "boolean"
                    },
                    "smsThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamSmsThreshold": {
                      "type": "boolean"
                    },
                    "digitalThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 50.0
                    },
                    "useTeamDigitalThreshold": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamRequestContact": {
                      "type": "boolean"
                    },
                    "subject": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "issuer": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "recordingNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "isOpenIdProfileComplete": {
                      "type": "boolean"
                    },
                    "teamUuId": {
                      "type": "string",
                      "example": "66ac6103-df24-22ea-886c-023113831ff4",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "maxPreview": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "voicemailRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    },
                    "agentMaxVersion": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "<p>Invalid fields '{0}' is not a valid field name</p><p> Invalid parameter 'teamId', must be type Int32</p>"
        },
        "403": {
          "description": "Teamid - '{0}' is restricted"
        },
        "404": {
          "description": " Invalid teamId '{0}' "
        },
        "409": {
          "description": "Invalid Permissions"
        }
      }
    }
  },
  "teams-agents": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Returns all Team’s Agents",
      "operationId": "TeamsAgents",
      "description": "This method returns the full list of Teams including the Agents on each of the Teams.<br/><br/><div class='tabs_wrapper' data-path='admin_agents_getTeamAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "title": "TeamsResultSet",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "lastPollTime": {
                "type": "string"
              },
              "teams": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "teamId": {
                      "type": "integer"
                    },
                    "teamName": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "lastUpdateTime": {
                      "type": "string"
                    },
                    "inViewEnabled": {
                      "type": "boolean"
                    },
                    "wfoEnabled": {
                      "type": "boolean"
                    },
                    "wfm2Enabled": {
                      "type": "boolean"
                    },
                    "qm2Enabled": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer"
                    },
                    "agentCount": {
                      "type": "integer"
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer"
                    },
                    "inViewGamificationEnabled": {
                      "type": "boolean"
                    },
                    "inViewChatEnabled": {
                      "type": "boolean"
                    },
                    "inViewLMSEnabled": {
                      "type": "boolean"
                    },
                    "analyticsEnabled": {
                      "type": "boolean"
                    },
                    "agents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agentId": {
                            "type": "integer"
                          },
                          "userName": {
                            "type": "string",
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                          },
                          "firstName": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "middleName": {
                            "type": "string",
                            "description": "Middle name of the Agent",
                            "required": true,
                            "maxLength": 50
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of the Agent",
                            "required": true,
                            "minLength": 1,
                            "maxLength": 50
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "Email address of the Agent",
                            "required": true,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Indicates if Agent is active",
                            "required": true
                          },
                          "teamId": {
                            "type": "integer",
                            "description": "ID of the Team for the Agent",
                            "required": true
                          },
                          "teamName": {
                            "type": "string",
                            "description": "Name of the Team for the Agent",
                            "required": true
                          },
                          "reportToId": {
                            "type": "integer",
                            "description": "ID of user the Agent reports to",
                            "required": true
                          },
                          "reportToName": {
                            "type": "string"
                          },
                          "isSupervisor": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is a Supervisor",
                            "required": true
                          },
                          "lastLogin": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time of last login for Agent",
                            "required": true
                          },
                          "lastUpdated": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 time the Agent record was last updated",
                            "required": true
                          },
                          "location": {
                            "type": "string"
                          },
                          "custom1": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom2": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom3": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom4": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "custom5": {
                            "type": "string",
                            "description": "Custom value associated with Agent",
                            "required": true
                          },
                          "internalId": {
                            "type": "string",
                            "description": "Custom ID associated with Agent",
                            "required": true
                          },
                          "profileId": {
                            "type": "integer"
                          },
                          "profileName": {
                            "type": "string",
                            "description": "name of profile"
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "Timezone assigned to the Agent",
                            "required": true,
                            "minLength": 1
                          },
                          "country": {
                            "type": "string",
                            "description": "Country assigned to the Agent",
                            "required": true,
                            "minLength": 1
                          },
                          "countryName": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string",
                            "description": "State or Province assigned to the Agent",
                            "required": true
                          },
                          "city": {
                            "type": "string",
                            "description": "Name of City assigned to the Agent",
                            "required": true,
                            "minLength": 1
                          },
                          "chatRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a chat contact",
                            "required": true
                          },
                          "phoneRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a phone contact",
                            "required": true,
                            "minimum": 15.0,
                            "maximum": 300.0
                          },
                          "workItemRefusalTimeout": {
                            "type": "integer",
                            "description": "Time in seconds the Agent has to accept a work item contact",
                            "required": true,
                            "minimum": 15.0,
                            "maximum": 300.0
                          },
                          "defaultDialingPattern": {
                            "type": "integer",
                            "description": "ID of the Agent Pattern associated with this Agent",
                            "required": true
                          },
                          "defaultDialingPatternName": {
                            "type": "string"
                          },
                          "useTeamMaxConcurrentChats": {
                            "type": "boolean"
                          },
                          "maxConcurrentChats": {
                            "type": "integer",
                            "description": "Indicates number of chat contacts the Agent can accept concurrently",
                            "required": true
                          },
                          "notes": {
                            "type": "string",
                            "description": "Notes associated with the Agent",
                            "required": true
                          },
                          "createDate": {
                            "type": "string"
                          },
                          "inactiveDate": {
                            "type": "string"
                          },
                          "hireDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date of Agent hire",
                            "required": true
                          },
                          "terminationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date of Agent termination",
                            "required": true
                          },
                          "hourlyCost": {
                            "type": "number",
                            "description": "Cost of Agent",
                            "required": true
                          },
                          "rehireStatus": {
                            "type": "boolean",
                            "description": "Indicates is the Agent is a re-hire",
                            "required": true
                          },
                          "employmentType": {
                            "type": "integer",
                            "description": "ID of the employment type",
                            "required": true,
                            "minimum": 1.0,
                            "maximum": 5.0
                          },
                          "employmentTypeName": {
                            "type": "string"
                          },
                          "referral": {
                            "type": "string",
                            "description": "Description of any referral given",
                            "required": true,
                            "maxLength": 30
                          },
                          "atHome": {
                            "type": "boolean",
                            "description": "Indicates if the Agent is an at home worker",
                            "required": true
                          },
                          "hiringSource": {
                            "type": "integer",
                            "description": "Source of Agent hiring",
                            "required": true
                          },
                          "ntLoginName": {
                            "type": "string",
                            "description": "",
                            "required": true
                          },
                          "scheduleNotification": {
                            "type": "integer",
                            "description": "Interval in minutes for WFM schedule updates",
                            "required": true
                          },
                          "federatedId": {
                            "type": "string",
                            "maxLength": 128
                          },
                          "useTeamEmailAutoParkingLimit": {
                            "type": "boolean"
                          },
                          "maxEmailAutoParkingLimit": {
                            "type": "integer",
                            "minimum": 1.0,
                            "maximum": 25.0
                          },
                          "sipUser": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "systemUser": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "systemDomain": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "crmUserName": {
                            "type": "string",
                            "maxLength": 100
                          },
                          "useAgentTimeZone": {
                            "type": "boolean"
                          },
                          "timeDisplayFormat": {
                            "type": "string"
                          },
                          "sendEmailNotifications": {
                            "type": "boolean"
                          },
                          "apiKey": {
                            "type": "string"
                          },
                          "telephone1": {
                            "type": "string"
                          },
                          "telephone2": {
                            "type": "string"
                          },
                          "userType": {
                            "type": "string"
                          },
                          "isWhatIfAgent": {
                            "type": "boolean"
                          },
                          "timeZoneOffset": {
                            "type": "string"
                          },
                          "requestContact": {
                            "type": "boolean"
                          },
                          "chatThreshold": {
                            "type": "integer",
                            "minimum": 0.0,
                            "maximum": 12.0
                          },
                          "useTeamChatThreshold": {
                            "type": "boolean"
                          },
                          "emailThreshold": {
                            "type": "integer",
                            "minimum": 0.0,
                            "maximum": 25.0
                          },
                          "useTeamEmailThreshold": {
                            "type": "boolean"
                          },
                          "workItemThreshold": {
                            "type": "integer",
                            "minimum": 0.0,
                            "maximum": 25.0
                          },
                          "useTeamWorkItemThreshold": {
                            "type": "boolean"
                          },
                          "contactAutoFocus": {
                            "type": "boolean"
                          },
                          "useTeamContactAutoFocus": {
                            "type": "boolean"
                          },
                          "useTeamRequestContact": {
                            "type": "boolean"
                          },
                          "subject": {
                            "type": "string",
                            "maxLength": 255
                          },
                          "issuer": {
                            "type": "string",
                            "maxLength": 255
                          },
                          "recordingNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 100
                                }
                              },
                              "required": [
                                "number"
                              ]
                            }
                          },
                          "isOpenIdProfileComplete": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid fields - '{0}' is not a valid field name"
        }
      }
    }
  },
  "teams_teamId_unavailable_codes": {
    "get": {
      "tags": [ "Agents" ],
      "summary": "Gets all outstates that are valid for a team.",
      "operationId": "get-teams-id-unavailable-codes",
      "description": "This method returns the unavailable codes that are available for a Team identified by teamId.  These are the only unavailable codes that can be used as a \"reason\" in the <b><i><a href='AgentAPI#!/Sessions/setAgentStatus'>POST /agent-session/{sessionId}state</a></i></b> and <b><i><a href='AdminAPI#!/Agents/SetAgentState'>POST /agents/{agentId}/state</a></i></b> methods where you can set the state of an Agent.<div class='tabs_wrapper' data-path='admin_contacts_getTeamIDUnavailableCode.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "name": "activeOnly",
          "description": "Set this to true if you want only active unavailable codes.  Set this to false to get all.",
          "type": "boolean",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getTeamUnavailableCodesResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}', {2}"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "404": {
          "description": "<p><p>Invalid teamId - '{0}', cannot be null or empty</p><p>Invalid teamId - '{0}', must be an integer or Guid</p></p><p>Invalid teamId - '{0}', does not exist</p>"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    },
    "post": {
      "tags": [ "Agents" ],
      "summary": "Assign Unavailable Codes to a Team",
      "operationId": "AssignUnavailableCode",
      "description": "This method assigns unavailable codes to a Team identified by teamId.<div class='tabs_wrapper' data-path='admin_contacts_postTeamIDUnavailableCode.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postTeamUnavailableCodesRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postTeamUnavailableCodesResponse"
          }
        },
        "400": {
          "description": "Invalid codes - cannot be null or empty"
        },
        "403": {
          "description": "<p>Team - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid teamId - {0}"
        }
      }
    },
    "put": {
      "tags": [ "Agents" ],
      "summary": "Updates Unavailable Code for a team.",
      "operationId": "put-teams-id-unavailable-codes",
      "description": "This method modifies unavailable codes of a specific team identified by teamId.<div class='tabs_wrapper' data-path='admin_contacts_putTeamIDUnavailableCode.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "securityUser",
          "description": "Security User",
          "type": "string",
          "in": "query"
        },
        {
          "name": "teamId",
          "description": "ID of the Team",
          "type": "integer",
          "required": true,
          "in": "path"
        },
        {
          "name": "code",
          "description": "Content Body",
          "in": "body",
          "schema": {
            "title": " ",
            "description": "",
            "type": "object",
            "required": [ "unavailableCodes" ],
            "properties": {
              "unavailableCodes": {
                "type": "array",
                "description": "Collection of Unavailable Codes to assign",
                "items": {
                  "title": "unavailableCodes",
                  "required": [ "outStateId" ],
                  "properties": {
                    "outStateId": {
                      "type": "integer",
                      "description": "Unavailable Code Id to assign"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p><p><p><p><p><p>Invalid teamId or teamUuid - cannot be null or empty</p><p>Invalid teamId or teamUuid - '{0}', must be an integer or a Guid</p></p><p>Invalid unavailableCodes - cannot be null or empty</p></p><p>Invalid outStateId - cannot be null or empty</p></p><p>Invalid outStateId - '{0}', must be an integer</p></p><p>Invalid outStateId - '{0}', can not assigned to team</p></p><p>Invalid outStateId - '{0}', is not active</p>"
        },
        "403": {
          "description": "Teamid - '{0}' is restricted"
        },
        "404": {
          "description": "<p>Invalid teamId or teamUuid - '{0}', does not exist</p><p>Invalid outStateId - '{0}', does not exist</p>"
        }
      }
    },
    "delete": {
      "tags": [ "Agents" ],
      "summary": " Remove an Unavailable Code from a Team",
      "operationId": "RemoveUnavailableCodeTeam",
      "description": "This method removes unavailable codes from a Team identified by teamId.<div class='tabs_wrapper' data-path='admin_contacts_deleteTeamIDUnavailableCode.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/teamId"
        },
        {
          "in": "body",
          "name": "Codes",
          "description": "Content Body",
          "type": "DynamicData",
          "schema": {
            "$ref": "#/definitions/deleteTeamUnavailableCodesRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/deleteTeamUnavailableCodesResponse"
          }
        },
        "400": {
          "description": "Invalid codes - cannot be null or empty"
        },
        "403": {
          "description": "<p>Team - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid teamId - {0}"
        }
      }
    }
  },
  "unavailable-codes_unavailablecodeId": {
    "put": {
      "tags": [ "Agents" ],
      "summary": "Updates an unavailable code",
      "operationId": "put-unavailable-codes-id",
      "description": "This method will update an unavailable code and configure “postContact” and “agentTimeout”.<div class='tabs_wrapper' data-path='admin_Agents_putUnavailableCodeID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "unavailableCodeId",
          "description": "",
          "type": "integer",
          "in": "query"
        },
        {
          "name": "unavailableCode",
          "description": "",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "unavailableCodeName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 25
              },
              "postContact": {
                "type": "boolean"
              },
              "agentTimeout": {
                "type": "integer",
                "nullable": true,
                "minimum": 30.0,
                "maximum": 720.0
              },
              "isActive": {
                "type": "boolean"
              }
            },
            "required": [
              "unavailableCodeName"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid parameter 'unavailableCodeId', must be type Int32</p><p> Invalid unavailableCodeName - String '' is less than minimum length of 1</p>"
        },
        "404": {
          "description": "Invalid UnavailableCodeId '{0}'"
        }
      }
    }
  },
  "unavailable-codes_unavailablecodeId_teams": {
    "put": {
      "tags": [ "Agents" ],
      "summary": "Assign Unavailable Code to Teams",
      "operationId": "put-unavailable-codes-id-teams",
      "description": "This method will assign an array of teams to an unavailable code.  “unavailableCodeId” may also be referenced as “outStateId” as in the response from GET /unavailable-codes.  To remove a team use DELETE /teams/{teamId}/unavailable-codes.<div class='tabs_wrapper' data-path='admin_Agents_putUnavailableCodeIDTeams.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "securityUser",
          "description": "SecurityUser",
          "type": "string",
          "in": "query"
        },
        {
          "name": "unavailableCodeId",
          "description": "Unavailable Code Id",
          "type": "integer",
          "in": "path"
        },
        {
          "name": "teams",
          "description": "",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "teams": {
                "type": "array",
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "teamId": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            },
            "required": [
              "teams"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "error": {
                "type": "string"
              },
              "error_Description": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Invalid parameter 'unavailableCodeId', must be type Int32"
        },
        "404": {
          "description": "Invalid UnavailableCodeId - '{0}', does not exist"
        }
      }
    }
  },
  "definitions": {
    "parameters": {
      "agentId": {
        "name": "agentId|userId",
        "description": "ID of the Agent",
        "required": true,
        "type": "string",
        "in": "path"
      },
      "agentID": {
        "name": "agentId",
        "description": "ID of the Agent",
        "required": true,
        "type": "string",
        "in": "path"
      },
      "agentIdNew": {
        "name": "agentId",
        "description": "ID of the Agent",
        "required": true,
        "type": "integer",
        "in": "path"
      },
      "teamId": {
        "name": "teamId",
        "description": "ID of the Team",
        "required": true,
        "type": "integer",
        "in": "path"
      },
      "startDate": {
        "name": "startDate",
        "description": "ISO 8601 date/time",
        "required": true,
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "endDate": {
        "name": "endDate",
        "description": "ISO 8601 date/time",
        "required": true,
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "updatedSince": {
        "name": "updatedSince",
        "description": "Return all records updated since ISO 8601 time",
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "updatedSinceNew": {
        "name": "updatedSince",
        "description": "Return all records updated since ISO 8601 time",
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "isActive": {
        "name": "isActive",
        "description": "Filter results based on active status",
        "type": "boolean",
        "in": "query"
      },
      "isActiveNew": {
        "name": "isActive",
        "description": "Filter results based on active status",
        "type": "boolean",
        "in": "query"
      },
      "searchString": {
        "name": "searchString",
        "description": "Filter results to objects with the value in key fields",
        "type": "string",
        "in": "query"
      },
      "searchStringNew": {
        "name": "searchString",
        "description": "Used to filter results to objects with the value in key fields",
        "type": "string",
        "in": "query"
      },
      "fields": {
        "name": "fields",
        "description": "Comma separated list of elements to return in response",
        "type": "string",
        "in": "query"
      },
      "fieldsNew": {
        "name": "fields",
        "description": "Comma separated list of elements to return in response",
        "type": "string",
        "in": "query"
      },
      "skip": {
        "name": "skip",
        "description": "Number of records to skip in the results",
        "type": "integer",
        "in": "query"
      },
      "skipNew": {
        "name": "skip",
        "description": "Number of records to skip in the results",
        "type": "integer",
        "in": "query"
      },
      "top": {
        "name": "top",
        "description": "Number of records to return in the results",
        "type": "integer",
        "in": "query"
      },
      "topNew": {
        "name": "top",
        "description": "Number of records to return in the results",
        "type": "integer",
        "in": "query"
      },
      "orderBy": {
        "name": "orderBy",
        "description": "Values used to order results before paginating them.  Can also specify \"asc\" or \"desc\" to specify direction for example \"field1 asc,field2 desc,...\".  Default is asc",
        "type": "string",
        "in": "query"
      },
      "orderByNew": {
        "name": "orderBy",
        "description": "Values used to order results before paginating them.  Can also specify \"asc\" or \"desc\" to specify direction for example \"field1 asc,field2 desc,...\".  Default is asc",
        "type": "string",
        "in": "query"
      },
      "mediaTypeId": {
        "name": "mediaTypeId",
        "description": "Filters based on the media type of the Skill",
        "type": "integer",
        "in": "query"
      },
      "mediaTypeIdNew": {
        "name": "mediaTypeId",
        "description": "Filters based on the media type of the Skill",
        "type": "integer",
        "in": "query"
      },
      "outboundStrategy": {
        "name": "outboundStrategy",
        "description": "Filters based on outbound strategy for the Skill",
        "type": "string",
        "in": "query"
      },
      "outboundStrategyNew": {
        "name": "outboundStrategy",
        "description": "Filters based on outbound strategy for the Skill",
        "type": "string",
        "in": "query"
      },
      "isSkillActive": {
        "name": "isSkillActive",
        "description": "Filters based on active state of the Skill",
        "type": "boolean",
        "in": "query"
      },
      "isSkillActiveNew": {
        "name": "isSkillActive",
        "description": "Filters based on active state of the Skill",
        "type": "boolean",
        "in": "query"
      },
      "contentBodyMetaData": {
        "in": "body",
        "name": "Skills",
        "description": "Content Body",
        "type": "DynamicData"
      }
    },
    "putAgentsRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "agents": {
          "type": "array",
          "description": "Collection of Agents to be updated",
          "required": true,
          "items": {
            "type": "object",
            "properties": {
              "agentId": {
                "type": "integer",
                "maxLength": 38,
                "description": "Agent ID that need to be updated"
              },
              "firstName": {
                "type": "string",
                "description": "Agent First Name",
                "minLength": 1,
                "maxLength": 50
              },
              "middleName": {
                "type": "string",
                "nullable": true,
                "description": "Agent Middle Name",
                "maxLength": 50
              },
              "lastName": {
                "type": "string",
                "description": "Agent Last Name",
                "minLength": 1,
                "maxLength": 50
              },
              "teamId": {
                "type": "string",
                "nullable": true,
                "description": "Agent Team Id"
              },
              "teamUuid": {
                "type": "string",
                "nullable": true,
                "description": "Added to facilitate CXOne suite. Value can be null."
              },
              "reportToId": {
                "type": "integer",
                "description": "Agent Manager Id"
              },
              "internalId": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Id",
                "maxLength": 50
              },
              "profileId": {
                "type": "integer",
                "description": "Unique identifier for a security profile"
              },
              "roleId": {
                "type": "string",
                "nullable": true,
                "description": "Unique identifier for a role"
              },
              "emailAddress": {
                "type": "string",
                "description": "Agent Email Address"
              },
              "userName": {
                "type": "string"
              },
              "userId": {
                "type": "string",
                "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                "nullable": true
              },
              "timeZone": {
                "type": "string",
                "nullable": true,
                "description": "Agent Timezone",
                "minLength": 1
              },
              "country": {
                "type": "string",
                "nullable": true,
                "description": "Agent Country",
                "minLength": 1
              },
              "state": {
                "type": "string",
                "nullable": true,
                "description": "Agent State or Province"
              },
              "city": {
                "type": "string",
                "nullable": true,
                "description": "Agent City",
                "minLength": 1
              },
              "chatRefusalTimeout": {
                "type": "integer",
                "nullable": true,
                "description": "Time in seconds the Agent has to accept a chat contact",
                "minimum": 15.0,
                "maximum": 300.0
              },
              "phoneRefusalTimeout": {
                "type": "integer",
                "nullable": true,
                "description": "Time in seconds the Agent has to accept a phone contact",
                "minimum": 15.0,
                "maximum": 300.0
              },
              "workItemRefusalTimeout": {
                "type": "integer",
                "nullable": true,
                "description": "Time in seconds the Agent has to accept a workitem contact",
                "minimum": 15.0,
                "maximum": 300.0
              },
              "defaultDialingPattern": {
                "type": "integer",
                "nullable": true,
                "description": "Agent Dialing Pattern Id"
              },
              "useTeamMaxConcurrentChats": {
                "type": "boolean"
              },
              "maxConcurrentChats": {
                "type": "integer",
                "nullable": true,
                "description": "Indicates number of chat contacts the Agent can accept concurrently",
                "minimum": 0.0,
                "maximum": 12.0
              },
              "isActive": {
                "type": "boolean"
              },
              "locationId": {
                "type": "integer"
              },
              "notes": {
                "type": "string",
                "nullable": true,
                "description": "Agent Notes",
                "maxLength": 1000
              },
              "hireDate": {
                "type": "string",
                "nullable": true,
                "description": "Agent Hire Date (ISO 8601 time)"
              },
              "terminationDate": {
                "type": "string",
                "nullable": true,
                "description": "Agent Termination Date(ISO 8601 time)"
              },
              "hourlyCost": {
                "type": "number",
                "description": "Agent Hourly Cost"
              },
              "rehireStatus": {
                "type": "boolean",
                "description": "Agent Rehire Status"
              },
              "employmentType": {
                "type": "integer",
                "description": "Employment Type Id. 1 for Full-Time, 2 for Part-Time, 3 for Temporary, 4 for Outsources or 5 for Other"
              },
              "referral": {
                "type": "string",
                "nullable": true,
                "description": "Agent Referral Description",
                "maxLength": 30
              },
              "atHome": {
                "type": "boolean",
                "description": "Agent At Home Worker Status"
              },
              "hiringSource": {
                "type": "integer",
                "description": "Agent Hiring Source Id"
              },
              "ntLoginName": {
                "type": "string",
                "nullable": true
              },
              "customerCard": {
                "type": "boolean"
              },
              "custom1": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 1. 40 characters max",
                "maxLength": 40
              },
              "custom2": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 2. 40 characters max",
                "maxLength": 40
              },
              "custom3": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 3. 40 characters max",
                "maxLength": 40
              },
              "custom4": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 4. 40 characters max",
                "maxLength": 40
              },
              "custom5": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 5. 40 characters max",
                "maxLength": 40
              },
              "scheduleNotification": {
                "type": "integer",
                "description": "Time between work schedule notifications"
              },
              "federatedId": {
                "type": "string",
                "nullable": true,
                "description": "Agent Id in External Identity Provider.  Used with Federated Identity Management functionality",
                "maxLength": 128
              },
              "useTeamEmailAutoParkingLimit": {
                "type": "boolean"
              },
              "maxEmailAutoParkingLimit": {
                "type": "integer",
                "minimum": 1.0,
                "maximum": 25.0
              },
              "sipUser": {
                "type": "string",
                "nullable": true,
                "description": "Used to associate the Agent with a Skype for Business user.  Used with the inContact Gateway for Skype for Business",
                "maxLength": 100
              },
              "systemUser": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "systemDomain": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "crmUserName": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "useAgentTimeZone": {
                "type": "boolean"
              },
              "timeDisplayFormat": {
                "type": "integer"
              },
              "sendEmailNotifications": {
                "type": "boolean"
              },
              "apiKey": {
                "type": "string",
                "nullable": true
              },
              "telephone1": {
                "type": "string",
                "nullable": true
              },
              "telephone2": {
                "type": "string",
                "nullable": true
              },
              "userType": {
                "type": "string",
                "nullable": true
              },
              "isWhatIfAgent": {
                "type": "boolean"
              },
              "requestContact": {
                "type": "boolean",
                "nullable": true
              },
              "chatThreshold": {
                "type": "integer",
                "nullable": true,
                "minimum": 0.0,
                "maximum": 12.0
              },
              "useTeamChatThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "emailThreshold": {
                "type": "integer",
                "nullable": true,
                "minimum": 0.0,
                "maximum": 25.0
              },
              "useTeamEmailThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "workItemThreshold": {
                "type": "integer",
                "nullable": true,
                "minimum": 0.0,
                "maximum": 25.0
              },
              "useTeamWorkItemThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "smsThreshold": {
                "type": "integer",
                "nullable": true,
                "minimum": 0.0,
                "maximum": 12.0
              },
              "useTeamSmsThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "digitalThreshold": {
                "type": "integer",
                "minimum": 0.0,
                "maximum": 50.0
              },
              "useTeamDigitalThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "voiceThreshold": {
                "type": "integer",
                "nullable": true,
                "minimum": 0.0,
                "maximum": 1.0
              },
              "useTeamVoiceThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "contactAutoFocus": {
                "type": "boolean",
                "nullable": true
              },
              "useTeamContactAutoFocus": {
                "type": "boolean",
                "nullable": true
              },
              "useTeamRequestContact": {
                "type": "boolean",
                "nullable": true
              },
              "recordingNumbers": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "number": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 100
                    }
                  },
                  "required": [
                    "number"
                  ]
                }
              },
              "subject": {
                "type": "string",
                "nullable": true,
                "maxLength": 255
              },
              "issuer": {
                "type": "string",
                "nullable": true,
                "maxLength": 255
              },
              "isOpenIdProfileComplete": {
                "type": "boolean",
                "nullable": true
              },
              "deliveryMode": {
                "type": "string",
                "nullable": true
              },
              "totalContactCount": {
                "type": "integer",
                "nullable": true
              },
              "useTeamDeliveryModeSettings": {
                "type": "boolean",
                "nullable": true
              },
              "emailRefusalTimeOut": {
                "type": "integer",
                "nullable": true,
                "minimum": 15.0,
                "maximum": 300.0
              },
              "voicemailRefusalTimeOut": {
                "type": "integer",
                "nullable": true,
                "minimum": 15.0,
                "maximum": 300.0
              },
              "smsRefusalTimeout": {
                "type": "integer",
                "nullable": true,
                "minimum": 15.0,
                "maximum": 300.0
              },
              "isBillable": {
                "type": "boolean",
                "nullable": true
              },
              "useTeamDefaults": {
                "type": "boolean",
                "nullable": true
              },
              "agentvoiceThreshold": {
                "type": "integer",
                "nullable": true
              },
              "agentchatThreshold": {
                "type": "integer",
                "nullable": true
              },
              "agentemailThreshold": {
                "type": "integer",
                "nullable": true
              },
              "agentworkItemThreshold": {
                "type": "integer",
                "nullable": true
              },
              "agentSmsThreshold": {
                "type": "integer",
                "nullable": true
              },
              "agentDeliveryMode": {
                "type": "string",
                "nullable": true
              },
              "agentTotalContactCount": {
                "type": "integer",
                "nullable": true
              },
              "agentRequestContact": {
                "type": "boolean",
                "nullable": true
              },
              "agentContactAutoFocus": {
                "type": "boolean",
                "nullable": true
              },
              "integratedSoftphoneWebRtcUrls": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "urlName": {
                      "type": "string",
                      "nullable": true
                    },
                    "weight": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              },
              "agentMaxVersion": {
                "type": "integer",
                "nullable": true
              },
              "agentPhoneTimeout": {
                "type": "integer",
                "nullable": true
              },
              "digitalRefusalTimeout": {
                "maximum": 300,
                "minimum": 15,
                "type": "integer"
              },
              "address1": {
                "nullable": true,
                "type": "string",
                "maxLength": 100
              },
              "address2": {
                "nullable": true,
                "type": "string",
                "maxLength": 100
              },
              "zipCode": {
                "nullable": true,
                "type": "string",
                "maxLength": 50
              },
              "noFixedAddress": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "required": [
        "agents"
      ]
    },  
    "putAgentsResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "errorCount": {
          "type": "integer",
          "description": "Agent Updation Error Count"
        },
        "agentResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "agentId": {
                "type": "string",
                "description": "Updated Agent Id. Only returned if updation succeeded"
              },
              "success": {
                "type": "boolean",
                "description": "Agent Updation Status"
              },
              "error": {
                "type": "string",
                "description": "Agent Updation Error Description. Only returned if updation failed"
              }
            }
          }
        }
      }
    },
    "postAgentsRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "agents": {
          "type": "array",
          "description": "Collection of Agents to be created",
          "required": true,
          "items": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "description": "Agent First Name",
                "minLength": 1,
                "maxLength": 50
              },
              "middleName": {
                "type": "string",
                "nullable": true,
                "description": "Agent Middle Name",
                "maxLength": 50
              },
              "lastName": {
                "type": "string",
                "description": "Agent Last Name",
                "minLength": 1,
                "maxLength": 50
              },
              "teamId": {
                "type": "string",
                "nullable": true,
                "description": "Agent Team Id"
              },
              "teamUuid": {
                "type": "string",
                "nullable": true,
                "description": "Added to facilitate CXOne suite. Value can be null."
              },
              "reportToId": {
                "type": "integer",
                "description": "Agent Manager Id"
              },
              "internalId": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Id",
                "maxLength": 50
              },
              "profileId": {
                "type": "integer",
                "description": "Unique identifier for a security profile"
              },
              "roleId": {
                "type": "string",
                "nullable": true,
                "description": "Unique identifier for a role"
              },
              "password": {
                "type": "string",
                "nullable": true,
                "description": "Agent Password if \"Generate Random Passwords\" is not enabled in associated Security Profile",
                "maxLength": 50
              },
              "forceChangeOnLogon": {
                "type": "boolean",
                "description": "Indicates if the Agent is required to change their password.  Default is true"
              },
              "emailAddress": {
                "type": "string",
                "description": "Agent Email Address"
              },
              "userName": {
                "type": "string"
              },
              "userId": {
                "type": "string",
                "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                "nullable": true,
                "minLength": 36,
                "maxLength": 38
              },
              "timeZone": {
                "type": "string",
                "nullable": true,
                "description": "Agent Timezone",
                "minLength": 1
              },
              "country": {
                "type": "string",
                "nullable": true,
                "description": "Agent Country",
                "minLength": 1
              },
              "state": {
                "type": "string",
                "nullable": true,
                "description": "Agent State or Province"
              },
              "city": {
                "type": "string",
                "nullable": true,
                "description": "Agent City",
                "minLength": 1
              },
              "chatRefusalTimeout": {
                "type": "integer",
                "nullable": true,
                "description": "Time in seconds the Agent has to accept a chat contact",
                "minimum": 15.0,
                "maximum": 300.0
              },
              "phoneRefusalTimeout": {
                "type": "integer",
                "nullable": true,
                "description": "Time in seconds the Agent has to accept a phone contact",
                "minimum": 15.0,
                "maximum": 300.0
              },
              "workItemRefusalTimeout": {
                "type": "integer",
                "nullable": true,
                "description": "Time in seconds the Agent has to accept a workitem contact",
                "minimum": 15.0,
                "maximum": 300.0
              },
              "defaultDialingPattern": {
                "type": "integer",
                "nullable": true,
                "description": "Agent Dialing Pattern Id"
              },
              "maxConcurrentChats": {
                "type": "integer",
                "nullable": true,
                "description": "Indicates number of chat contacts the Agent can accept concurrently",
                "minimum": 0.0,
                "maximum": 12.0
              },
              "useTeamMaxConcurrentChats": {
                "type": "boolean"
              },
              "isActive": {
                "type": "boolean"
              },
              "locationId": {
                "type": "integer"
              },
              "notes": {
                "type": "string",
                "nullable": true,
                "description": "Agent Notes",
                "maxLength": 1000
              },
              "hireDate": {
                "type": "string",
                "nullable": true,
                "description": "Agent Hire Date (ISO 8601 time)"
              },
              "terminationDate": {
                "type": "string",
                "nullable": true,
                "description": "Agent Termination Date(ISO 8601 time)"
              },
              "hourlyCost": {
                "type": "number",
                "description": "Agent Hourly Cost"
              },
              "rehireStatus": {
                "type": "boolean",
                "description": "Agent Rehire Status"
              },
              "employmentType": {
                "type": "integer",
                "description": "Employment Type Id. 1 for Full-Time, 2 for Part-Time, 3 for Temporary, 4 for Outsources or 5 for Other"
              },
              "referral": {
                "type": "string",
                "nullable": true,
                "description": "Agent Referral Description",
                "maxLength": 30
              },
              "atHome": {
                "type": "boolean",
                "description": "Agent At Home Worker Status"
              },
              "hiringSource": {
                "type": "integer",
                "description": "Agent Hiring Source Id"
              },
              "ntLoginName": {
                "type": "string",
                "nullable": true
              },
              "custom1": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 1. 40 characters max",
                "maxLength": 40
              },
              "custom2": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 2. 40 characters max",
                "maxLength": 40
              },
              "custom3": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 3. 40 characters max",
                "maxLength": 40
              },
              "custom4": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 4. 40 characters max",
                "maxLength": 40
              },
              "custom5": {
                "type": "string",
                "nullable": true,
                "description": "Agent Custom Value 5. 40 characters max",
                "maxLength": 40
              },
              "scheduleNotification": {
                "type": "integer",
                "description": "Time between work schedule notifications"
              },
              "federatedId": {
                "type": "string",
                "nullable": true,
                "description": "Agent Id in External Identity Provider.  Used with Federated Identity Management functionality",
                "maxLength": 128
              },
              "maxEmailAutoParkingLimit": {
                "type": "integer",
                "minimum": 1.0,
                "maximum": 25.0
              },
              "useTeamEmailAutoParkingLimit": {
                "type": "boolean"
              },
              "sipUser": {
                "type": "string",
                "nullable": true,
                "description": "Used to associate the Agent with a Skype for Business user.  Used with the inContact Gateway for Skype for Business",
                "maxLength": 100
              },
              "systemUser": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "systemDomain": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "crmUserName": {
                "type": "string",
                "nullable": true,
                "maxLength": 100
              },
              "useAgentTimeZone": {
                "type": "boolean"
              },
              "timeDisplayFormat": {
                "type": "integer"
              },
              "sendEmailNotifications": {
                "type": "boolean"
              },
              "apiKey": {
                "type": "string",
                "nullable": true
              },
              "telephone1": {
                "type": "string",
                "nullable": true
              },
              "telephone2": {
                "type": "string",
                "nullable": true
              },
              "userType": {
                "type": "string",
                "nullable": true
              },
              "isWhatIfAgent": {
                "type": "boolean"
              },
              "requestContact": {
                "type": "boolean",
                "nullable": true
              },
              "useTeamRequestContact": {
                "type": "boolean",
                "nullable": true
              },
              "chatThreshold": {
                "type": "integer",
                "nullable": true,
                "minimum": 0.0,
                "maximum": 12.0
              },
              "useTeamChatThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "emailThreshold": {
                "type": "integer",
                "nullable": true,
                "minimum": 0.0,
                "maximum": 25.0
              },
              "useTeamEmailThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "workItemThreshold": {
                "type": "integer",
                "nullable": true,
                "minimum": 0.0,
                "maximum": 25.0
              },
              "useTeamWorkItemThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "voiceThreshold": {
                "type": "integer",
                "minimum": 0.0,
                "maximum": 1.0
              },
              "UseTeamVoiceThreshold": {
                "type": "boolean"
              },
              "contactAutoFocus": {
                "type": "boolean",
                "nullable": true
              },
              "useTeamContactAutoFocus": {
                "type": "boolean",
                "nullable": true
              },
              "subject": {
                "type": "string",
                "nullable": true,
                "maxLength": 255
              },
              "issuer": {
                "type": "string",
                "nullable": true,
                "maxLength": 255
              },
              "isOpenIdProfileComplete": {
                "type": "boolean",
                "nullable": true
              },
              "maxPreview": {
                "type": "boolean",
                "nullable": true
              },
              "emailRefusalTimeOut": {
                "type": "integer",
                "nullable": true,
                "minimum": 15.0,
                "maximum": 300.0
              },
              "voicemailRefusalTimeOut": {
                "type": "integer",
                "nullable": true,
                "minimum": 15.0,
                "maximum": 300.0
              },
              "smsRefusalTimeout": {
                "type": "integer",
                "nullable": true,
                "minimum": 15.0,
                "maximum": 300.0
              },
              "deliveryMode": {
                "type": "string",
                "nullable": true
              },
              "totalContactCount": {
                "type": "integer",
                "nullable": true
              },
              "useTeamDeliveryModeSettings": {
                "type": "boolean",
                "nullable": true
              },
              "isBillable": {
                "type": "boolean"
              },
              "recordingNumbers": {
                "type": "string",
                "nullable": true,
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "number": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 100
                    }
                  },
                  "required": [
                    "number"
                  ]
                }
              },
              "useTeamDefaults": {
                "type": "boolean"
              },
              "agentVoiceThreshold": {
                "type": "integer",
                "nullable": true
              },
              "agentChatThreshold": {
                "type": "integer",
                "nullable": true
              },
              "agentEmailThreshold": {
                "type": "integer",
                "nullable": true
              },
              "agentWorkItemThreshold": {
                "type": "integer",
                "nullable": true
              },
              "agentDeliveryMode": {
                "type": "string",
                "nullable": true
              },
              "agentTotalContactCount": {
                "type": "integer",
                "nullable": true
              },
              "agentRequestContact": {
                "type": "boolean",
                "nullable": true
              },
              "agentContactAutoFocus": {
                "type": "boolean",
                "nullable": true
              },
              "integratedSoftphoneWebRtcUrls": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "urlName": {
                      "type": "string",
                      "nullable": true
                    },
                    "weight": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              },
              "loginAuthenticatorId": {
                "type": "string",
                "nullable": true
              },
              "smsThreshold": {
                "type": "string",
                "nullable": true
              },
              "useTeamSmsThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "agentSmsThreshold": {
                "type": "integer",
                "nullable": true
              },
              "DigitalThreshold": {
                "type": "string",
                "nullable": true
              },
              "useTeamDigitalThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "agentDigitalThreshold": {
                "type": "boolean",
                "nullable": true
              },
              "agentPhoneTimeout": {
                "type": "boolean",
                "nullable": true
              },
              "address1": {
                "nullable": true,
                "type": "string",
                "maxLength": 100
              },
              "address2": {
                "nullable": true,
                "type": "string",
                "maxLength": 100
              },
              "zipCode": {
                "type": "string",
                "maxLength": 50
              },
              "noFixedAddress": {
                "type": "boolean"
              }
            },
            "required": [
              "firstName",
              "lastName",
              "emailAddress",
              "userName",
              "profileId",
              "userName",
              "country",
              "state",
              "city",
              "isActive",
              "teamId",
              "timeZone",
              "password",
              "userType"
            ]
          },
          "maxItems": 200
        }
      },
      "required": [
        "agents"
      ]
    },
    "postAgentsResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "errorCount": {
          "type": "integer",
          "description": "Agent Creation Error Count"
        },
        "agentResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "agentId": {
                "type": "integer",
                "description": "Created Agent Id. Only returned if Creation succeeded"
              },
              "success": {
                "type": "boolean",
                "description": "Agent Creation Status"
              },
              "error": {
                "type": "string",
                "description": "Agent Creation Error Description. Only returned if creation failed"
              }
            }
          }
        }
      }
    },
    "postAgentsMessagesRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "agentMessages": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "expireMinutes": {
                "type": "integer",
                "minimum": 1.0,
                "maximum": 2147483647.0
              },
              "message": {
                "type": "string",
                "maxLength": 1024
              },
              "startDate": {
                "type": "string"
              },
              "subject": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "targetId": {
                "type": "integer"
              },
              "targetType": {
                "type": "integer",
                "enum": [
                  1,
                  2,
                  3,
                  4
                ]
              },
              "validUntil": {
                "type": "string"
              }
            },
            "required": [
              "message",
              "messageType",
              "subject",
              "targetType"
            ]
          },
          "maxItems": 10000
        }
      },
      "required": [
        "agentMessages"
      ]
    },
    "postAgentSkillsRequest": {
      "title": " ",
      "description": "Request",
      "type": "object",
      "properties": {
        "skills": {
          "type": "array",
          "description": "Collection of Skill Assignments",
          "items": {
            "title": "Skill",
            "required": [ "skillId", "isActive" ],
            "properties": {
              "skillId": {
                "description": "Skill id",
                "type": "string"
              },
              "proficiency": {
                "description": "Agent Skill Proficiency Value. Default is 1 (Highest)",
                "type": "integer"
              },
              "isActive": {
                "description": "Agent Skill Active State",
                "type": "boolean"
              }
            }
          }
        }
      },
      "required": [
        "skills"
      ]
    },
    "postAgentSkillsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "title": "ResultSet",
          "description": "Result Set",
          "required": [ "errorCount", "skillResults" ],
          "properties": {
            "errorCount": {
              "type": "integer",
              "description": "Number of unsuccessful skill assignments",
              "required": true
            },
            "skillResults": {
              "type": "array",
              "description": "Collection of Skill Results",
              "items": {
                "title": "SkillResult",
                "description": "",
                "required": [ "success" ],
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Skill Assignment Success State"
                  },
                  "skillId": {
                    "type": "integer",
                    "description": "Skill Id. Only returned if assignment was successful"
                  },
                  "error": {
                    "type": "string",
                    "description": "Skill Assignment Error. Only returned if assignment was unsuccessful"
                  }
                }
              }
            }
          }
        }
      }
    },
    "putAgentSkillsRequest": {
      "title": " ",
      "description": "Request",
      "type": "object",
      "properties": {
        "skills": {
          "type": "array",
          "description": "Collection of Skill Assignments",
          "items": {
            "title": "Skill",
            "required": [ "skillId" ],
            "properties": {
              "skillId": {
                "description": "Skill id",
                "type": "string"
              },
              "proficiency": {
                "description": "Agent Skill Proficiency Value",
                "type": "integer"
              },
              "isActive": {
                "description": "Agent Skill Active State",
                "type": "boolean"
              }
            }
          }
        }
      },
      "required": [
        "skills"
      ]
    },
    "getAgentSkillsResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "required": [ "resultSet" ],
      "properties": {
        "totalRecords": {
          "type": "integer",
          "description": "Total number of records in the result"
        },
        "_links": {
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "format": "URL",
              "description": " Link to same page of results"
            },
            "next": {
              "type": "string",
              "format": "URL",
              "description": " Link to next page of results"
            },
            "previous": {
              "type": "string",
              "format": "URL",
              "description": " Link to previous page of results"
            }
          }
        },
        "lastPollTime": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
        },
        "businessUnitId": {
          "type": "integer",
          "format": "int64",
          "description": "Business Unit Id"
        },
        "agentSkillAssignments": {
          "type": "array",
          "description": "Collection of Agent Skill Assignments",
          "items": {
            "title": "AgentSkillAssignment",
            "description": "",
            "type": "object",
            "properties": {
              "agentId": {
                "type": "integer",
                "description": "Agent Id"
              },
              "userId": {
                "type": "string",
                "example": "21eba984-c2c6-4b30-828e-0242ac110012",
                "minLength": 36,
                "maxLength": 38
              },
              "firstName": {
                "type": "string",
                "description": "First name of the Agent",
                "minLength": 1,
                "maxLength": 50
              },
              "middleName": {
                "type": "string",
                "description": "Middle name of the Agent",
                "maxLength": 50
              },
              "lastName": {
                "type": "string",
                "description": "Last name of the Agent",
                "minLength": 1,
                "maxLength": 50
              },
              "agentProficiencyValue": {
                "type": "integer",
                "description": "Agent Skill Proficiency Id"
              },
              "agentProficiencyName": {
                "type": "string",
                "description": "Agent Skill Proficiency Name"
              },
              "campaignId": {
                "type": "integer",
                "description": "Skill Campaign Id"
              },
              "campaignName": {
                "type": "string",
                "description": "Skill Campaign Name"
              },
              "emailFromAddress": {
                "type": "string",
                "description": "Agent Email Address"
              },
              "internalId": {
                "type": "string",
                "description": "Agent Skill Custom Id"
              },
              "isActive": {
                "type": "boolean",
                "description": "Agent Active Status"
              },
              "isSkillActive": {
                "type": "boolean",
                "description": "Skill Active State"
              },
              "teamId": {
                "type": "integer",
                "description": "Agent Team Id"
              },
              "teamName": {
                "type": "string",
                "description": "Agent Team Name"
              },
              "isDialer": {
                "type": "boolean",
                "description": "Indicates if the Skill is manual voice"
              },
              "isNaturalCalling": {
                "type": "boolean",
                "description": "Indicates if the Skill is Personal Connection"
              },
              "isNaturalCallingRunning": {
                "type": "boolean",
                "description": "Indicates if the Personal Connection Skill is running"
              },
              "isOutbound": {
                "type": "boolean",
                "description": "Indicates if the Skill is outbound"
              },
              "lastUpdateTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 time the skill assignment record was last updated"
              },
              "mediaTypeId": {
                "description": "Filters results by Media Type",
                "type": "integer"
              },
              "mediaTypeName": {
                "type": "string",
                "description": "Skill Media Type Name"
              },
              "notes": {
                "type": "string",
                "description": "Skill Assignment Notes"
              },
              "requireDisposition": {
                "type": "boolean",
                "description": "Indicates if the Skill requires a disposition"
              },
              "scriptDisposition": {
                "type": "boolean",
                "description": "Indicates if the Skill disposition can be set in a script"
              },
              "skillId": {
                "type": "integer",
                "description": "Agent Skill Id"
              },
              "skillName": {
                "type": "string",
                "description": "Agent Skill Name"
              },
              "useACW": {
                "type": "boolean",
                "description": "Indicates if the Skill uses an ACW state"
              },
              "useDisposition": {
                "type": "boolean",
                "description": "Indicates if the Skill uses a disposition"
              },
              "useSecondaryDispositions": {
                "type": "boolean",
                "description": "Indicates if the Skill uses a secondary disposition"
              },
              "outboundStrategy": {
                "type": "string",
                "description": "Skill Outbound Strategy"
              },
              "priorityBlending": {
                "type": "boolean",
                "description": "Indicates if the Skill uses priority blending"
              },
              "screenPopTriggerEvent": {
                "type": "string",
                "description": "Determines when the screen pop for the Skill occurs"
              },
              "isRestricted": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "deleteAgentSkillsRequest": {
      "title": " ",
      "description": "",
      "type": "object",
      "required": [ "skills" ],
      "properties": {
        "skills": {
          "type": "array",
          "description": "Collecton of Skill Ids",
          "items": {
            "title": "Skill",
            "required": [ "skillId" ],
            "properties": {
              "skillId": {
                "description": "Skill Id",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getAgentUnassignedSkillsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "title": "resultSet",
          "description": "Result Set",
          "required": [ "businessUnitId", "totalRecords", "skills" ],
          "properties": {
            "_links": {
              "schema": {
                "title": "_links",
                "description": "Links used to parse paginated response",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to same page of results"
                  },
                  "next": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to next page of results"
                  },
                  "previous": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to previous page of results"
                  }
                }
              }
            },
            "businessUnitId": {
              "type": "integer",
              "format": "int64",
              "description": "ID of Business Unit",
              "required": true
            },
            "totalRecords": {
              "type": "integer",
              "description": "Total number of records in the payload",
              "required": true
            },
            "skills": {
              "type": "array",
              "description": "",
              "items": {
                "title": "Skill",
                "description": "",
                "required": [ "skillId", "skillName", "isSkillActive", "mediaTypeId", "mediaTypeName", "campaignId", "campaignName" ],
                "properties": {
                  "skillId": {
                    "type": "integer",
                    "description": "Skill Id"
                  },
                  "skillName": {
                    "type": "string",
                    "description": "Skill Name"
                  },
                  "isSkillActive": {
                    "type": "boolean",
                    "description": "Skill Active State"
                  },
                  "mediaTypeId": {
                    "type": "integer",
                    "description": "Skill Media Type Id"
                  },
                  "mediaTypeName": {
                    "type": "string",
                    "description": "Skill Media Type Name"
                  },
                  "campaignId": {
                    "type": "integer",
                    "description": "Skill Campaign Id"
                  },
                  "campaignName": {
                    "type": "string",
                    "description": "Skill Campaign Name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAgentSkillsDataResponse": {
      "title": " ",
      "type": "object",
      "required": [ "agentSkillData" ],
      "properties": {
        "totalRecords": {
          "type": "integer",
          "description": "Returns total number of records"
        },
        "_links": {
          "type": "object",
          "title": "_links",
          "description": "Links used to parse paginated response",
          "properties": {
            "self": {
              "type": "string",
              "format": "URL",
              "description": " Link to same page of results"
            },
            "next": {
              "type": "string",
              "format": "URL",
              "description": " Link to next page of results"
            },
            "previous": {
              "type": "string",
              "format": "URL",
              "description": " Link to previous page of results"
            }
          }
        },
        "agentSkillData": {
          "title": "AgentSkillData",
          "description": "Agent Skill Data",
          "required": [ "agents" ],
          "properties": {
            "agents": {
              "type": "array",
              "description": "Collection of Agents",
              "items": {
                "title": "Agents",
                "required": [ "agent", "skills" ],
                "properties": {
                  "agent": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The agent Id"
                  },
                  "skills": {
                    "type": "array",
                    "description": "Collection of Skill Data",
                    "items": {
                      "title": "SkillData",
                      "properties": {
                        "SkillNo": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The skill Id"
                        },
                        "OfferedContacts": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Number of contacts available to agent"
                        },
                        "AnsweredContacts": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Number of contacts taken by agent"
                        },
                        "HoldCalls": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Number of contacts placed on hold"
                        },
                        "TalkTime": {
                          "type": "number",
                          "format": "double",
                          "description": "Number of seconds contacts were active"
                        },
                        "HeldTime": {
                          "type": "number",
                          "format": "double",
                          "description": "Number of seconds contacts were on hold"
                        },
                        "ACWTime": {
                          "type": "number",
                          "format": "double",
                          "description": "Number of seconds contacts were in ACW"
                        },
                        "mediaTypeId": {
                          "type": "integer",
                          "description": "The numeric ID of the Media Type. Media Types are designated as 1 = Email, 2 = Fax, 3 = Chat, 4 = Phone call, 5 = Voicemail, 6 = Work items, 7 = SMS, 8 = Social and 9 = Digital"
                        },
                        "isOutbound": {
                          "type": "boolean",
                          "description": "Whether or not out bound"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAgentsQuickRepliesResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "totalRecords": {
          "type": "integer",
          "description": "Returns total number of records"
        },
        "_links": {
          "type": "object",
          "title": "_links",
          "description": "Links used to parse paginated response",
          "properties": {
            "self": {
              "type": "string",
              "format": "URL",
              "description": " Link to same page of results"
            },
            "next": {
              "type": "string",
              "format": "URL",
              "description": " Link to next page of results"
            },
            "previous": {
              "type": "string",
              "format": "URL",
              "description": " Link to previous page of results"
            }
          }
        },
        "quickReplies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "quickReplyId": {
                "type": "integer",
                "format": "int64",
                "description": "Quick Reply Id"
              },
              "title": {
                "type": "string"
              },
              "keyWords": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "isFavorite": {
                "type": "boolean"
              },
              "skills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillId": {
                      "type": "integer"
                    },
                    "skillName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAgentQuickRepliesResponse": {
      "title": " ",
      "description": "Quick Replies Result Set",
      "required": [ "quickReplies" ],
      "properties": {
        "quickReplies": {
          "type": "array",
          "description": "Collection of Quick Replies",
          "items": {
            "title": "QuickReply",
            "description": "Quick Reply",
            "required": [ "quickReplyId", "title", "keyWords", "content", "isFavorite", "skills" ],
            "properties": {
              "quickReplyId": {
                "type": "integer",
                "format": "int64",
                "description": "Quick Reply Id"
              },
              "title": {
                "type": "string",
                "description": "Quick Reply Title"
              },
              "keyWords": {
                "type": "string",
                "description": "Quick Reply Keywords"
              },
              "content": {
                "type": "string",
                "format": "html",
                "description": "Quick Reply Content (HTML-formatted)"
              },
              "isFavorite": {
                "type": "integer",
                "description": "Favorite State"
              },
              "skills": {
                "type": "array",
                "description": "Collection of Quick Reply Skills",
                "items": {
                  "title": "Skill",
                  "description": "Skill",
                  "required": [ "skillId", "skillName" ],
                  "properties": {
                    "skillId": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Skill Id"
                    },
                    "skillName": {
                      "type": "string",
                      "description": "Skill Name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getAgentMessagesResponse": {
      "title": " ",
      "description": "Message Result Set",
      "required": [ "messages" ],
      "properties": {
        "messages": {
          "type": "array",
          "description": "Collection of Messages",
          "items": {
            "title": "Message",
            "description": "Message",
            "required": [ "messageId", "messageText", "expireTimer", "messageHint", "indicatorId", "subject", "validUntil", "startDate" ],
            "properties": {
              "messageId": {
                "type": "integer",
                "format": "int64",
                "description": "Message Id"
              },
              "messageText": {
                "type": "string",
                "format": "html",
                "description": "Message Text"
              },
              "expireTimer": {
                "type": "integer",
                "description": "Expire Timer"
              },
              "messageHint": {
                "type": "string",
                "description": "Message Hint"
              },
              "indicatorId": {
                "type": "integer",
                "description": "Indicator Id"
              },
              "subject": {
                "type": "string",
                "description": "Message Subject"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time",
                "description": "Message Valid Until Date"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "description": "Message Start Date"
              }
            }
          }
        }
      }
    },
    "getAgentIndicatorsResponse": {
      "title": " ",
      "description": "Indicator Result Set",
      "required": [ "indicators" ],
      "properties": {
        "indicators": {
          "type": "array",
          "description": "Collection of Indicators",
          "items": {
            "title": "Indicator",
            "description": "Indicator",
            "required": [ "indicatorName", "senderContactId", "imageFile", "actionType", "action", "toolTip", "enable" ],
            "properties": {
              "indicatorName": {
                "type": "string",
                "description": "Indicator Name"
              },
              "senderContactId": {
                "type": "integer",
                "description": "Sender Contact Id"
              },
              "imageFile": {
                "type": "string",
                "description": "Image File"
              },
              "actionType": {
                "type": "string",
                "description": "Action Type"
              },
              "action": {
                "type": "string",
                "description": "Action"
              },
              "toolTip": {
                "type": "string",
                "description": "Tooltip"
              },
              "enable": {
                "type": "boolean",
                "description": "Enable State"
              }
            }
          }
        }
      }
    },
    "getAgentPatternsResponse": {
      "title": " ",
      "description": "Collection of Agent Patterns",
      "required": [ "dialingPatterns" ],
      "properties": {
        "dialingPatterns": {
          "type": "array",
          "items": {
            "title": "DialingPattern",
            "description": "Collection of Dialing Patterns",
            "required": [ "patternId", "patternName", "input", "output" ],
            "properties": {
              "patternId": {
                "type": "integer",
                "description": "Dialing Pattern Id"
              },
              "patternName": {
                "type": "string",
                "description": "Dialing Pattern Name"
              },
              "input": {
                "type": "string",
                "description": "Dialing Pattern Input"
              },
              "output": {
                "type": "string",
                "description": "Dialing Pattern Output"
              }
            }
          }
        }
      }
    },
    "getAgentStatesResponse": {
      "title": " ",
      "description": "Collection of Agent States",
      "type": "object",
      "required": [ "agentStates" ],
      "properties": {
        "agentStates": {
          "type": "array",
          "items": {
            "title": "AgentState",
            "description": "Agent State",
            "required": [ "agentStateId", "agentStateName" ],
            "properties": {
              "agentid": {
                "type": "integer",
                "description": "Agent Id"
              },
              "agentStateId": {
                "type": "integer",
                "format": "int32",
                "description": "Agent State Id"
              },
              "agentStateName": {
                "type": "string",
                "description": "Agent State Name"
              },
              "businessUnitId": {
                "type": "integer",
                "description": "Business Unit Id"
              },
              "contactId": {
                "type": "int",
                "description": "Contact Id"
              },
              "isActive": {
                "type": "boolean",
                "description": "Is Active"
              },
              "isAcw": {
                "type": "boolean",
                "description": "Whether or not the unavailable code is used as an ACW state"
              },
              "isOutbound": {
                "type": "boolean",
                "description": "Whether or not out bound"
              },
              "firstName": {
                "type": "string",
                "description": "First Name"
              },
              "fromAddress": {
                "type": "string",
                "description": "From Address"
              },
              "lastName": {
                "type": "string",
                "description": "Last Name"
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 time the poll time was last updated"
              },
              "lastUpdateTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 time of last update"
              },
              "mediaName": {
                "type": "string",
                "description": "Media Name"
              },
              "mediaType": {
                "type": "integer",
                "description": "Media Type"
              },
              "openContacts": {
                "type": "integer",
                "description": "Open Contacts"
              },
              "outStateDescription": {
                "type": "integer",
                "description": "Out State Description"
              },
              "outStateId": {
                "type": "integer",
                "description": "Out State Id"
              },
              "skillId": {
                "type": "integer",
                "description": "Skill Id"
              },
              "skillName": {
                "type": "string",
                "description": "Skill Name"
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "description": "Start Date"
              },
              "stationId": {
                "type": "integer",
                "description": "Station Id"
              },
              "stationPhoneNumber": {
                "type": "string",
                "description": "Station Phone Number"
              },
              "teamId": {
                "type": "integer",
                "description": "Team Id"
              },
              "teamName": {
                "type": "string",
                "description": "Team Name"
              },
              "toAddress": {
                "type": "string",
                "description": "To Address"
              },
              "userName": {
                "type": "string",
                "description": "User Name"
              }
            }
          }
        }
      }
    },
    "getTeamsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Team Result Set",
            "required": [ "businessUnitId", "lastPollTime", "totalRecords", "teams" ],
            "properties": {
              "_links": {
                "schema": {
                  "title": "Links",
                  "description": "Links used to parse paginated response",
                  "required": [ "self" ],
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "businessUnitId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of Business Unit"
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the result set"
              },
              "teams": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "Team",
                  "description": "",
                  "required": [ "teamId", "teamName", "isActive", "description", "notes", "lastUpdateTime", "inViewEnabled", "wfoEnabled", "wfmEnabled", "qmEnabled", "maxConcurrentChats", "agentCount" ],
                  "properties": {
                    "teamId": {
                      "type": "integer",
                      "description": "Team Id"
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Team Name"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Team Active State"
                    },
                    "description": {
                      "type": "string",
                      "description": "Team Description"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Team Notes"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Team record was last updated"
                    },
                    "inViewEnabled": {
                      "type": "boolean",
                      "description": "Team InView Enabled State"
                    },
                    "wfoEnabled": {
                      "type": "boolean",
                      "description": "TEam WFO Enabled State"
                    },
                    "wfmEnabled": {
                      "type": "boolean",
                      "description": "Team WFM Enabled State"
                    },
                    "qmEnabled": {
                      "type": "boolean",
                      "description": "TEam QM Enabled State"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Team Agent Max Concurrent Chats"
                    },
                    "agentCount": {
                      "type": "integer",
                      "description": "Team Agent Count"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getTeamResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Team Result Set",
            "required": [ "businessUnitId", "lastPollTime", "teams" ],
            "properties": {
              "businessUnitId": {
                "type": "integer",
                "format": "int64",
                "description": "ID of Business Unit"
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
              },
              "teams": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "Team",
                  "description": "",
                  "required": [ "teamId", "teamName", "isActive", "description", "notes", "lastUpdateTime", "inViewEnabled", "wfoEnabled", "wfmEnabled", "qmEnabled", "maxConcurrentChats", "agentCount", "agents" ],
                  "properties": {
                    "teamId": {
                      "type": "integer",
                      "description": "Team Id"
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Team Name"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Team Active State"
                    },
                    "description": {
                      "type": "string",
                      "description": "Team Description"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Team Notes"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "ISO 8601 time the Team record was last updated"
                    },
                    "inViewEnabled": {
                      "type": "boolean",
                      "description": "Team InView Enabled State"
                    },
                    "wfoEnabled": {
                      "type": "boolean",
                      "description": "TEam WFO Enabled State"
                    },
                    "wfmEnabled": {
                      "type": "boolean",
                      "description": "Team WFM Enabled State"
                    },
                    "qmEnabled": {
                      "type": "boolean",
                      "description": "TEam QM Enabled State"
                    },
                    "maxConcurrentChats": {
                      "type": "integer",
                      "description": "Team Agent Max Concurrent Chats"
                    },
                    "agentCount": {
                      "type": "integer",
                      "description": "Team Agent Count"
                    },
                    "agents": {
                      "type": "array",
                      "description": "Collection of Team Agents",
                      "items": {
                        "title": "Agent",
                        "description": "",
                        "required": [ "agentId", "firstName", "lastName" ],
                        "properties": {
                          "agentId": {
                            "type": "integer",
                            "description": "Agent Id"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Agent First Name"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Agent Last Name"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postTeamAgentsRequest": {
      "title": " ",
      "description": "",
      "type": "object",
      "required": [ "agents" ],
      "properties": {
        "agents": {
          "type": "array",
          "description": "Collection of Agents",
          "items": {
            "title": "Agent",
            "required": [ "agentId" ],
            "properties": {
              "agentId": {
                "type": "integer",
                "description": "Agent Id"
              }
            }
          }
        }
      }
    },
    "postTeamAgentsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "errorCount", "agentResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of Agent assignments that had errors"
              },
              "agentResults": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "AgentResult",
                  "description": "Collection of Agent Results",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the Agent assignment was successful"
                    },
                    "agentId": {
                      "type": "integer",
                      "description": "ID of the Agent assignments. Only returned if assignment was successful"
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Describes error in the Agent assignment. Only returned if assignment was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteTeamAgentsResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "errorCount": {
          "type": "string"
        },
        "agentResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "success": {
                "type": "string"
              },
              "agentId": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getTeamUnavailableCodesResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "title": "ResultSet",
          "description": "Result Set",
          "required": [ "teamId", "teamName" ],
          "properties": {
            "teamId": {
              "type": "integer",
              "description": "Team Id"
            },
            "teamName": {
              "type": "string",
              "description": "Team Name"
            },
            "teamUuid": {
              "type": "string",
              "example": "66ac6103-df24-22ea-886c-023113831ff4",
              "minLength": 36,
              "maxLength": 38
            },
            "unavailableCodes": {
              "type": "array",
              "description": "",
              "items": {
                "title": "unavailableCodes",
                "description": "",
                "required": [ "outStateId", "outStateName", "isActive", "isAcw", "agentTimeoutMins" ],
                "properties": {
                  "outStateId": {
                    "type": "integer",
                    "description": "The numeric ID of the outstate code"
                  },
                  "outStateName": {
                    "type": "string",
                    "description": "The name of the outstate code. When setting an agent session to an unavailable state, the actual state is always \"unavailable\", but you can supply the outstate description as well. Use this API call to retrieve possible outstates"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Indicates whether or not the skill is active"
                  },
                  "isAcw": {
                    "type": "boolean",
                    "description": "Whether or not the unavailable code is used as an ACW state"
                  },
                  "agentTimeoutMins": {
                    "type": "integer",
                    "description": "If IsACW is true, this field indicates how long the agent will stay in the ACW state before being automatically moved to the next state. Note that if ACW is required (a property of the skill), this field has no meaning and is undefined"
                  }
                }
              }
            }
          }
        }
      }
    },
    "postTeamUnavailableCodesRequest": {
      "title": " ",
      "description": "",
      "type": "object",
      "required": [ "codes" ],
      "properties": {
        "codes": {
          "type": "array",
          "description": "Collection of Unavailable Codes to assign",
          "items": {
            "title": "Code",
            "required": [ "outstateId" ],
            "properties": {
              "outstateId": {
                "type": "integer",
                "description": "Unavailable Code Id to assign"
              }
            }
          }
        }
      }
    },
    "postTeamUnavailableCodesResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "errorCount", "codeResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of code assignments that had errors"
              },
              "codeResults": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "CodeResult",
                  "description": "",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the code assignments was successful"
                    },
                    "outstateId": {
                      "type": "integer",
                      "description": "Unavailable Code Id assigned. Only returned if assignment was successful"
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Describes error in the code assignments. Only returned if assignment was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteTeamUnavailableCodesRequest": {
      "title": " ",
      "description": "",
      "type": "object",
      "required": [ "codes" ],
      "properties": {
        "codes": {
          "type": "array",
          "description": "Collection of Unavailable Codes to remove",
          "items": {
            "title": "Code",
            "required": [ "outstateId" ],
            "properties": {
              "outstateId": {
                "type": "integer",
                "description": "Unavailable Code Id to remove"
              }
            }
          }
        }
      }
    },
    "deleteTeamUnavailableCodesResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "errorCount": {
          "type": "integer"
        },
        "codeResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "outstateId": {
                "type": "integer"
              },
              "success": {
                "type": "boolean"
              },
              "error": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getagentagentidgroups": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "agentGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "groupId": {
                "type": "integer"
              },
              "groupName": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "notes": {
                "type": "string"
              },
              "lastUpdated": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 time the Agent record was last updated"

              }
            }
          }
        }
      }
    }
  }
}
