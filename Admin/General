{
  "business-unit_time-zones": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a list of enabled timezones",
      "operationId": "get-business-unit-time-zones",
      "description": " This method returns a list of timezones enabled for a business unit.<div class='tabs_wrapper' data-path='admin_getbusinessunit_timezone.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>{0}</p><p>{0}</p>"
        }
      }
    },
    "put": {
      "tags": [ "General" ],
      "summary": "Updates the enabled time zones",
      "operationId": "put-business-unit-time-zones",
      "description": " This method updates enabled time zones for a business unit. All time zones to be made available must be listed. All time zones not listed will be disabled for the business unit and removed from all skills.<div class='tabs_wrapper' data-path='admin_putbusinessunitTimezone.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "timezones",
          "description": "A Dynamic Data object containing the skill timezone setting information to upate",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "timezones": {
                "type": "string"
              },
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p><p>{0}</p><p>{0}</p></p><p>{0}</p>"
        }
      }
    }
  },
  "business-unit_outbound-routes": {
    "get": {
      "tags": [ "General" ],
      "summary": " Get business unit outbound routes available for skills",
      "operationId": "get-business-unit-outbound-routes",
      "description": "Gets all the outbound telecom routes, for a specific BU, that have been configured to be assigned to a specific Outbound Dialer skill. <div class='tabs_wrapper' data-path='admin_business-unit_outbound-routes.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outboundRoutes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "outboundTelecomRouteId": {
                      "type": "integer"
                    },
                    "routeDescription": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "<p>Invalid Security User</p><p>Other Error</p>"
        }
      }
    }
  },
  "suppressed-contact": {
    "post": {
      "tags": [ "General" ],
      "summary": "Create a suppressed contact",
      "operationId": "post-suppressed-contact",
      "description": "This methodÂ creates a suppressed contact.<div class='tabs_wrapper' data-path='admin_postSuppresedContacts.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "suppressedContactData",
          "description": "A Dynamic Data object containing the skill general setting information to upate",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "suppressedContactData": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "value": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "skills": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "suppressedContactData"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Invalid Parameters"
        },
        "403": {
          "description": "Invalid Auth Context"
        }
      }
    },
    "get": {
      "tags": [ "General" ],
      "summary": "List of suppressed contacts",
      "operationId": "get-suppressed-contact",
      "description": "This method returns a list of suppressed contact information for the business unit.<div class='tabs_wrapper' data-path='admin_getsuppresedContacts.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "suppressedContacts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "suppressedContactId": {
                      "type": "integer"
                    },
                    "bus_No": {
                      "type": "integer"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "value": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "fileName": {
                      "type": "string"
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "integer"
                    },
                    "modifiedDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modifiedBy": {
                      "type": "integer"
                    },
                    "suppressedContactMappings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "suppressedContactId": {
                            "type": "integer"
                          },
                          "skill_No": {
                            "type": "integer"
                          },
                          "bus_No": {
                            "type": "integer"
                          },
                          "createDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "createdBy": {
                            "type": "integer"
                          },
                          "modifiedDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "modifiedBy": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Invalid Auth Context"
        }
      }
    }
  },
  "phone-numbers": {
    "get": {
      "tags": [ "General" ],
      "summary": "  Returns a list of configurable phone number",
      "operationId": "get-phone-numbers",
      "description": "This method returns a list of phone number available to configure as points of contact.  GET /points-of-contact will return the list of already points of contact including phone numbers.<div class='tabs_wrapper' data-path='admin_general_getPhonenumbers.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "schema": {
                  "title": "Links",
                  "description": "Links used to parse paginated response",
                  "required": [ "self" ],
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "totalRecords": {
                "type": "integer",
                "description": "Returns total number of records"
              },
              "phoneCollection": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "phonenumber": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "400": {
          "description": "Invalid Parameter"
        },
        "401": {
          "description": "Invalid Security User"
        }
      }
    }
  },
  "suppressed-contact_suppressedContactId": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a suppressed contact by ID",
      "operationId": "get-suppressed-contact-id",
      "description": "This method returns a suppressed contact by contact ID. <div class='tabs_wrapper' data-path='admin_general_getSupConById.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/suppressedContactId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "suppressedContactId": {
                "type": "integer"
              },
              "bus_No": {
                "type": "integer"
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "format": "date-time"
              },
              "value": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "fileName": {
                "type": "string"
              },
              "createDate": {
                "type": "string",
                "format": "date-time"
              },
              "createdBy": {
                "type": "integer"
              },
              "modifiedDate": {
                "type": "string",
                "format": "date-time"
              },
              "modifiedBy": {
                "type": "integer"
              },
              "suppressedContactMappings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "suppressedContactId": {
                      "type": "integer"
                    },
                    "skill_No": {
                      "type": "integer"
                    },
                    "bus_No": {
                      "type": "integer"
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "integer"
                    },
                    "modifiedDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "modifiedBy": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Invalid Auth Context"
        },
        "404": {
          "description": "Invalid Id"
        }
      }
    },
    "put": {
      "tags": [ "General" ],
      "summary": "Updates a suppressed contact by ID",
      "operationId": "put-suppressed-contact-id",
      "description": "This method updates a suppressed contact by contact ID. <div class='tabs_wrapper' data-path='admin_general_putSupConById.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/suppressedContactId"
        },
        {
          "name": "suppressedContactData",
          "description": "A Dynamic Data object containing the skill general setting information to upate",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "suppressedContactData": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "value": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "skills": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "suppressedContactData"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Invalid Parameters"
        },
        "403": {
          "description": "Invalid Auth Context"
        },
        "404": {
          "description": "Invalid Id"
        }
      }
    },
    "delete": {
      "tags": [ "General" ],
      "summary": "Deletes a suppressed contact by ID",
      "operationId": "delete-suppressed-contact-id",
      "description": "This method deletes a suppressed contact by contact ID. <div class='tabs_wrapper' data-path='admin_general_deleteSupConById.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/suppressedContactId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "403": {
          "description": "Invalid Auth Context"
        },
        "404": {
          "description": "Invalid Id"
        }
      }
    }
  },
  "teams_teamid_agents": {
    "get": {
      "tags": [
        "Teams"
      ],
      "summary": "",
      "operationId": "get-teams-id-agents",
      "description": "blank",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "teamId",
          "description": "",
          "type": "string"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/isActive"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "teamId": {
                "type": "integer"
              },
              "teamName": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "lastUpdateTime": {
                "type": "string",
                "format": "date-time"
              },
              "inViewEnabled": {
                "type": "boolean"
              },
              "wfoEnabled": {
                "type": "boolean"
              },
              "wfm2Enabled": {
                "type": "boolean"
              },
              "qm2Enabled": {
                "type": "boolean"
              },
              "maxConcurrentChats": {
                "type": "integer"
              },
              "agentCount": {
                "type": "integer"
              },
              "maxEmailAutoParkingLimit": {
                "type": "integer"
              },
              "inViewGamificationEnabled": {
                "type": "boolean"
              },
              "inViewChatEnabled": {
                "type": "boolean"
              },
              "inViewLMSEnabled": {
                "type": "boolean"
              },
              "analyticsEnabled": {
                "type": "boolean"
              },
              "requestContact": {
                "type": "boolean"
              },
              "contactAutoFocus": {
                "type": "boolean"
              },
              "chatThreshold": {
                "type": "integer"
              },
              "emailThreshold": {
                "type": "integer"
              },
              "workItemThreshold": {
                "type": "integer"
              },
              "voiceThreshold": {
                "type": "integer"
              },
              "socialThreshold": {
                "type": "integer"
              },
              "agents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer"
                    },
                    "userName": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "firstName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "userID": {
                      "type": "string",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "emailAddress": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "teamId": {
                      "type": "integer"
                    },
                    "teamName": {
                      "type": "string"
                    },
                    "reportToId": {
                      "type": "integer"
                    },
                    "reportToName": {
                      "type": "string"
                    },
                    "isSupervisor": {
                      "type": "boolean"
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "location": {
                      "type": "string"
                    },
                    "custom1": {
                      "type": "string"
                    },
                    "custom2": {
                      "type": "string"
                    },
                    "custom3": {
                      "type": "string"
                    },
                    "custom4": {
                      "type": "string"
                    },
                    "custom5": {
                      "type": "string"
                    },
                    "internalId": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "integer"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "timeZone": {
                      "type": "string",
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "minLength": 1
                    },
                    "countryName": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string",
                      "minLength": 1
                    },
                    "chatRefusalTimeout": {
                      "type": "integer"
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "defaultDialingPattern": {
                      "type": "integer"
                    },
                    "defaultDialingPatternName": {
                      "type": "string"
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hourlyCost": {
                      "type": "number"
                    },
                    "rehireStatus": {
                      "type": "boolean"
                    },
                    "employmentType": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 5.0
                    },
                    "employmentTypeName": {
                      "type": "string"
                    },
                    "referral": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "atHome": {
                      "type": "boolean"
                    },
                    "hiringSource": {
                      "type": "integer"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "scheduleNotification": {
                      "type": "integer"
                    },
                    "federatedId": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "useTeamEmailAutoParkingLimit": {
                      "type": "boolean"
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 25.0
                    },
                    "sipUser": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "systemUser": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "systemDomain": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "crmUserName": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "useAgentTimeZone": {
                      "type": "boolean"
                    },
                    "timeDisplayFormat": {
                      "type": "string"
                    },
                    "sendEmailNotifications": {
                      "type": "boolean"
                    },
                    "apiKey": {
                      "type": "string"
                    },
                    "telephone1": {
                      "type": "string"
                    },
                    "telephone2": {
                      "type": "string"
                    },
                    "userType": {
                      "type": "string"
                    },
                    "isWhatIfAgent": {
                      "type": "boolean"
                    },
                    "timeZoneOffset": {
                      "type": "string"
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamChatThreshold": {
                      "type": "boolean"
                    },
                    "emailThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamEmailThreshold": {
                      "type": "boolean"
                    },
                    "workItemThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamWorkItemThreshold": {
                      "type": "boolean"
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamRequestContact": {
                      "type": "boolean"
                    },
                    "subject": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "issuer": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "recordingNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "isOpenIdProfileComplete": {
                      "type": "boolean"
                    },
                    "teamUuId": {
                      "type": "string",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "maxPreview": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "voicemailRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "teamId": {
                "type": "integer"
              },
              "teamName": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "lastUpdateTime": {
                "type": "string",
                "format": "date-time"
              },
              "inViewEnabled": {
                "type": "boolean"
              },
              "wfoEnabled": {
                "type": "boolean"
              },
              "wfm2Enabled": {
                "type": "boolean"
              },
              "qm2Enabled": {
                "type": "boolean"
              },
              "maxConcurrentChats": {
                "type": "integer"
              },
              "agentCount": {
                "type": "integer"
              },
              "maxEmailAutoParkingLimit": {
                "type": "integer"
              },
              "inViewGamificationEnabled": {
                "type": "boolean"
              },
              "inViewChatEnabled": {
                "type": "boolean"
              },
              "inViewLMSEnabled": {
                "type": "boolean"
              },
              "analyticsEnabled": {
                "type": "boolean"
              },
              "requestContact": {
                "type": "boolean"
              },
              "contactAutoFocus": {
                "type": "boolean"
              },
              "chatThreshold": {
                "type": "integer"
              },
              "emailThreshold": {
                "type": "integer"
              },
              "workItemThreshold": {
                "type": "integer"
              },
              "voiceThreshold": {
                "type": "integer"
              },
              "socialThreshold": {
                "type": "integer"
              },
              "agents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer"
                    },
                    "userName": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "firstName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "middleName": {
                      "type": "string",
                      "maxLength": 50
                    },
                    "lastName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "userID": {
                      "type": "string",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "emailAddress": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9.'_%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "teamId": {
                      "type": "integer"
                    },
                    "teamName": {
                      "type": "string"
                    },
                    "reportToId": {
                      "type": "integer"
                    },
                    "reportToName": {
                      "type": "string"
                    },
                    "isSupervisor": {
                      "type": "boolean"
                    },
                    "lastLogin": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "location": {
                      "type": "string"
                    },
                    "custom1": {
                      "type": "string"
                    },
                    "custom2": {
                      "type": "string"
                    },
                    "custom3": {
                      "type": "string"
                    },
                    "custom4": {
                      "type": "string"
                    },
                    "custom5": {
                      "type": "string"
                    },
                    "internalId": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "integer"
                    },
                    "profileName": {
                      "type": "string"
                    },
                    "timeZone": {
                      "type": "string",
                      "minLength": 1
                    },
                    "country": {
                      "type": "string",
                      "minLength": 1
                    },
                    "countryName": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string",
                      "minLength": 1
                    },
                    "chatRefusalTimeout": {
                      "type": "integer"
                    },
                    "phoneRefusalTimeout": {
                      "type": "integer",
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "workItemRefusalTimeout": {
                      "type": "integer",
                      "minimum": 15.0,
                      "maximum": 300.0
                    },
                    "defaultDialingPattern": {
                      "type": "integer"
                    },
                    "defaultDialingPatternName": {
                      "type": "string"
                    },
                    "useTeamMaxConcurrentChats": {
                      "type": "boolean"
                    },
                    "maxConcurrentChats": {
                      "type": "integer"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "inactiveDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hireDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "terminationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "hourlyCost": {
                      "type": "number"
                    },
                    "rehireStatus": {
                      "type": "boolean"
                    },
                    "employmentType": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 5.0
                    },
                    "employmentTypeName": {
                      "type": "string"
                    },
                    "referral": {
                      "type": "string",
                      "maxLength": 30
                    },
                    "atHome": {
                      "type": "boolean"
                    },
                    "hiringSource": {
                      "type": "integer"
                    },
                    "ntLoginName": {
                      "type": "string"
                    },
                    "scheduleNotification": {
                      "type": "integer"
                    },
                    "federatedId": {
                      "type": "string",
                      "maxLength": 128
                    },
                    "useTeamEmailAutoParkingLimit": {
                      "type": "boolean"
                    },
                    "maxEmailAutoParkingLimit": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 25.0
                    },
                    "sipUser": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "systemUser": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "systemDomain": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "crmUserName": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "useAgentTimeZone": {
                      "type": "boolean"
                    },
                    "timeDisplayFormat": {
                      "type": "string"
                    },
                    "sendEmailNotifications": {
                      "type": "boolean"
                    },
                    "apiKey": {
                      "type": "string"
                    },
                    "telephone1": {
                      "type": "string"
                    },
                    "telephone2": {
                      "type": "string"
                    },
                    "userType": {
                      "type": "string"
                    },
                    "isWhatIfAgent": {
                      "type": "boolean"
                    },
                    "timeZoneOffset": {
                      "type": "string"
                    },
                    "requestContact": {
                      "type": "boolean"
                    },
                    "chatThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 12.0
                    },
                    "useTeamChatThreshold": {
                      "type": "boolean"
                    },
                    "emailThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamEmailThreshold": {
                      "type": "boolean"
                    },
                    "workItemThreshold": {
                      "type": "integer",
                      "minimum": 0.0,
                      "maximum": 25.0
                    },
                    "useTeamWorkItemThreshold": {
                      "type": "boolean"
                    },
                    "contactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamContactAutoFocus": {
                      "type": "boolean"
                    },
                    "useTeamRequestContact": {
                      "type": "boolean"
                    },
                    "subject": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "issuer": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "recordingNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "isOpenIdProfileComplete": {
                      "type": "boolean"
                    },
                    "teamUuId": {
                      "type": "string",
                      "minLength": 36,
                      "maxLength": 38
                    },
                    "maxPreview": {
                      "type": "boolean"
                    },
                    "deliveryMode": {
                      "type": "string"
                    },
                    "totalContactCount": {
                      "type": "integer"
                    },
                    "useTeamDeliveryModeSettings": {
                      "type": "boolean"
                    },
                    "emailRefusalTimeout": {
                      "type": "integer"
                    },
                    "voicemailRefusalTimeout": {
                      "type": "integer"
                    },
                    "smsRefusalTimeout": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "<p>{0}</p><p>Invalid {0}</p><p>{0}</p>"
        },
        "403": {
          "description": "{0}"
        },
        "404": {
          "description": "{0}"
        },
        "409": {
          "description": "{0}"
        }
      }
    }
  },
  "branding-profiles": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns Branding Profile",
      "operationId": "Branding Profiles",
      "description": "This method will return the active Branding Profile for the Business Unit specified by \"businessUnitId\", including base64 encoded image artifacts that can be used for branding custom applications.  If your Business Unit has a child Business Unit associated with it, you can use the \"businessUnitId\" parameter to return the active profile associated with that Business Unit.<div class='tabs_wrapper' data-path='admin_general_getBrandingProfile.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/businessUnitId"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getBrandingProfilesResponse"
          }
        },
        "204": {
          "description": "No Branding Profile assigned for businessUnitId - '{0}'"
        },
        "400": {
          "description": "<p>Invalid businessUnitId - '{0}', {1}</p><p>Invalid fields - '{0}', must be list of valid field names</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        }
      }
    }
  },
  "business_unit": {
    "get": {
      "tags": [ "General" ],
      "summary": "%UPDATED_IN_V22%  Returns Business Unit config",
      "operationId": "Business Unit Info",
      "description": "This method will return the configuration elements of your Business Unit.  This includes what features are available and whether or not they have been enabled.<div class='tabs_wrapper' data-path='admin_general_getBusinessUnit.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "name": "includeTrustedBusinessUnits",
          "description": "Include Trusted Business Units",
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getBusinessUnitResponse"
          }
        },
        "400": {
          "description": "Invalid fields list"
        }
      }
    }
  },
  "countries": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns Countries",
      "operationId": "GetCountries",
      "description": "This method will return the list of Countries.  This can be used when creating Agents through the <a href='AdminAPI#!/Agents/CreateAnAgent'>POST /agents</a> method.<div class='tabs_wrapper' data-path='admin_general_getCountries.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getCountriesResponse"
          }
        },
        "204": {
          "description": "No countries configured"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Forbidden. Check Security Profile permissions"
        }
      }
    }
  },
  "countries-countryId-states": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns States or Provinces",
      "operationId": "GetsStatesProvinces",
      "description": "This method will return the list of States or Provinces if the Country identified by \"countryId\" is configured for either.  This can be used when creating Agents through the <a href='AdminAPI#!/Agents/CreateAnAgent'>POST /agents</a> method.<div class='tabs_wrapper' data-path='admin_general_getStates.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/countryId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getCountryStatesResponse"
          }
        },
        "204": {
          "description": "No states configured"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Forbidden. Check Security Profile permissions"
        },
        "404": {
          "description": "Invalid countryId - '{0}'"
        },
        "500": {
          "description": "Internal Error"
        }
      }
    }
  },
  "data-definitions-data-types": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns Data Types",
      "operationId": "DataDefinitions",
      "description": "This method will return all Data Definition types for use with defining custom data definitions that can be used when mapping columns of data when uploading a calling list.<div class='tabs_wrapper' data-path='admin_general_getDataDefinition.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getDataDefinitionsDataTypesResponse"
          }
        }
      }
    }
  },
  "dispositions": {
    "get": {
      "tags": [
        "General"
      ],
      "summary": "Returns a list of dispositions",
      "operationId": "getdispostion",
      "description": "This method returns a list of dispositions with response fields.<br/><br/><div class='tabs_wrapper' data-path='admin_general_getdispositions.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        },
        {
          "name": "isPreviewDispositions",
          "description": "",
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getdispositionsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid parameter</p><p>Invalid fields - '{0}' is not a valid field name</p>"
        }
      }
    },
    "post": {
      "tags": [
        "Skills"
      ],
      "summary": "Create a new disposition",
      "operationId": "postdisposition",
      "description": "This method allow you to create disposition(s) <div class='tabs_wrapper' data-path='admin_general_postdispositions.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "dispositions",
          "description": "",
          "type": "DynamicData",
          "required": true,
          "in": "body",
          "schema": {
            "$ref": "#/definitions/postdispositionsRequest"

          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postdispositionsResponse"
          }
        },
        "206": {
          "description": "Partial success. One or more dispositions were not created",
          "schema": {
            "$ref": "#/definitions/postdispositionsResponseNew"
          }
        },
        "400": {
          "description": "<p>Invalid Dispositions - cannot be null or empty</p><p>Maximum {0} limit of {1} exceeded</p>"
        }
      }
    }
  },
  "files": {
    "get": {
      "tags": [ "General" ],
      "summary": "Get a File",
      "operationId": "Retrieve a File",
      "description": "This method will return a file from the file server as identified by the fileName.  The file is returned in a Base64 encoded format. <div class='tabs_wrapper' data-path='admin_general_getFile.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "fileName",
          "description": "Full path of file to retrieve.  i.e. CallingLists list1000.csv",
          "type": "string",
          "in": "query",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getFilesResponse"
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    },
    "delete": {
      "tags": [ "General" ],
      "summary": "Deletes a File",
      "operationId": "DeleteFile",
      "description": "This method will delete a file on the file server as identified by \"fileName\".  The parameter \"fileName\" parameter must contain the filename as well as the directory path. <br/><br/><b><i><span style='color:red'>v17.0 NOTE: </span></i></b> Added permission check, this API requires Files & Folders delete/deactivate permission. <div class='tabs_wrapper' data-path='admin_general_deleteFile.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "fileName",
          "description": "Full path of file to delete.  i.e. \"\/CallingLists\/list1000.csv\"",
          "type": "string",
          "in": "query",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>File Protected</p><p>File Not Found</p><p>Invalid fileName</p>"
        }
      }
    },
    "post": {
      "tags": [ "General" ],
      "summary": "Uploads a File",
      "operationId": "UploadFile",
      "description": "This method will upload a file to the file server as identified by \"fileName\".  The file is uploaded in a Base64 encoded format.  The parameter \"fileName\" must contain the filename as well as the directory path.<div class='tabs_wrapper' data-path='admin_general_postFile.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "fileName",
          "description": "Full path of file to post.  i.e. \"/CallingLists\\/list1000.csv\"",
          "type": "string",
          "in": "query",
          "required": true
        },
        {
          "name": "file",
          "type": "string",
          "format": "base64",
          "description": "Base64 encoded file",
          "in": "query"
        },
        {
          "name": "overwrite",
          "description": "Indicates if file should overwrite existing file",
          "type": "boolean",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>File exists, set overwrite true to overwrite</p><p>File stream is corrupt</p><p>Invalid {0} - '{1}', {2}</p><p>Invalid file size. Max size is {0} KB</p><p>Max concurrent file uploads per business unit reached</p>"
        }
      }
    },
    "put": {
      "tags": [ "General" ],
      "summary": "Moves or Renames a File",
      "operationId": "MoveFile",
      "description": "This method will move a file on the file server as identified by \"fileName\" to a new location or rename the file in the existing location.  The parameters \"oldPath\" and \"newPath\" must contain the filename as well as the directory paths.<div class='tabs_wrapper' data-path='admin_general_putFile.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "oldPath",
          "description": "Full path of file to move or rename.  i.e. \"/CallingLists/list1000.csv\"",
          "type": "string",
          "in": "query",
          "required": true
        },
        {
          "name": "newPath",
          "description": "Full path of new location or name of file.  i.e. \"/CallingLists/list1000.csv\"",
          "type": "string",
          "in": "query",
          "required": true
        },
        {
          "name": "overwrite",
          "description": "Indicates if file should overwrite existing file at the new location",
          "type": "boolean",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Action Failed</p><p>File Not Found</p><p>Invalid {0} - '{1}', {2}</p>"
        }
      }
    }
  },
  "files_external": {
    "get": {
      "tags": [
        "General"
      ],
      "summary": "Returns a list of unprocessed files",
      "operationId": "GetExternalfiles",
      "description": "This method returns a list of unprocessed files without a contactId.<div class='tabs_wrapper' data-path='admin_general_getFileExternal.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "folderPath",
          "description": "Location of the folder",
          "type": "string",
          "in": "query"          
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "files": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "fileName": {
                      "type": "string",
                      "description": "File Name"
                    },
                    "fileNameWithPath": {
                      "type": "string",
                      "description": "File Name"
                    },
                    "needsProcessing": {
                      "type": "boolean",
                      "description": "Needs Processing"

                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Folder Not Found"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    },
    "put": {
      "tags": [
        "General"
      ],
      "summary": "Marks a file as processed.",
      "operationId": "putexteranlfiles",
      "description": "This method marks a file as processed.<div class='tabs_wrapper' data-path='admin_general_putFileExternal.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "fileName",
          "description": "File Name",
          "type": "string",
          "in": "query",
          "required": true
        },
        {
          "name": "needsProcessing",
          "description": "Needs Processing",
          "in": "query",
          "type": "boolean",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p><p>Invalid fileName</p><p>File Not Found</p></p><p>Action Failed</p>"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    },
    "post": {
      "tags": [
        "General"
      ],
      "summary": "Marks a file to be processed.",
      "operationId": "postexternalfiles",
      "description": "This method marks a file as âneeds to be processedâ <div class='tabs_wrapper' data-path='admin_general_postFileExternal.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "fileName",
          "description": "File Name",
          "type": "string",
          "in": "query",
          "required": true
        },
        {
          "name": "file",
          "description": "File",
          "in": "query",
          "type": "string",
          "required": true

        },
        {
          "name": "overwrite",
          "description": "Overwrite",
          "in": "query",
          "type": "boolean"
        },
        {
          "name": "needsProcessing",
          "description": "Needs Processing",
          "in": "query",
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p><p><p>Invalid 'fileName' </p><p>File exists, set overwrite true to overwrite</p></p><p>File stream is corrupt</p></p><p>Invalid file size. Max size is {0} KB</p>"
        },
        "401": {
          "description": "Unauthorized"
        },
        "429": {
          "description": "Max concurrent file uploads per business unit reached"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    }
  },
  "folders": {
    "delete": {
      "tags": [ "General" ],
      "summary": "Deletes a Folder",
      "operationId": "DeleteFolder",
      "description": "This method will delete a folder on the file server as identified by \"folderName\".<br/><br/><b><i><span style='color:red'>v17.0 NOTE: </span></i></b> Added permission check, this API requires Files & Folders delete/deactivate permission. <div class='tabs_wrapper' data-path='admin_general_deleteFolder.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "folderName",
          "description": "Full path of folder to delete.  i.e. \"/CallingLists/Campaigns\"",
          "type": "string",
          "in": "query",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Folder Protected</p><p>Folder Not Found</p><p>Invalid folderName</p>"
        }
      }
    },
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a Directory Listing",
      "operationId": "ReturnFolder",
      "description": "This method will return the directory listing of a folder in the file server as identified by \"folderName\".<div class='tabs_wrapper' data-path='admin_general_getFolder.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "folderName",
          "description": "Full path of folder to return contents of.  i.e. \"/CallingLists/Campaigns\"",
          "type": "string",
          "in": "query",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Folder Not Found</p><p>Invalid folderName</p>"
        }
      }
    }
  },
  "feedback_categories_and_priorities": {
    "get": {
      "tags": [ "General" ],
      "summary": "Get all feedback categories and priorities",
      "operationId": "Categories and Priorities",
      "description": "This method returns a list of all of the system assigned Feedback Categories and Priorities that can be used with the <a href='/API/AgentAPI#!/Sessions/Send_Feedback'>POST /agent-sessions/{sessionId}/submit-feedback</a> method to allow an Agent to send a Feedback description.<div class='tabs_wrapper' data-path='admin_contacts_getFeedback.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getFeedbackCategoriesAndPrioritiesResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        }
      }
    }
  },
  "hiring-sources": {
    "post": {
      "tags": [ "General" ],
      "summary": "Create a Hiring Source",
      "operationId": "CreateHiringScource",
      "description": "This method will create a Hiring Source for your Business Unit.  This can be used when creating Agents through the <a href='AdminAPI#!/Agents/CreateAnAgent'>POST /agents</a> method.<div class='tabs_wrapper' data-path='admin_general_postHiringSources.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "sourceName",
          "description": "Hiring Source Name",
          "type": "string",
          "in": "query",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postHiringSourcesResponse"
          }
        },
        "400": {
          "description": "<p>Invalid sourceName - '{0}', {1}</p><p>Invalid sourceName - cannot be null or empty</p>"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    },
    "get": {
      "tags": [ "General" ],
      "summary": "Returns Hiring Sources",
      "operationId": "GetHiringSources",
      "responseClass": "",
      "description": "This method will return all Hiring Sources for your Business Unit.  This can be used when creating Agents through the <a href='AdminAPI#!/Agents/CreateAnAgent'>POST /agents</a> method.<div class='tabs_wrapper' data-path='admin_general_getHiringSources.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getHiringSourcesResponse"
          }
        },
        "204": {
          "description": "No hiring sources configured"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Forbidden. Check Security Profile permissions"
        }
      }
    }
  },
  "hours_of_operation": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns Hours of Operation profiles",
      "operationId": "HoursofOperationList",
      "description": "This method will return all Hours of Operation profiles.<div class='tabs_wrapper' data-path='admin_general_getHoursOfOperation.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/skipNew"
        },
        {
          "$ref": "#/definitions/parameters/topNew"
        },
        {
          "$ref": "#/definitions/parameters/orderByNew"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getHoursOfOperationsResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    },
    "post": {
      "tags": [ "General" ],
      "summary": "  Creates an hours of operation profile",
      "operationId": "post-hours-of-operation",
      "description": "This method will let you create an hours of operation profile.  Only âprofileNameâ is required to create a profile with no holidays and open 24/7.  âDaysâ array will default to open all day if âdayâ is not included in request. <div class='tabs_wrapper' data-path='admin_general_postHoursOfOperation.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "hoursOfOperation",
          "description": "Hours Of Operation",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "profileName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 30
              },
              "description": {
                "type": "string",
                "maxLength": 100
              },
              "notes": {
                "type": "string",
                "maxLength": 2000
              },
              "days": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "string"
                    },
                    "openTime": {
                      "type": "string"
                    },
                    "closeTime": {
                      "type": "string"
                    },
                    "hasAdditionalHours": {
                      "type": "boolean"
                    },
                    "additionalOpenTime": {
                      "type": "string"
                    },
                    "additionalCloseTime": {
                      "type": "string"
                    },
                    "isClosedAllDay": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "holidays": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "holidayName": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "openTime": {
                      "type": "string"
                    },
                    "closeTime": {
                      "type": "string"
                    },
                    "hasAdditionalHours": {
                      "type": "boolean"
                    },
                    "additionalOpenTime": {
                      "type": "string"
                    },
                    "additionalCloseTime": {
                      "type": "string"
                    },
                    "isClosedAllDay": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "overrideBranch": {
                "type": "string"
              },
              "overrideExpirationDate": {
                "type": "string"
              },
              "skills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillId": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "required": [
              "profileName"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "profileId": {
                "type": "string"
              },
              "profileName": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "<p>Invalid profileName - String '' is less than minimum length of 1.</p><p>Invalid Holidayname</p><p>Invalid Holiday Date : '' is not a valid Date</p><p>Invalid Holiday : OpenTime for '{0}' is not a valid time</p><p> Invalid Holiday : CloseTime for '{0}' is not a valid time</p><p>Invalid SkillId</p>"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "hours_of_operation_profileId": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns an Hour of Operation profile",
      "operationId": "HoursofOperationById",
      "description": "This method will return the Hours of Operation profile identified by profileId.<div class='tabs_wrapper' data-path='admin_general_getHoursOfOperationById.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "profileId",
          "description": "ID of the profile",
          "required": true,
          "type": "integer",
          "format": "int32",
          "in": "path"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getHoursOfOperationsProfileResponse"
          }
        },
        "400": {
          "description": "<p>Invalid fields list</p><p>Invalid updatedSince</p>"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid or missing profileId"
        }
      }
    },
    "put": {
      "tags": [ "General" ],
      "summary": "  Updates an hours of operation profile",
      "operationId": "put-hours-of-operation-id",
      "description": "This method will let you update an hours of operation profile.  âDaysâ and âholidaysâ arrays will only update what is in the request.  This method will also delete a holiday by setting the âdeleteHolidayâ flag and âdeleteHolidayDateâ. <div class='tabs_wrapper' data-path='admin_general_putHoursOfOperationById.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "profileId",
          "description": "",
          "type": "integer",
          "in": "path"
        },
        {
          "name": "hoursOfOperation",
          "description": "Hours Of Operation",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "profileName": {
                "type": "string",
                "maxLength": 30
              },
              "description": {
                "type": "string",
                "maxLength": 100
              },
              "notes": {
                "type": "string",
                "maxLength": 2000
              },
              "days": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "day": {
                      "type": "string"
                    },
                    "openTime": {
                      "type": "string"
                    },
                    "closeTime": {
                      "type": "string"
                    },
                    "hasAdditionalHours": {
                      "type": "boolean"
                    },
                    "additionalOpenTime": {
                      "type": "string"
                    },
                    "additionalCloseTime": {
                      "type": "string"
                    },
                    "isClosedAllDay": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "holidays": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "holidayName": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string"
                    },
                    "openTime": {
                      "type": "string"
                    },
                    "closeTime": {
                      "type": "string"
                    },
                    "hasAdditionalHours": {
                      "type": "boolean"
                    },
                    "additionalOpenTime": {
                      "type": "string"
                    },
                    "additionalCloseTime": {
                      "type": "string"
                    },
                    "isClosedAllDay": {
                      "type": "boolean"
                    },
                    "deleteHoliday": {
                      "type": "boolean"
                    },
                    "deleteHolidayDate": {
                      "type": "string"
                    }
                  }
                }
              },
              "overrideBranch": {
                "type": "string"
              },
              "overrideExpirationDate": {
                "type": "string"
              },
              "skills": {
                "type": "object",
                "properties": {
                  "skillId": {
                    "type": "string"
                  },
                  "removeSkillId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid parameter 'profileId', must be type Int32</p><p>Invalid profileName - String '' is less than minimum length of 1.</p><p>Invalid Holidayname</p><p>Invalid Holiday Date</p><p>Invalid Holiday:Open time '{0}' is not a valid time</p><p> Invalid Holiday : CloseTime '{0}' is not a valid time</p><p>Invalid SkillId</p>"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Invalid Security User</p>"
        },
        "404": {
          "description": "Invalid hours Of Operation ProfileId"
        }
      }
    }
  },
  "locations": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns Locations",
      "operationId": "ReturnsLocations",
      "description": "This method will return the list of Locations configured for your Business Unit.  This can be used when creating Agents through the <a href='AdminAPI#!/Agents/CreateAnAgent'>POST /agents</a> method.<div class='tabs_wrapper' data-path='admin_general_getLocations.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "includeAgents",
          "description": "Indicates if Agent information should be returned",
          "type": "boolean",
          "default": false,
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getLocationsResponse"
          }
        },
        "204": {
          "description": "No Locations configured"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "media_types": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a list of media types",
      "operationId": "getMediaTypes",
      "description": "This method will return a list of all of the media types available.  These values will be integers that can be used in the /media-types/{mediaTypeId} API to return the names of the media types as well.<div class='tabs_wrapper' data-path='admin_contacts_getMediaTypes.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getMediaTypesResponse"
          }
        },
        "401": {
          "description": "Unauthorized: token is expired"
        },
        "403": {
          "description": "Insufficient Privileges: security profile prevents access"
        },
        "404": {
          "description": "Not Found: invalid media type ID"
        },
        "405": {
          "description": "Method Not Allowed: must use GET"
        },
        "500": {
          "description": "Internal Server Error: contact tech support"
        }
      }
    }
  },
  "media_types_mediaTypeId": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a single media type",
      "operationId": "getMediaTypeById",
      "description": "Useful for mapping media type ID's that are returned in other API calls to textual, human-friendly descriptions, for display in reports or on dashboards.<div class='tabs_wrapper' data-path='admin_contacts_getMediaTypeID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "mediaTypeId",
          "description": "Media Type Id",
          "required": true,
          "type": "integer",
          "in": "path"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getMediaTypesResponse"
          }
        },
        "401": {
          "description": "Unauthorized: token is expired"
        },
        "404": {
          "description": "Invalid Media Type"
        }
      }
    }
  },
  "message-templates": {
    "post": {
      "tags": [ "General" ],
      "summary": "Creates a Message Template",
      "operationId": "CreatesMessageTemplate",
      "description": "This method will return all Message Templates for use with agentless SMS or Email using Personal Connection.<div class='tabs_wrapper' data-path='admin_general_postMessageTemplate.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "templateName",
          "description": "Name of template",
          "type": "string",
          "in": "query",
          "required": true
        },
        {
          "name": "templateTypeId",
          "description": "ID of the template type. 1 = SMS, 2 = Email",
          "type": "integer",
          "in": "query",
          "required": true,
          "enum": [
            "1",
            "2"
          ]
        },
        {
          "name": "subject",
          "description": "Subject of Email message",
          "type": "string",
          "in": "query"
        },
        {
          "name": "body",
          "description": "Content of SMS message.  Changed from smsContent in v7.0",
          "type": "string",
          "in": "query"
        },
        {
          "name": "isHTML",
          "description": "Indicates if body is HTML formatted string",
          "type": "boolean",
          "in": "query"
        },
        {
          "name": "ccAddress",
          "description": "Email addresses to be placed in the CC field of email.  Multiple addresses can be passed with the \";\" delimiter",
          "type": "string",
          "in": "query"
        },
        {
          "name": "bccAddress",
          "description": "Email addresses to be placed in the BCC field of email.  Multiple addresses can be passed with the \";\" delimiter",
          "type": "string",
          "in": "query"
        },
        {
          "name": "replyToAddress",
          "description": "Email addresses to be placed in the repl field of email.  Multiple addresses can be passed with the \";\" delimiter",
          "type": "string",
          "in": "query"
        },
        {
          "name": "fromName",
          "description": "Name to be displayed in the from field of the email",
          "type": "string",
          "in": "query"
        },
        {
          "name": "fromAddress",
          "description": "Email addresses to be placed in the from field of email",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postMessageTemplatesResponse"
          }
        },
        "403": {
          "description": "Security permissions prevent access to data"
        },
        "400": {
          "description": "<p>Invalid {parameter name} - '{parameter name}'{parameter value}</p>"
        }
      }
    },
    "get": {
      "tags": [ "General" ],
      "summary": "Gets all Message Templates",
      "operationId": "MessageTemplates",
      "description": "This method will return all Message Templates for use with agentless SMS or Email using Personal Connection.<div class='tabs_wrapper' data-path='admin_general_getMessageTemplate.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "templateTypeId",
          "description": "ID of the template type. 1 = SMS, 2 = Email",
          "type": "integer",
          "in": "query",
          "enum": [ "1", "2" ]
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getMessageTemplatesResponse"
          }
        },
        "204": {
          "description": "No message templates defined"
        },
        "400": {
          "description": "Invalid {0} - '{1}'{2}"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "message-templates-templateId": {
    "put": {
      "tags": [ "General" ],
      "summary": "Updates a Message Template",
      "operationId": "UpdatesMessageTemplate",
      "description": "This method will update a Message Template indicated by \"templateId\" for use with agentless SMS or Email using Personal Connection.<div class='tabs_wrapper' data-path='admin_general_putMessageTemplateID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "templateId",
          "description": "ID of the Message Template",
          "required": true,
          "type": "string",
          "in": "path"
        },
        {
          "name": "templateName",
          "description": "Name of template",
          "type": "string",
          "in": "query"
        },
        {
          "name": "isActive",
          "description": "Sets the template active or inactive",
          "type": "boolean",
          "in": "query"
        },
        {
          "name": "subject",
          "description": "Subject of Email message",
          "type": "string",
          "in": "query"
        },
        {
          "name": "body",
          "description": "Content of SMS message.  Changed from smsContent in v7.0",
          "type": "string",
          "in": "query"
        },
        {
          "name": "isHTML",
          "description": "Indicates if body is HTML formatted string",
          "type": "boolean",
          "in": "query"
        },
        {
          "name": "ccAddress",
          "description": " Email addresses to be placed in the CC field of email.  Multiple addresses can be passed with the \";\" delimiter",
          "type": "string",
          "in": "query"
        },
        {
          "name": "bccAddress",
          "description": " Email addresses to be placed in the BCC field of email.  Multiple addresses can be passed with the \";\" delimiter",
          "type": "string",
          "in": "query"
        },
        {
          "name": "replyToAddress",
          "description": "Email addresses to be placed in the repl field of email.  Multiple addresses can be passed with the \";\" delimiter",
          "type": "string",
          "in": "query"
        },
        {
          "name": "fromName",
          "description": "Name to be displayed in the from field of the email",
          "type": "string",
          "in": "query"
        },
        {
          "name": "fromAddress",
          "description": "Email addresses to be placed in the from field of email",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        },
        "404": {
          "description": "<p>Invalid {0} - '{1}'{2}</p><p>Invalid {0}, cannot be longer than {1} characters</p>"
        }
      }
    },
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a Message Template",
      "operationId": "MessageTemplate",
      "description": "This method will return the Message Template indicated by \"templateId\" for use with agentless SMS or Email using Personal Connection.<div class='tabs_wrapper' data-path='admin_general_getMessageTemplateID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/templateId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getMessageTemplateResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'{2}"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "permissions": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a list of permissions",
      "operationId": "getPermissions",
      "description": "This method returns a list of all available permissions.<div class='tabs_wrapper' data-path='admin_general_getPermissions.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getPermissionsResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "permissions_agentId": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a list of permissions for an agent",
      "operationId": "Agent Permissions List",
      "description": "This method returns a list of all permissions assigned to the agent specified by agentId.<div class='tabs_wrapper' data-path='admin_general_getPermissionsID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/pathAgentId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getPermissionsResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Agent Id"
        }
      }
    }
  },
  "phone-codes": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns SMS Phone Codes",
      "operationId": "PhoneCodes",
      "description": "This method will return the list of SMS Phone Codes configured for your Business Unit.  This can be used when creating a Proactive Agentless SMS Skill for use with Personal Connection using the <a href='AdminAPI#!/Skills/CreateSkill'>POST /skills</a> method.<div class='tabs_wrapper' data-path='admin_general_getPhoneCodes.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getPhoneCodesResponse"
          }
        },
        "204": {
          "description": "No phone codes registered"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "points_of_contact": {
    "get": {
      "tags": [ "General" ],
      "summary": "%UPDATED_IN_V23%  Returns a list of points of contact",
      "operationId": "getPointsOfContact",
      "description": "A point of contact is essentially an \"address\" where patrons can request an interaction with an agent. For example, a point of contact for the phone channel would be a phone number that someone can dial. A point of contact for the email channel would be an email address to which they can send emails. A point of contact for a work item or chat channel is a GUID for each channel, which applications can use to get chat requests or work items into queue.<div class='tabs_wrapper' data-path='admin_contacts_getPointOfContact.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "mediaTypeId",
          "description": "ID of Media Type to filter by.  Allowable values can be retrieved using <b>GET /media-types</b> API.  The pick list here is for ease of use in the Portal",
          "type": "integer",
          "in": "query",
          "enum": [
            "1",
            "3",
            "4",
            "5",
            "6"
          ]
        },
        {
          "name": "skip",
          "description": "Number of records to skip in the results",
          "type": "integer",
          "in": "query"
        },
        {
          "name": "top",
          "description": "Number of records to return in the results",
          "type": "integer",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getPointsOfContactResponse"
          }
        },
        "401": {
          "description": "Unauthorized: token is expired"
        },
        "403": {
          "description": "Insufficient Privileges: security profile prevents access"
        },
        "404": {
          "description": "Not Found: invalid point of contact ID"
        },
        "405": {
          "description": "Method Not Allowed: must use GET"
        },
        "500": {
          "description": "Internal Server Error: contact tech support"
        }
      }
    },
    "post": {
      "tags": [ "General" ],
      "summary": " Creates a point of contact",
      "operationId": "post-points-of-contact",
      "description": "This method will create a point of contact for any media type.  Depending on the media type requested different parameters will be required. <div class='tabs_wrapper' data-path='admin_general_postPointsOfContact.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "pointOfContactData",
          "description": "",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "pointOfContact": {
                "type": "string",
                "minLength": 1,
                "maxLength": 80
              },
              "pointOfContactName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "skillId": {
                "type": "integer",
                "description": "Returns ID of skill"
              },
              "isActive": {
                "type": "boolean"
              },
              "mediaTypeId": {
                "type": "integer",
                "description": "The numeric ID of the Media Type. Media Types are designated as 1 = Email, 2 = Fax, 3 = Chat, 4 = Phone call, 5 = Voicemail, 6 = Work items, 7 = SMS, 8 = Social and 9 = Digital"
              },
              "scriptName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 300
              },
              "ivrReportingEnabled": {
                "type": "boolean"
              },
              "chatProfileId": {
                "type": "integer"
              }
            },
            "required": [
              "pointOfContact",
              "pointOfContactName",
              "skillId",
              "scriptName"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "error": {
                "type": "string"
              },
              "error_Description": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "<p>Invalid pointOfContact - String '' is less than minimum length of 1.</p><p>PointÂ ofÂ ContactÂ {0}Â -Â alreadyÂ exists</p>"
        },
        "403": {
          "description": "{0}. Security permissions prevent access to data"
        },
        "404": {
          "description": "Invalid pointOfContactId '{0}'"
        }
      }
    }
  },
  "points_of_contact_pointOfContactId": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a single point of contact",
      "operationId": "getPointOfContactById",
      "description": "A point of contact is essentially an \"address\" where patrons can request an interaction with an agent. For example, a point of contact for the phone channel would be a phone number that someone can dial. A point of contact for the email channel would be an email address to which they can send emails. A point of contact for a work item or chat channel is a GUID for each channel, which applications can use to get chat requests or work items into queue.<div class='tabs_wrapper' data-path='admin_contacts_getPointOfContactID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "pointOfContactId",
          "description": "Point of Contact Id",
          "required": true,
          "allowMultiple": false,
          "type": "integer",
          "in": "path"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getPointsOfContactResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient Privileges: security profile prevents access"
        },
        "404": {
          "description": "Invalid Point Of Contact Id"
        },
        "405": {
          "description": "Method Not Allowed: must use GET"
        },
        "500": {
          "description": "Internal Server Error: contact tech support"
        }
      }
    },
    "put": {
      "tags": [ "General" ],
      "summary": "  Updates a point of contact",
      "operationId": "put-points-of-contact-id",
      "description": "This method will update a point of contact for any media type.  Depending on the media type requested different parameters will be required. <div class='tabs_wrapper' data-path='admin_general_putPointsOfContactsID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "pointOfContactId",
          "description": "Point of Contact Id",
          "required": true,
          "allowMultiple": false,
          "type": "integer",
          "in": "path"
        },
        {
          "name": "pointOfContactData",
          "description": "",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "pointOfContactName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              },
              "skillId": {
                "type": "integer"
              },
              "isActive": {
                "type": "boolean"
              },
              "scriptName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 300
              },
              "ivrReportingEnabled": {
                "type": "boolean"
              },
              "chatProfileId": {
                "type": "integer"
              }
            },
            "required": [
              "pointOfContactName",
              "skillId",
              "scriptName"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "error": {
                "type": "string"
              },
              "error_Description": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Invalid parameter 'pointOfContactId', must be type Int32"
        },
        "403": {
          "description": "{0}. Security permissions prevent access to data"
        },
        "404": {
          "description": "Invalid pointOfContactId '{0}'"
        }
      }
    }
  },
  "agents_agentid_agent-settings": {
    "get": {
      "tags": [ "General" ],
      "summary": "Get Agent Settings",
      "operationId": "get-agents-id-agent-settings",
      "description": "This method returns the agent configuration to be used by agent applications, like MAX. <div class='tabs_wrapper' data-path='admin_agentsettings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/pathAgentId"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "maxConferenceParties": {
                "type": "integer"
              },
              "deleteCommitmentId": {
                "type": "integer"
              },
              "deleteCommitmentString": {
                "type": "string"
              },
              "persistentPanels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "persistentPanelId": {
                      "type": "integer"
                    },
                    "persistentPanelURI": {
                      "type": "string"
                    }
                  }
                }
              },
              "raygunApiKeyMAX": {
                "type": "string"
              },
              "raygunApiKeySupervisor": {
                "type": "string"
              },
              "googleAccountNumberMAX": {
                "type": "string"
              },
              "googleAccountNumberSupervisor": {
                "type": "string"
              },
              "wfoWebsiteUrl": {
                "type": "string"
              },
              "wfoWebServiceUrl": {
                "type": "string"
              },
              "wfoApiUrl": {
                "type": "string"
              },
              "maxClientVersion": {
                "type": "integer"
              },
              "webRTCWSSUrls": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "urlName": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "string"
                    }
                  }
                }
              },
              "emergencyPhoneNumbers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "400": {
          "description": "{0}"
        },
        "401": {
          "description": "{0}"
        }
      }
    }
  },
  "security-profiles": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns all Security Profiles",
      "operationId": "GetSecurityProfiles",
      "description": "This method will return the list of Security Profiles configured for your Business Unit.  This includes information on the password complexity for this profile.  This can be used when creating Agents through the <a href='AdminAPI#!/Agents/CreateAnAgent'>POST /agents</a> method.<div class='tabs_wrapper' data-path='admin_general_getSecurityProfiles.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "isExternal",
          "description": "Filters by external or internal",
          "type": "boolean",
          "in": "query"
        },
        {
          "name": "isActive",
          "description": "Filters by active state",
          "type": "boolean",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getSecurityProfilesResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}', {2}"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "security-profiles-profileId": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a Security Profile",
      "operationId": "GetSecurityProfilesID",
      "description": "This method will return the a Security Profile indicated by \"profileId\" including all of the Agents currently assigned to this profile and information on the password complexity for this profile.  This can be used when creating Agents through the <a href='AdminAPI#!/Agents/CreateAnAgent'>POST /agents</a> method.<div class='tabs_wrapper' data-path='admin_general_getSecurityProfilesID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "profileId",
          "description": "Security Profile Id",
          "required": true,
          "type": "integer",
          "in": "path"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getSecurityProfileResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}', {2}"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "scripts": {
    "get": {
      "tags": [ "General" ],
      "summary": "%UPDATED_IN_V24% Open a JSON script",
      "description": "This method will return the script in JSON format from the database. API returns just single script.<br/><br/><i><b>NOTE:</b> Any one of the input parameter is required. If user uses more than one parameter, they should be of the same script.</i>",
      "operationId": "getScript",
      "parameters": [
        {
          "name": "scriptPath",
          "in": "query",
          "description": "complete script name with path. It always return a <b>CURR</b> version.",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "scriptId",
          "in": "query",
          "description": "it may return DISC version of script.",
          "schema": {
            "type": "number"
          }
        },
        {
          "name": "libraryId",
          "in": "query",
          "description": "similar to scriptPath, it always returns a <b>CURR</b> version.",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "SUCCESS",
          "schema": {
            "$ref": "#/definitions/getScript"
          }            
        },
        "400": {
          "description": "InvalidParams"
        },
        "403": {
          "description": "You do not have sufficient permissions"
        },
        "404": {
          "description": "Scripts Not Found"
        },
        "500": {
          "description": "Internal Error"
        },
        "503": {
          "description": "Service Unavailable"
        }
      }
    },
    "post": {
      "tags": [ "General" ],
      "summary": "Save a JSON script",
      "description": "This method will save a new Script in JSON format into the data base, if the Script already exists it will be overwritten <div class='tabs_wrapper' data-path='admin_general_postScripts.html'></div>",
      "parameters": [
        {
          "name": "scriptContent",
          "description": "Post save script comprises the entire JSON document.",
          "type": "DynamicData",
          "in": "body",
          "allowMultiple": true,
          "schema": {
            "$ref": "#/definitions/postScript"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "SUCCESS",
          "schema": {
            "$ref": "#/definitions/postScriptResult"
          }
        },
        "201": {
          "description": "Created",
          "schema": {
            "$ref": "#/definitions/postScriptResult"
          }
        },
        "400": {
          "description": "InvalidParams"
        },
        "401": {
          "description": "You do not have sufficient permissions"
        },
        "403": {
          "description": "Locked by someone else / BusUnitNotAllowed / You has been kicked",
          "schema": {
            "$ref": "#/definitions/postScriptKickedResult"
          }
        },
        "500": {
          "description": "Internal Error"
        },
        "503": {
          "description": "Service Unavailable"
        }
      }
    },
    "put": {
      "tags": [ "General" ],
      "summary": " Update a existing Script",
      "description": "This method will update the state of a Script only to Lock or Unlock. <div class='tabs_wrapper' data-path='admin_general_putScripts.html'></div>",
      "parameters": [
        {
          "name": "scriptPath",
          "in": "query",
          "description": "full path and the name of the Script",
          "required": true,
          "style": "simple",
          "explode": false,
          "type": "string"
        },
        {
          "name": "lockScript",
          "in": "query",
          "description": "State to which you want to change the script, Send true to lock the Script and false to Unlock the script",
          "required": true,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/LockUnlockScript"
          }
        },
        "400": {
          "description": "Invalid Parameters"
        },
        "401": {
          "description": "You do not have sufficient permissions"
        },
        "404": {
          "description": "Script Path Not Found"
        },
        "405": {
          "description": "Already unlocked"
        },
        "500": {
          "description": "Internal Error"
        },
        "501": {
          "description": "Service Internal Error"
        }
      }
    },
    "delete": {
      "tags": [ "General" ],
      "summary": " Deletes script",
      "operationId": "delete-scripts",
      "description": "Delete script by scriptPath. <div class='tabs_wrapper' data-path='admin_list_deletescripts.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "scriptPath",
          "description": "Script Path",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "scriptPath": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              },
              "error": {
                "type": "string"
              }
            }
          }
        },
        "206": {
          "description": "Partial Success. Script is assigned to an active Point of Contact",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "scriptPath": {
                "type": "string"
              },
              "deleted": {
                "type": "boolean"
              },
              "error": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Invalid Params"
        },
        "401": {
          "description": "You do not have sufficient permissions"
        },
        "404": {
          "description": "Not Found"
        },
        "500": {
          "description": "Internal Error"
        },
        "501": {
          "description": "InControl.Net Service Internal Error"
        }
      }
    }
  },
  "scripts/files": {
    "get": {
      "tags": [
        "General"
      ],
      "summary": "Get file configuration info and content",
      "description": "This method gets the configuration info of a File and the content. <div class='tabs_wrapper' data-path='admin_general_getScriptsfiles.html'></div>",
      "parameters": [
        {
          "name": "fileFullName",
          "in": "query",
          "description": "Full path of the file from which we want to obtain information",
          "required": true,
          "example": "Audio//1006510888.wav",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "includeFileContent",
          "in": "query",
          "description": "This flag enables the API to get the content of the file in String Base64 format",
          "example": false,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "SUCCESS",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/GetFileInfo"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "403": {
          "description": "You do not have sufficient permissions"
        },
        "404": {
          "description": "Not Found"
        },
        "500": {
          "description": "Internal Error"
        },
        "503": {
          "description": "Service Unavailable"
        }
      }
    },
    "post": {
      "tags": [
        "General"
      ],
      "summary": "Save file in file server",
      "description": "This method will save a new file on the file server, if the file already exists it will be overwritten.<div class='tabs_wrapper' data-path='admin_general_postScriptsfiles.html'></div>",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "fileFullName": {
                  "type": "string",
                  "description": "Full path of the file to be saved"
                },
                "fileContent": {
                  "type": "string",
                  "description": "File content converted into a base64 string"
                }
              },
              "example": {
                "fileFullName": "Audio//1006510888.wav",
                "fileContent": "UklGRsaaQgBXQVZFZm10IBIAAAAHAAEAQB8AAEAfAAABAAgAAABkYXRhoJpCAP..."
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "SUCCESS",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/PostFile"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "403": {
          "description": "You do not have sufficient permissions"
        },
        "404": {
          "description": "Not Found"
        },
        "500": {
          "description": "Internal Error"
        },
        "503": {
          "description": "Service Unavailable"
        }
      }
    },
    "put": {
      "tags": [
        "General"
      ],
      "summary": "Update File configuration",
      "description": "This method modifies the configuration of an existing file.<div class='tabs_wrapper' data-path='admin_general_putScriptsfiles.html'></div>",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/PutFileConfiguration"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "SUCCESS",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/PostFile"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "403": {
          "description": "You do not have sufficient permissions"
        },
        "404": {
          "description": "Not Found"
        },
        "500": {
          "description": "Internal Error"
        },
        "503": {
          "description": "Service Unavailable"
        }
      }
    },
    "delete": {
      "tags": [
        "General"
      ],
      "summary": "Delete a File from the file server",
      "description": "This method delete a file from the file server.<div class='tabs_wrapper' data-path='admin_general_deleteScriptsfiles.html'></div>",
      "parameters": [
        {
          "name": "fileFullName",
          "in": "query",
          "description": "Full path of the file we want to delete",
          "required": true,
          "example": "Audio//1006510888.wav",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "SUCCESS",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/PostFile"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request"
        },
        "403": {
          "description": "You do not have sufficient permissions"
        },
        "404": {
          "description": "Not Found"
        },
        "500": {
          "description": "Internal Error"
        },
        "503": {
          "description": "Service Unavailable"
        }
      }
    }
  },
  "scripts/files/search": {
    "get": {
      "tags": [
        "General"
      ],
      "summary": "Return a list of Files and Folders from the file server",
      "description": "This method returns a list structure of Files and Folders from FileServer.<div class='tabs_wrapper' data-path='admin_general_getScriptsfilesSearch.html'></div>",
      "parameters": [
        {
          "name": "rootFolder",
          "in": "query",
          "description": "name of the folder in which I want to search, if this variable is passed as empty it will search from the root",
          "required": true,
          "example": "Audios//Folder1",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "filter",
          "in": "query",
          "description": "it is possible to search files by their extension (e.g. *.wav)",
          "schema": {
            "type": "string"
          },
          "example": "*.wav"
        },
        {
          "name": "inclusionFilePurposeTypeList",
          "in": "query",
          "description": "it is possible to search files by purpose sending a list of purposeId's",
          "example": "1,2",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "SUCCESS",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/searchFiles"
              }
            }
          }
        },
        "400": {
          "description": "Invalid Params"
        },
        "403": {
          "description": "You do not have sufficient permissions"
        },
        "404": {
          "description": "Not Found"
        },
        "500": {
          "description": "Internal Error"
        },
        "503": {
          "description": "Service Unavailable"
        }
      }
    }
  },
  "scripts_scriptid": {
    "get": {
      "tags": [ "General" ],
      "summary": " Returns a Script",
      "operationId": "get-scripts-id",
      "description": "This method will get the Script requested by ScriptId or ScriptName. <div class='tabs_wrapper' data-path='admin_list_getscriptsbyId.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "scriptId",
          "description": "Script Id",
          "type": "string",
          "in": "path",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "filePath": {
                "type": "string"
              },
              "scriptId": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "scriptContent": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "Invalid parameters"
        },
        "404": {
          "description": "Script Not Found"
        },
        "500": {
          "description": "Internal Error"
        },
        "501": {
          "description": "InControl.Net Service Internal Error"
        }
      }
    }
  },
  "scripts_search": {
    "get": {
      "tags": [ "General" ],
      "summary": " Search Script",
      "operationId": "get-scripts-search",
      "description": "This method searches for a script by name within a business unit. <div class='tabs_wrapper' data-path='admin_list_scriptssearch.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "query",
          "type": "integer",
          "name": "mediaType",
          "description": "Media Type of script."
        },
        {
          "in": "query",
          "type": "string",
          "name": "scriptName",
          "description": "Gets every script that contains scriptName value."
        },
        {
          "in": "query",
          "type": "boolean",
          "name": "includeInactive",
          "description": "Include Inactive scripts."
        },
        {
          "in": "query",
          "type": "boolean",
          "name": "includeTrusted",
          "description": "Include Trusted Business Unit."
        },
        {
          "in": "query",
          "type": "string",
          "name": "modStartDate",
          "description": "Start Date in string format."
        },
        {
          "in": "query",
          "type": "string",
          "name": "modEndDate",
          "description": "End Date in string format."
        },
        {
          "in": "query",
          "type": "string",
          "name": "toolName",
          "description": "Searchs in action's tool name and matches exactly toolName value."
        },
        {
          "in": "query",
          "type": "string",
          "name": "caption",
          "description": "Search in action's caption and gets every actions that contains the caption value."
        },
        {
          "in": "query",
          "type": "string",
          "name": "parameters",
          "description": "Search in action's parameters and gets every actions that contains the parameters value."
        },
        {
          "in": "query",
          "type": "string",
          "name": "fields",
          "description": "Define which supported fields will be returned, if it is empty all supported fields will be returned. masterID is always returned and actions returns all supported actions fields. With following format \"busNo,masterID,scriptName,status,mediaType,modifyDate,mUser,actions.actionId,actions.libraryId,actions.name,actions.label\""
        },
        {
          "in": "query",
          "type": "integer",
          "name": "skip",
          "description": "The number of records (not pages) to skip prior to the records to return."
        },
        {
          "in": "query",
          "type": "integer",
          "name": "top",
          "description": "The 'page size' or number of records to include in the response. The value should be less than or equal to 100, else it will be set to 100."
        },
        {
          "in": "query",
          "type": "string",
          "name": "orderBy",
          "description": "By default 'scriptName ASC'. Sort is limited to following fields \"busNo,masterID,scriptName,mediaType\"."
        }
      ],
      "responses": {
        "200": {
          "description": "SUCCESS",
          "schema": {
            "$ref": "#/definitions/searchScript"
          }
        },
        "400": {
          "description": "Invalid Params"
        },
        "401": {
          "description": "You do not have sufficient permissions"
        },
        "404": {
          "description": "Not Found"
        },
        "500": {
          "description": "Internal Error"
        },
        "501": {
          "description": "InControl.Net Service Internal Error"
        }
      }
    }
  },
  "scripts_kick": {
    "post": {
      "tags": [ "General" ],
      "summary": " Kick a locked script",
      "description": "This method will force the unlock of a script. <div class='tabs_wrapper' data-path='admin_general_postScriptsKick.html'></div>",
      "parameters": [
        {
          "name": "scriptPath",
          "in": "query",
          "description": "full path of script",
          "required": true,
          "style": "simple",
          "explode": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/kickScripts"
          }
        },
        "400": {
          "description": "<p>Invalid Parameters</p><p>Script Already Unlocked</p><p>You Cannot Kick Yourself From Script</p>"
        },
        "404": {
          "description": "ScriptNotFound"
        },
        "500": {
          "description": "Internal Error"
        },
        "501": {
          "description": "Service Internal Error"
        }
      }
    }
  },
  "scripts_historyByName": {
    "get": {
      "tags": [ "General" ],
      "summary": " Return a history of a script",
      "description": "This method will returns a history of a script by name. <div class='tabs_wrapper' data-path='admin_general_getScriptsHistoryByName.html'></div>",
      "parameters": [
        {
          "name": "scriptPath",
          "in": "query",
          "description": "full path of script",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "SUCCESS",
          "schema": {
            "$ref": "#/definitions/HistoryScripts"
          }
        },
        "400": {
          "description": "Invalid params"
        },
        "404": {
          "description": "Not found"
        },
        "500": {
          "description": "Internal error"
        },
        "501": {
          "description": "Incontrol.Net Service Internal Error"
        }
      }
    }
  },
  "script_scriptId_start": {
    "post": {
      "tags": [ "General" ],
      "summary": "Starts a Script by script ID",
      "operationId": "Script Start",
      "description": "This method will start a script that is identified by scriptId.  Currently this only supports channel related scripts such as Email, Phone, Chat etc.  You cannot start Generic or API scripts using this method.  We plan to provide this additional functionality in a later release. <br/><br/>This method also requires a Skill identified by skillId through which the script can be run.  In order for the skill to be valid the media type of the script must match the media type of the skill.<br/><br/>You can also send up to 20 separate values into the script using the parameters parameter separated by the | symbol.  These will be assigned to ascending parameters named P1, P2, P3... for access in Studio.<div class='tabs_wrapper' data-path='admin_contacts_postStartScripts.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "scriptId",
          "description": "Script Id",
          "required": true,
          "type": "integer",
          "in": "path"
        },
        {
          "name": "skillId",
          "description": "Skill Id required to run the Script",
          "required": true,
          "type": "integer",
          "format": "int32",
          "in": "query"
        },
        {
          "name": "startDate",
          "description": "ISO 8601 time for script to start in the future",
          "type": "string",
          "format": "date-time",
          "in": "query"
        },
        {
          "name": "parameters",
          "description": "A string of | delimited values i.e. \"value1|value2|...\"",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postScriptsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid Skill Id</p><p>Invalid Start Date</p><p>Invalid parameter length. Limited to 20 parameters and less than 32k</p>"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Script"
        }
      }
    }
  },
  "server_time": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns the server time in ISO 8601",
      "operationId": "getServerTime",
      "description": "This is an important operation, as all times specified in events and other API return data are relative to the server's clock, which may differ significantly from the agent's local machine clock. When calculating time elapsed or durations, use the server time as compared to last update times in API return values.<div class='tabs_wrapper' data-path='admin_contacts_getServerTime.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getServerTimeResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        }
      }
    }
  },
  "tags": {
    "post": {
      "tags": [ "General" ],
      "summary": "Creates a Tag",
      "operationId": "CreatesTag",
      "description": "This method will create a new Tag in the Business Unit.<div class='tabs_wrapper' data-path='admin_general_postTags.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "tagName",
          "description": "Tag Name",
          "type": "string",
          "in": "query",
          "required": true
        },
        {
          "name": "notes",
          "description": "Tag Notes",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postTagsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid tagName - {0}</p><p>Invalid notes - maximum length is 2000 characters</p>"
        }
      }
    },
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a list of Tags",
      "operationId": "ReturnsTags",
      "description": "This method will return the details of all Tags in the Business Unit.<div class='tabs_wrapper' data-path='admin_general_getTags.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/isActive"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getTagsResponse"
          }
        },
        "204": {
          "description": "No tags available"
        },
        "400": {
          "description": "Invalid isActive - '{0}', must be a boolean"
        }
      }
    }
  },
  "tags-tagId": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns a Tag",
      "operationId": "GetTagDetailsById",
      "description": "This method will return the details of a Tag identified by \"tagId\".<div class='tabs_wrapper' data-path='admin_general_getTagID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/tagId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getTagsResponse"
          }
        },
        "404": {
          "description": "Invalid tagId - {0}"
        }
      }
    },
    "put": {
      "tags": [ "General" ],
      "summary": "Updates a Tag",
      "operationId": "UpdatesTag",
      "description": "This method will update the details of a Tag identified by \"tagId\".<div class='tabs_wrapper' data-path='admin_general_putTagID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/tagId"
        },
        {
          "name": "tagName",
          "description": "Tag Name",
          "type": "string",
          "in": "query"
        },
        {
          "name": "notes",
          "description": "Tag Notes",
          "type": "string",
          "in": "query"
        },
        {
          "name": "isActive",
          "description": "Indicates if the Tag is active",
          "type": "boolean",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "304": {
          "description": "No changes made to tag '{0}'"
        },
        "400": {
          "description": "<p>Invalid tagName - {0}</p><p>Invalid notes - maximum length is 2000 characters</p><p>Invalid isActive - {0}</p>"
        },
        "403": {
          "description": "{0}"
        },
        "404": {
          "description": "Invalid tagId - {0}"
        }
      }
    }
  },
  "timezones": {
    "get": {
      "tags": [ "General" ],
      "summary": "Returns possible Timezones",
      "operationId": "Timezones",
      "description": "This method will return a list of possible timezones that can be used to interact with the API methods.  These values are derived from the Windows TimeZoneInfo.GetSystemTimeZones  call.<div class='tabs_wrapper' data-path='admin_general_getTimezones.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getTimeZonesResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Security privileges prevent access to data"
        }
      }
    }
  },
  "unavailable_codes": {
    "get": {
      "tags": [ "General" ],
      "summary": "Gets all outstates for the current business unit.",
      "operationId": "get-unavailable-codes",
      "description": "This method returns all of the unavailable codes that are configured for a business unit.  These unavailable codes can be used in the POST /agent-sessions/{sessionId}/state API as the reason value if setting the Agent's state to unavailable.<div class='tabs_wrapper' data-path='admin_contacts_getUnavailablecode.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "activeOnly",
          "description": "Set this to true if you want only active unavailable codes.  Set this to false to get all.",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getUnavailableCodesResponse"
          }
        },
        "400": {
          "description": "<p>Invalid activeOnly - must be boolean</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        }
      }
    },
    "post": {
      "tags": [ "General" ],
      "summary": "  Creates an unavailable code",
      "operationId": "post-unavailable-codes",
      "description": "This method will create an unavailable code and configure âpostContactâ and âagentTimeoutâ.<div class='tabs_wrapper' data-path='admin_general_postUnavailableCodes.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "unavailableCode",
          "description": "",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "unavailableCodeName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 25
              },
              "postContact": {
                "type": "boolean"
              },
              "agentTimeout": {
                "type": "integer",
                "minimum": 30.0,
                "maximum": 720.0
              },
              "isActive": {
                "type": "boolean"
              }
            },
            "required": [
              "unavailableCodeName"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "error": {
                "type": "string"
              },
              "error_Description": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": " Invalid unavailableCodeName - String '' is less than minimum length of 1."
        }
      }
    }
  },
  "definitions": {
    "parameters": {
      "scriptPath": {
        "name": "scriptPath",
        "in": "path",
        "description": "Full path of a script",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "body": {
        "name": "body",
        "in": "path",
        "description": "XML of a Script converted to Base64",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "lockScript": {
        "name": "lockScript",
        "in": "path",
        "description": "State to which you want to change the script, Send true to lock the Script and false to Unlock the script",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "boolean"
        }
      },
      "businessUnitId": {
        "name": "businessUnitId",
        "description": "Business Unit Id",
        "required": true,
        "type": "integer",
        "format": "int32",
        "in": "query"

      },
      "endDate": {
        "name": "endDate",
        "description": "This is an ISO 8601 date/time",
        "required": true,
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "countryId": {
        "name": "countryId",
        "description": "Country Id",
        "required": true,
        "type": "string",
        "in": "path"
      },
      "templateId": {
        "name": "templateId",
        "description": "Message Template Id",
        "required": true,
        "type": "integer",
        "in": "path"
      },
      "templateName": {
        "name": "templateName",
        "description": "Template Name",
        "type": "string",
        "in": "query"
      },
      "pathAgentId": {
        "name": "agentId",
        "description": "Agent Id",
        "required": true,
        "type": "integer",
        "in": "path"
      },
      "tagId": {
        "name": "tagId",
        "description": "Tag Id",
        "required": true,
        "allowMultiple": false,
        "type": "integer",
        "in": "path"
      },
      "suppressedContactId": {
        "name": "suppressedContactId",
        "description": "Suppressed Contact Id",
        "required": true,
        "allowMultiple": false,
        "type": "integer",
        "in": "path"
      },
      "startDate": {
        "name": "startDate",
        "description": "This is an ISO 8601 date/time",
        "required": true,
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "templateTypeId": {
        "name": "templateTypeId",
        "description": "Template Type Id",
        "type": "integer",
        "in": "query"
      },
      "isTemplateActive": {
        "name": "isActive",
        "description": "Sets the template active or inactive",
        "type": "boolean",
        "in": "query"
      },
      "smsContent": {
        "name": "smsContent",
        "description": "SMS Message Content",
        "type": "string",
        "in": "query"
      },
      "updatedSince": {
        "name": "updatedSince",
        "description": "Returns all records updated since ISO 8601 time",
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "updatedSinceNew": {
        "name": "updatedSinceNew",
        "description": "Returns all records updated since ISO 8601 time",
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "isActive": {
        "name": "isActive",
        "description": "Filters results based on active status",
        "type": "boolean",
        "in": "query"
      },
      "isActiveNew": {
        "name": "isActive",
        "description": "Filters results based on active status",
        "type": "boolean",
        "in": "query"
      },
      "searchString": {
        "name": "searchString",
        "description": "Used to filter results to objects with the value in key fields",
        "type": "string",
        "in": "query"
      },
      "searchStringNew": {
        "name": "searchString",
        "description": "Used to filter results to objects with the value in key fields",
        "type": "string",
        "in": "query"
      },
      "fields": {
        "name": "fields",
        "description": "Comma separated list of elements to return in response",
        "type": "string",
        "in": "query"
      },
      "fieldsNew": {
        "name": "fields",
        "description": "Comma separated list of elements to return in response",
        "type": "string",
        "in": "query"
      },
      "skip": {
        "name": "skip",
        "description": "Number of records to skip in the results",
        "type": "integer",
        "in": "query"
      },
      "skipNew": {
        "name": "skip",
        "description": "Number of records to skip in the results",
        "type": "integer",
        "in": "query"
      },
      "top": {
        "name": "top",
        "description": "Number of records to return in the results",
        "type": "integer",
        "in": "query"
      },
      "topNew": {
        "name": "top",
        "description": "Number of records to return in the results",
        "type": "integer",
        "in": "query"
      },
      "orderBy": {
        "name": "orderBy",
        "description": "Values used to order results before paginating them.  Can also specify \"asc\" or \"desc\" to specify direction for example \"field1 asc,field2 desc,...\".  Default is asc",
        "type": "string",
        "in": "query"
      },
      "orderByNew": {
        "name": "orderBy",
        "description": "Values used to order results before paginating them.  Can also specify \"asc\" or \"desc\" to specify direction for example \"field1 asc,field2 desc,...\".  Default is asc",
        "type": "string",
        "in": "query"
      }
    },
    "getScript": {
      "type": "object",
      "title": "Get saved script",
      "description": "Get saved script comprises the entire JSON document.",     
      "required": [
        "header",
        "actions",
        "properties",
        "branches"
      ],
      "properties": {
        "header": {
          "type": "object",
          "description": "Script information, lock info and libraryId",
          "properties": {
            "masterId": {
              "type": "integer",
              "description": "masterId of script"              
            },
            "scriptName": {
              "type": "string",
              "description": "Contains the complete route and script name"
            },
            "busNo": {
              "type": "integer",
              "description": "Business unit of logged user"
            },
            "mediaType": {
              "type": "integer",
              "description": "The mediaType schema"
            },
            "mediaTypeName": {
              "type": "string",
              "description": "string version of media type"
            },
            "variableRedaction": {
              "type": "string",
              "description": "The variableRedaction schema"
            },
            "libraryId": {
              "type": "string",
              "description": "The LibraryId schema",
              "default": "",
              "example": "8297F3AE-8D7F-496E-AF28-1461632F7AC7"
            },
            "lockInfo": {
              "type": "object",
              "description": "The lockInfo schema, info of user that locked the script, empty value if it is not locked",
              "properties": {
                "lockedName": {
                  "type": "string",
                  "description": "The lockedName schema",
                  "default": ""
                },
                "lockedId": {
                  "type": "string",
                  "description": "The lockedId schema",
                  "default": ""
                },
                "lockedDate": {
                  "type": "string",
                  "description": "The lockedDate schema",
                  "default": "",
                  "example": "11/29/2021 6:49:24 PM"
                }
              }
            },
            "nextActionId": {
              "type": "integer",
              "description": "The nextActionId schema, describes what will be the id of next action"
            },
            "status": {
              "type": "string",
              "description": "The status schema, CURR for current version and DISC for previous version",
              "example": [
                "DISC",
                "CURR"
              ]
            }
          }
        },
        "actions": {
          "type": "object",
          "description": "Map of each action of script. {actionId} must be numeric and is the identifier of the action",
          "default": {},
          "properties": {
            "{actionId}": {
              "type": "object",
              "description": "action values",
              "properties": {
                "actionId": {
                  "type": "integer",
                  "description": "actionId of action, it increases when an actions is added"
                 
                },
                "libraryId": {
                  "type": "string",
                  "description": "libraryId of script",
                  "example": "b2f794c5-0232-40e7-9830-76d573bf57d7"
                },
                "name": {
                  "type": "string",
                  "description": "system action name"
                },
                "version": {
                  "type": "integer",
                  "description": "System version of action"
                },
                "label": {
                  "type": "string",
                  "description": "label of action, can be modified from Studio"
                },
                "dependencyOrder": {
                  "type": "integer",
                  "description": "The dependencyOrder schema"
                },
                "implType": {
                  "type": "integer",
                  "description": "The implType schema"
                },
                "x": {
                  "type": "integer",
                  "description": "action's x position in script"
                },
                "y": {
                  "type": "integer",
                  "description": "action's y position in script"
                }
              }
            }
          }
        },
        "properties": {
          "type": "object",
          "description": "Map of map properties of each action in script. {actionId} must be numeric and is the identifier of the action",
          "default": {},
          "properties": {
            "{actionId}": {
              "type": "object",
              "description": "Map of each property of current action. {paramId} is index of property",
              "default": {},
              "properties": {
                "{paramId}": {
                  "type": "object",
                  "description": "property values",
                  "default": {},
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of property"
                    },
                    "value": {
                      "type": "string",
                      "description": "Value property",
                      "default": ""
                    },
                    "hidden": {
                      "type": "string",
                      "description": "Hidden from Studio",
                      "example": [
                        "True",
                        "False"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "branches": {
          "type": "object",
          "description": "Map of branches grouped by actionId. {actionId} must be numeric and is the identifier of the action",
          "default": {},
          "properties": {
            "{actionId}": {
              "type": "array",
              "description": "An array of all branches that start from action, identified by {actionId}",
              "items": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "integer",
                    "description": "to where action goes the branch",
                    "example": 2
                  },
                  "label": {
                    "type": "string",
                    "default": "",
                    "description": "system label of the branch",
                    "example": 2
                  },
                  "type": {
                    "type": "string",
                    "description": "type of the branch",
                    "default": "default"
                  },
                  "index": {
                    "type": "integer",
                    "description": "index value of the branch",
                    "example": 0
                  }
                }
              }
            }
          }
        }
      }
    },    
    "searchScript": {
      "type": "object",
      "required": [
        "totalRecords",
        "_links",
        "busNo",
        "scriptName",
        "scriptSearchDetails"
      ],
      "properties": {
        "totalRecords": {
          "type": "integer",
          "description": "The total records that matches with filters."
        },
        "_links": {
          "type": "object",
          "required": [
            "self",
            "next",
            "previous"
          ],
          "properties": {
            "self": {
              "type": "string",
              "description": "API to return current result."
            },
            "next": {
              "type": "string",
              "description": "API to get next result, null if result is last page."
            },
            "previous": {
              "type": "string",
              "description": "API to get previous result, null if result is first page."
            }
          },
          "additionalProperties": true
        },
        "busNo": {
          "type": "integer",
          "description": "Business Unit that requested the API."
        },
        "scriptName": {
          "type": "string",
          "description": "scriptName criteria that was sent. It will be null if it is not send."
        },
        "scriptSearchDetails": {
          "type": "array",
          "description": "Supported script fields that is returned by API. Every script contains actions. Result could be reduced with fields param.",
          "items": {
            "type": "object",
            "title": "script item",
            "properties": {
              "busNo": {
                "type": "integer",
                "description": "Business Unit of the script. It might be different that busNo that request, if includeTrusted is true."
              },
              "masterID": {
                "type": "integer",
                "description": "Id of the script, it is always returned even if it is not requested in fields param."
              },
              "scriptName": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "description": "CURR for active and DISC for inactive. DISC is returned if includeInactive is true."
              },
              "mediaType": {
                "type": "integer"
              },
              "modifyDate": {
                "type": "string"
              },
              "mUser": {
                "type": "string",
                "description": "User that modifies the field. It might be N/A."
              },
              "actions": {
                "type": "array",
                "description": "Every actions of script. It could filtered by toolName, caption and parameters params.",
                "items": {
                  "type": "object",
                  "title": "action item",
                  "properties": {
                    "actionId": {
                      "type": "integer"
                    },
                    "libraryId": {
                      "type": "string",
                      "example": "b2f794c5-0000-40e7-9830-76d573bf57d7"
                    },
                    "name": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postScriptResult": {
      "type": "object",
      "properties": {},
      "example": {
        "errorCount": 0,
        "results": [
          {
            "success": true,
            "libraryId": "215e5149-952f-46cb-b2d0-f451be9bb2e5"
          }
        ]
      }
    },
    "postScriptKickedResult": {
      "type": "object",
      "properties": {},
      "example": {
        "KickedByUser": "ariel@ariel.com",
        "Kickeddate": ""
      }
    },
    "postScript": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "scriptContent"
      ],
      "properties": {
        "scriptContent": {
          "type": "object",
          "title": "The scriptContent schema",
          "description": "An explanation about the purpose of this instance.",
          "required": [
            "header",
            "actions",
            "properties",
            "branches"
          ],
          "properties": {
            "header": {
              "type": "object",
              "title": "The header schema",
              "description": "An explanation about the purpose of this instance.",
              "required": [
                "scriptName",
                "busNo",
                "mediaType",
                "variableRedaction",
                "nextActionId"
              ],
              "properties": {
                "scriptName": {
                  "type": "string",
                  "title": "The scriptName schema",
                  "description": "An explanation about the purpose of this instance.",
                  "default": ""
                },
                "busNo": {
                  "type": "integer",
                  "title": "The busNo schema",
                  "description": "An explanation about the purpose of this instance.",
                  "default": 0
                },
                "mediaType": {
                  "type": "integer",
                  "title": "The mediaType schema",
                  "description": "An explanation about the purpose of this instance.",
                  "default": 0

                },
                "variableRedaction": {
                  "type": "string",
                  "title": "The variableRedaction schema",
                  "description": "An explanation about the purpose of this instance.",
                  "default": ""
                },
                "LibraryId": {
                  "type": "string",
                  "title": "The LibraryId schema",
                  "description": "An explanation about the purpose of this instance.",
                  "default": "8297F3AE-8D7F-496E-AF28-1461632F7AC7"
                },
                "lockInfo": {
                  "type": "object",
                  "title": "The lockInfo schema",
                  "description": "An explanation about the purpose of this instance.",
                  "default": {},
                  "example":
                  {
                    "lockedName": "",
                    "lockedId": "",
                    "lockedDate": ""
                  },
                  "properties": {
                    "lockedName": {
                      "type": "string",
                      "title": "The lockedName schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": "",
                      "example": [
                        ""
                      ]
                    },
                    "lockedId": {
                      "type": "string",
                      "title": "The lockedId schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": "",
                      "example": [
                        ""
                      ]
                    },
                    "lockedDate": {
                      "type": "string",
                      "title": "The lockedDate schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": "",
                      "example": [
                        ""
                      ]
                    }
                  },
                  "additionalProperties": true
                },
                "nextActionId": {
                  "type": "integer",
                  "title": "The nextActionId schema",
                  "description": "An explanation about the purpose of this instance.",
                  "default": 0
                }
              }
            },
            "actions": {
              "type": "object",
              "title": "The actions schema",
              "description": "{actionId} must be numeric and is the identifier of the action",
              "required": [
                "{actionId}"
              ],
              "properties": {
                "{actionId}": {
                  "type": "object",
                  "title": "The 2 schema",
                  "description": "An explanation about the purpose of this instance.",
                  "required": [
                    "actionId",
                    "libraryId",
                    "name",
                    "version",
                    "label",
                    "dependencyOrder",
                    "implType",
                    "x",
                    "y"
                  ],
                  "properties": {
                    "actionId": {
                      "type": "integer",
                      "title": "The actionId schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": 0
                    },
                    "libraryId": {
                      "type": "string",
                      "title": "The libraryId schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": "9015c095-98d9-441f-bf92-e90f5c5ed8c8"
                    },
                    "name": {
                      "type": "string",
                      "title": "The name schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": ""
                    },
                    "version": {
                      "type": "integer",
                      "title": "The version schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": 0
                    },
                    "label": {
                      "type": "string",
                      "title": "The label schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": ""
                    },
                    "dependencyOrder": {
                      "type": "string",
                      "title": "The dependencyOrder schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": ""
                    },
                    "implType": {
                      "type": "string",
                      "title": "The implType schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": ""
                    },
                    "x": {
                      "type": "integer",
                      "title": "The x schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": 0
                    },
                    "y": {
                      "type": "integer",
                      "title": "The y schema",
                      "description": "An explanation about the purpose of this instance.",
                      "default": 0
                    }
                  }

                }
              }

            },
            "properties": {
              "type": "object",
              "title": "The properties schema",
              "description": "{actionId} must be numeric and is the identifier of the action",
              "required": [
                "{actionId}"
              ],
              "properties": {
                "{actionId}": {
                  "type": "object",
                  "title": "The 2 schema",
                  "description": "An explanation about the purpose of this instance.",
                  "required": [
                    "0"
                  ],
                  "properties": {
                    "0": {
                      "type": "object",
                      "title": "The 0 schema",
                      "description": "An explanation about the purpose of this instance.",
                      "required": [
                        "name",
                        "value",
                        "hidden"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "title": "The name schema",
                          "description": "An explanation about the purpose of this instance.",
                          "default": ""
                        },
                        "value": {
                          "type": "string",
                          "title": "The value schema",
                          "description": "An explanation about the purpose of this instance.",
                          "default": ""
                        },
                        "hidden": {
                          "type": "string",
                          "title": "The hidden schema",
                          "description": "An explanation about the purpose of this instance.",
                          "default": ""
                        }
                      }

                    }
                  }

                }
              }
            },
            "branches": {
              "type": "object",
              "title": "The branches schema",
              "description": "{actionId} must be numeric and is the identifier of the action",
              "required": [
                "{actionId}"
              ],
              "properties": {
                "{actionId}": {
                  "type": "array",
                  "title": "The 2 schema",
                  "description": "An explanation about the purpose of this instance.",
                  "default": [],
                  "example": [
                    [
                      {
                        "to": 0,
                        "label": "",
                        "type": "default",
                        "index": 0
                      }
                    ]
                  ],
                  "items": {
                    "type": "object",
                    "title": "The first anyOf schema",
                    "description": "An explanation about the purpose of this instance.",
                    "default": {},
                    "example": [
                      {
                        "to": 0,
                        "label": "",
                        "type": "default",
                        "index": 0
                      }
                    ],
                    "required": [
                      "to",
                      "label",
                      "type",
                      "index"
                    ],
                    "properties": {
                      "to": {
                        "type": "integer",
                        "title": "The to schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": 0,
                        "example": [
                          0
                        ]
                      },
                      "label": {
                        "type": "string",
                        "title": "The label schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "example": [
                          ""
                        ]
                      },
                      "type": {
                        "type": "string",
                        "title": "The type schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": "",
                        "example": [
                          "default"
                        ]
                      },
                      "index": {
                        "type": "integer",
                        "title": "The index schema",
                        "description": "An explanation about the purpose of this instance.",
                        "default": 0,
                        "example": [
                          0
                        ]
                      }
                    },
                    "additionalProperties": true
                  }
                }
              }

            }
          }

        }
      }
    },
    "getUnavailableCodesResponse": {
      "title": " ",
      "description": "Collection of Unavailable Codes",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "teamId": {
          "type": "integer"
        },
        "teamName": {
          "type": "string"
        },
        "teamUuid": {
          "type": "string",
          "minLength": 36,
          "maxLength": 38
        },
        "unavailableCodes": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "UnavailableCode",
            "description": "Unavailable Code",
            "required": [ "OutStateId", "OutStateName", "IsAcw", "AgentTimeoutMins", "IsActive" ],
            "properties": {
              "OutStateId": {
                "type": "integer",
                "format": "int64",
                "description": "Out State Id"
              },
              "OutStateName": {
                "type": "string",
                "description": "Out State Description. When setting an agent session to an unavailable state, the actual state is always \"unavailable\", but you can supply the outstate description as well. Use this API call to retrieve possible outstates"
              },
              "IsAcw": {
                "type": "boolean",
                "description": "Whether or not the unavailable code is used as an ACW state"
              },
              "AgentTimeoutMins": {
                "type": "string",
                "description": "If IsACW is true, this field indicates how long the agent will stay in the ACW state before being automatically moved to the next state. Note that if ACW is required (a property of the skill), this field has no meaning and is undefined"
              },
              "IsActive": {
                "type": "boolean",
                "description": "Unavailable Code State"
              }
            }
          }
        }
      }
    },
    "SaveScript": {
      "type": "object",
      "properties": {
        "ScriptId": {
          "type": "string",
          "description": "The new ScriptId generated after the save was successful"
        }
      }
    },
    "getBrandingProfilesResponse": {
      "title": " ",
      "type": "object",
      "description": "",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "title": "BrandingProfile",
          "description": "Branding Profile",
          "required": [ "profileId", "profileName", "brandName", "adminEmail", "active", "subdomain", "stylePackName", "description", "coBrand" ],
          "properties": {
            "profileId": {
              "type": "integer",
              "description": "Branding Profile Id"
            },
            "profileName": {
              "type": "string",
              "description": "Branding Profile Name"
            },
            "brandName": {
              "type": "string",
              "description": "Profile Brand Name"
            },
            "adminEmail": {
              "type": "string",
              "description": "Admin Email Address"
            },
            "active": {
              "type": "boolean",
              "description": "Branding Profile Active State"
            },
            "subdomain": {
              "type": "string",
              "description": "Branding Profile Subdomain"
            },
            "stylePackName": {
              "type": "string",
              "description": "Name of which style pack should be used"
            },
            "coBrand": {
              "type": "boolean",
              "description": "Indicates if the inContact cobranding image should be used"
            },
            "centralLogo": {
              "type": "base64",
              "format": "int64",
              "description": "Base64 encoded image, only returned if available"
            },
            "centralFavicon": {
              "type": "base64",
              "description": "Base64 encoded image, only returned if available"
            },
            "agentLogo": {
              "type": "base64",
              "description": "Base64 encoded image, only returned if available"
            },
            "chatLogo": {
              "type": "base64",
              "description": "Base64 encoded image, only returned if available"
            },
            "sfdcAgentLogo": {
              "type": "base64",
              "description": "Base64 encoded image, only returned if available"
            },
            "maxAgentLogo": {
              "type": "base64",
              "description": "Base64 encoded image, only returned if available"
            },
            "maxGlanceLogo": {
              "type": "base64",
              "description": "Base64 encoded image, only returned if available"
            }
          }
        }
      }
    },
    "getBusinessUnitResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "businessUnits": {
          "type": "array",
          "items": {
            "title": "BusinessUnit",
            "description": "Business Unit",
            "type": "object",
            "properties": {
              "businessUnitId": {
                "type": "integer",
                "description": "Business Unit Id"
              },
              "businessUnitName": {
                "type": "string",
                "description": "Business Unit Name"
              },
              "globalCallerId": {
                "type": "string",
                "description": "Default Caller ID for outbound contacts"
              },
              "phoneTimeout": {
                "type": "integer",
                "description": "Timeout in seconds for outbound contacts"
              },
              "userSessionTimeout": {
                "type": "integer",
                "description": "Timeout in seconds for Agent sessions"
              },
              "startDayOfWeek": {
                "type": "integer",
                "description": "Integer indicator of which day to use as start of the week. 1 is Monday, 7 is Sunday"
              },
              "defaultTimeZone": {
                "type": "string",
                "description": "Default Time Zone for Business Unit"
              },
              "agentsUseDefaultTimeZone": {
                "type": "boolean",
                "description": "Indicates if Agent must use defaultTimeZone"
              },
              "maxScriptHistory": {
                "type": "integer",
                "description": "Maximum number of script versions"
              },
              "authGUID": {
                "type": "string",
                "description": "Business Unit GUID"
              },
              "coBrand": {
                "type": "boolean",
                "description": "Co-branding enabled or disabled"
              },
              "coBrandProfileId": {
                "type": "integer",
                "description": "ID of Co-branding profile"
              },
              "coBrandProfileName": {
                "type": "string",
                "description": "Name of Co-branding profile"
              },
              "connectivityType": {
                "type": "string",
                "description": "Description of connectivity type"
              },
              "clientConnectorPort": {
                "type": "integer",
                "description": "Description of connectivity type"
              },
              "callSuppression": {
                "type": "boolean",
                "description": "Call Suppression enabled or disabled"
              },
              "priorityBasedBlending": {
                "type": "boolean",
                "description": "Priority blending enabled or disabled"
              },
              "enableFiltering": {
                "type": "boolean",
                "description": "Filtering enabled or disabled"
              },
              "allowPredictiveDialing": {
                "type": "boolean",
                "description": "Predictive Dialing enabled or disabled"
              },
              "enableTrueBlending": {
                "type": "boolean",
                "description": "True blending enabled or disabled"
              },
              "enableSkillAbandonRate": {
                "type": "boolean",
                "description": "Skill abandon rate enabled or disabled"
              },
              "abandonRateScope": {
                "type": "integer",
                "description": "Abandon Rate Scope"
              },
              "defaultConfirmationDeliveryModeId": {
                "type": "integer",
                "description": "Default Confirmation Delivery Mode Id"
              },
              "defaultConfirmationDeliveryMode": {
                "type": "string",
                "description": "Default Confirmation Delivery Mode Description"
              },
              "defaultComplianceRecordTypeId": {
                "type": "integer",
                "description": "Default Compliance Record Type Id"
              },
              "defaultComplianceRecordType": {
                "type": "string",
                "description": "Default Compliance Record Type Description"
              },
              "defaultContactExpirationMinutes": {
                "type": "integer",
                "description": "Default Contact Expiration Minutes"
              },
              "daysUntilListSourceIsFlaggedForDeletion": {
                "type": "integer",
                "description": "Days until List Source is Flagged for Deletion"
              },
              "scriptNamespace": {
                "type": "string",
                "description": "Script Namespace"
              },
              "apiPublishedLimit": {
                "type": "integer",
                "description": "Number of daily REST API calls allowed before an Event is triggered.  This Event can be managed in Central through the Event Manager to send an email alert"
              },
              "concurrentPortLimit": {
                "type": "integer",
                "description": "Number of concurrent ports allowed"
              },
              "ivrSurveyCallbackLimit": {
                "type": "integer",
                "description": ""
              },
              "stationLimit": {
                "type": "integer",
                "description": "Station Limit"
              },
              "userLimit": {
                "type": "integer",
                "description": "User Limit"
              },
              "concurrentAgentLimit": {
                "type": "integer",
                "description": "Number of concurrent Agents allowed"
              },
              "outboundPortLimit": {
                "type": "integer",
                "description": "Maximum number of outbound ports allowed"
              },
              "agentlessPortLimit": {
                "type": "integer",
                "description": "Maximum number of Agentless outbound ports allowed"
              },
              "maxConferenceParties": {
                "type": "integer",
                "description": "Maximum number of legs allowed in a conference"
              },
              "custom1": {
                "type": "string",
                "description": "Custom value 1"
              },
              "custom2": {
                "type": "string",
                "description": "Custom value 2"
              },
              "custom3": {
                "type": "string",
                "description": "Custom value 3"
              },
              "custom4": {
                "type": "string",
                "description": "Custom value 4"
              },
              "custom5": {
                "type": "string",
                "description": "Custom value 5"
              },
              "isActive": {
                "type": "boolean"
              },
              "presenceMasterId": {
                "type": "integer",
                "description": "Indicates if inContact or an external source is the presence master.  1 - inContact, 2 - Skype for Business, empty when presence sync is not enabled"
              },
              "tenantId": {
                "type": "string"
              },
              "parentTenantId": {
                "type": "string"
              },
              "features": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "integer"
                    },
                    "productDescription": {
                      "type": "string"
                    },
                    "isEnabled": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "fileExtensions": {
                "type": "array",
                "title": "FileExtensions",
                "description": "Collection of FileExtensions",
                "items": {
                  "title": "FileExtension",
                  "type": "object",
                  "description": "File Extension",
                  "required": [ "extension" ],
                  "properties": {
                    "extension": {
                      "type": "string",
                      "description": "File extension allowed for Email, file upload etc..."
                    }
                  }
                }
              },
              "timeZones": {
                "type": "array",
                "title": "Timezones",
                "description": "Collection of Timezones",
                "items": {
                  "title": "Timezone",
                  "description": "Timezone",
                  "required": [ "displayName", "standardName" ],
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Name to display to Agent"
                    },
                    "standardName": {
                      "type": "string",
                      "description": "Common name of Timezone"
                    }
                  }
                }
              },
              "parentBusinessUnitID": {
                "type": "integer"
              },
              "isIntegratedTenant": {
                "type": "boolean"
              },
              "niceEngageConfigId": {
                "type": "integer"
              },
              "niceWFMConfigID": {
                "type": "integer"
              },
              "niceQMTenantID": {
                "type": "integer"
              },
              "niceWFMTenantId": {
                "type": "integer"
              },
              "ieX_CustomerName": {
                "type": "string"
              },
              "isMultiContactHandling": {
                "type": "boolean"
              },
              "enableMaxReleasePreview": {
                "type": "boolean"
              },
              "isVFMEnabled": {
                "type": "boolean"
              },
              "maxClientVersion": {
                "type": "integer"
              },
              "permitPerAgentVersioning": {
                "type": "boolean"
              },
              "permitDevVersion": {
                "type": "boolean"
              },
              "defaultToPrevious": {
                "type": "boolean"
              },
              "emergencyCallNotificationEmail": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getBusinessUnitMaxsettings": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "maxConferenceParties": {
          "type": "integer"
        },
        "deleteCommitmentId": {
          "type": "integer"
        },
        "deleteCommitmentString": {
          "type": "string"
        },
        "persistentPanels": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "persistentPanelId": {
                "type": "integer"
              },
              "persistentPanelURI": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getdispositionsResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "businessUnitId": {
          "type": "integer"
        },
        "totalRecords": {
          "type": "integer"
        },
        "dispositions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dispositionId": {
                "type": "integer"
              },
              "dispositionName": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "lastUpdated": {
                "type": "string"
              },
              "classificationId": {
                "type": "string"
              },
              "systemOutcome": {
                "type": "string"
              },
              "isPreviewDisposition": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "postdispositionsResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "errorCount": {
          "type": "integer"
        },
        "dispositionResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dispositionId": {
                "type": "integer"
              },
              "success": {
                "type": "boolean"
              },
              "error": {
                "type": "string"
              }
            },
            "required": [
              "dispositionId"
            ]
          }
        }
      }
    },
    "postdispositionsResponseNew": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "errorCount": {
          "type": "integer"
        },
        "dispositionResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dispositionId": {
                "type": "integer"
              },
              "success": {
                "type": "boolean"
              },
              "error": {
                "type": "string"
              }
            },
            "required": [
              "dispositionId"
            ]
          }
        }
      }
    },
    "postdispositionsRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "dispositions": {
          "type": "array",
          "items": {
            "type": "object",

            "properties": {
              "dispositionName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "isPreviewDisposition": {
                "type": "boolean",
                "default": false
              },
              "classificationId": {
                "type": "integer",
                "nullable": true,
                "default": 1
              }
            },
            "required": [
              "dispositionName",
              "isPreviewDisposition",
              "classificationId"
            ]
          }
        }
      },
      "required": [
        "dispositions"
      ]
    },
    "getCountriesResponse": {
      "title": " ",
      "description": "Collection of Countries",
      "type": "object",
      "required": [ "countries" ],
      "properties": {
        "countries": {
          "type": "array",
          "items": {
            "title": "Country",
            "description": "Country",
            "required": [ "countryId", "countryCode", "countryName" ],
            "properties": {
              "countryId": {
                "type": "integer",
                "description": "Country Id"
              },
              "countryCode": {
                "type": "string",
                "description": "Country Code (2 characters)"
              },
              "countryName": {
                "type": "string",
                "description": "Country Name"
              }
            }
          }
        }
      }
    },
    "getCountryStatesResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "title": "ResultSet",
          "description": "Result Set",
          "required": [ "countryId", "countryName" ],
          "properties": {
            "countryId": {
              "type": "integer",
              "description": "Country Id"
            },
            "countryName": {
              "type": "string",
              "description": "Country Name"
            },
            "states": {
              "type": "array",
              "description": "Collection of States",
              "items": {
                "title": "State",
                "description": "State",
                "required": [ "stateId", "stateName", "stateCode" ],
                "properties": {
                  "stateId": {
                    "type": "integer",
                    "description": "State or Province Id"
                  },
                  "stateName": {
                    "type": "string",
                    "description": "State or Province Name"
                  },
                  "stateCode": {
                    "type": "string",
                    "description": "2 character code for the State or Province"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getDataDefinitionsDataTypesResponse": {
      "title": " ",
      "type": "object",
      "required": [ "dataTypes" ],
      "properties": {
        "dataTypes": {
          "type": "array",
          "description": "Collection of Data Types",
          "items": {
            "title": "DataType",
            "description": "Data Type",
            "required": [ "dataTypeId", "dataTypeName" ],
            "properties": {
              "dataTypeId": {
                "type": "integer",
                "description": "Data Type Id"
              },
              "dataTypeName": {
                "type": "string",
                "description": "Data Type Name"
              }
            }
          }
        }
      }
    },
    "getDispositionsResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "businessUnitId": {
          "type": "integer"
        },
        "totalRecords": {
          "type": "integer"
        },
        "dispositions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dispositionId": {
                "type": "integer"
              },
              "dispositionName": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "lastUpdated": {
                "type": "string"
              },
              "classificationId": {
                "type": "string"
              },
              "systemOutcome": {
                "type": "string"
              },
              "isPreviewDisposition": {
                "type": "boolean"
              }
            }
          }
        }
      }

    },
    "getFilesResponse": {
      "title": " ",
      "type": "object",
      "description": "Files",
      "required": [ "files" ],
      "properties": {
        "files": {
          "title": "File",
          "type": "object",
          "description": "The Named File",
          "required": [ "file", "fileName" ],
          "properties": {
            "file": {
              "type": "string",
              "format": "base64",
              "description": "File Content (Base64 encoded)"
            },
            "fileName": {
              "type": "string",
              "description": "File Name"
            }
          }
        }
      }
    },
    "getFeedbackCategoriesAndPrioritiesResponse": {
      "title": " ",
      "description": "Feedback",
      "required": [ "CategoriesAndPriorities" ],
      "properties": {
        "categoriesAndPriorities": {
          "title": "Feedback",
          "description": "Feedback",
          "type": "object",
          "required": [ "feedbackCategories", "feedbackPriorities" ],
          "properties": {
            "feedbackCategories": {
              "type": "array",
              "description": "Collection of Feedback Categories",
              "items": {
                "title": "FeedbackCategory",
                "description": "Feedback Category",
                "type": "object",
                "required": [ "title", "name" ],
                "properties": {
                  "title": {
                    "type": "integer",
                    "description": "Feedback Category Id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Feedback Category Name"
                  }
                }
              },
              "required": true
            },
            "feedbackPriorities": {
              "type": "array",
              "description": "Collection of Feedback Priorities",
              "items": {
                "title": "FeedbackPriority",
                "description": "Feedback priority",
                "required": [ "name" ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Feedback Priority Name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getHiringSourcesResponse": {
      "title": " ",
      "description": "Hiring Sources",
      "required": [ "sources" ],
      "properties": {
        "sources": {
          "type": "array",
          "description": "Collection of Hiring Sources",
          "items": {
            "title": "HiringSource",
            "description": "Hiring Source",
            "type": "object",
            "required": [ "sourceId", "sourceName" ],
            "properties": {
              "sourceId": {
                "type": "integer",
                "description": "Hiring Source Id"
              },
              "sourceName": {
                "type": "string",
                "description": "Hiring Source Name"
              }
            }
          }
        }
      }
    },
    "postHiringSourcesResponse": {
      "title": " ",
      "required": [ "sourceId" ],
      "properties": {
        "sourceId": {
          "type": "integer",
          "description": "Hiring Source Id"
        }
      }
    },
    "getHoursOfOperationsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "title": "ResultSet",
          "description": "Result Set",
          "required": [ "businessUnitId", "totalRecords", "lastPollTime", "hoursOfOperationProfiles" ],
          "properties": {
            "_links": {
              "schema": {
                "title": "_links",
                "description": "Links used to parse paginated response",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to same page of results"
                  },
                  "next": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to next page of results"
                  },
                  "previous": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to previous page of results"
                  }
                }
              }
            },
            "businessUnitId": {
              "type": "integer",
              "format": "int64",
              "description": "Business Unit Id"
            },
            "totalRecords": {
              "type": "integer",
              "description": "Total number of records in the result"
            },
            "lastPollTime": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
            },
            "hoursOfOperationProfiles": {
              "type": "array",
              "description": "",
              "items": {
                "title": "HoursOfOperationProfile",
                "description": "Collection of Hours of Operation Profiles",
                "required": [ "profileId", "profileName", "description", "notes", "overrideBranch", "overrideExpirationDate", "lastUpdateTime", "days" ],
                "properties": {
                  "profileId": {
                    "type": "integer",
                    "description": "Hours of Operation Profile Id"
                  },
                  "profileName": {
                    "type": "string",
                    "description": "Hours of Operation Profile Name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Hours of Operation Profile Description"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Hours of Operation Profile Notes"
                  },
                  "overrideBranch": {
                    "type": "string",
                    "description": "Name of configured Override Branch in profile"
                  },
                  "overrideExpirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO 8601 date when override will expire"
                  },
                  "lastUpdateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO 8601 date when profile was last updated"
                  },
                  "days": {
                    "type": "array",
                    "description": "Collection of Days",
                    "items": {
                      "title": "Day",
                      "description": "Day",
                      "required": [ "day", "openTime", "closeTime", "hasAdditionalHours", "additionalOpenTime", "additionalCloseTime", "isClosedAllDay" ],
                      "properties": {
                        "day": {
                          "type": "string",
                          "description": "Name of day"
                        },
                        "openTime": {
                          "type": "string",
                          "description": "Time of opening in 24-hour clock"
                        },
                        "closeTime": {
                          "type": "string",
                          "description": "Time of closing in 24-hour clock"
                        },
                        "hasAdditionalHours": {
                          "type": "boolean",
                          "description": "Any additional hours configured"
                        },
                        "additionalOpenTime": {
                          "type": "string",
                          "description": "Time of additional opening in 24-hour clock"
                        },
                        "additionalCloseTime": {
                          "type": "string",
                          "description": "Time of additional closing in 24-hour clock"
                        },
                        "isClosedAllDay": {
                          "type": "boolean",
                          "description": "Is profile closed for entire day"
                        }
                      }
                    }
                  },
                  "holidays": {
                    "type": "array",
                    "description": "Collection of Holidays",
                    "items": {
                      "title": "Day",
                      "description": "Day",
                      "required": [ "day", "openTime", "closeTime", "hasAdditionalHours", "additionalOpenTime", "additionalCloseTime", "isClosedAllDay" ],
                      "properties": {
                        "day": {
                          "type": "string",
                          "description": "Name of day"
                        },
                        "openTime": {
                          "type": "string",
                          "description": "Time of opening in 24-hour clock"
                        },
                        "closeTime": {
                          "type": "string",
                          "description": "Time of closing in 24-hour clock"
                        },
                        "hasAdditionalHours": {
                          "type": "boolean",
                          "description": "Any additional hours configured"
                        },
                        "additionalOpenTime": {
                          "type": "string",
                          "description": "Time of additional opening in 24-hour clock"
                        },
                        "additionalCloseTime": {
                          "type": "string",
                          "description": "Time of additional closing in 24-hour clock"
                        },
                        "isClosedAllDay": {
                          "type": "boolean",
                          "description": "Is profile closed for entire day"
                        }
                      }
                    }
                  },
                  "scripts": {
                    "type": "array",
                    "description": "Collection of Scripts",
                    "items": {
                      "title": "Script",
                      "description": "Script",
                      "required": [ "scriptId", "scriptName" ],
                      "properties": {
                        "scriptId": {
                          "type": "integer",
                          "description": "Script Id"
                        },
                        "scriptName": {
                          "type": "string",
                          "description": "Script Name"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getHoursOfOperationsProfileResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "title": "ResultSet",
          "description": "Result Set",
          "required": [ "hoursOfOperationProfiles" ],
          "properties": {
            "hoursOfOperationProfiles": {
              "type": "array",
              "description": "",
              "items": {
                "title": "HoursOfOperationProfile",
                "description": "Collection of Hours of Operation Profiles",
                "required": [ "profileId", "profileName", "description", "notes", "overrideBranch", "overrideExpirationDate", "lastUpdateTime", "days" ],
                "properties": {
                  "profileId": {
                    "type": "integer",
                    "description": "Hours of Operation Profile Id"
                  },
                  "profileName": {
                    "type": "string",
                    "description": "Hours of Operation Profile Name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Hours of Operation Profile Description"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Hours of Operation Profile Notes"
                  },
                  "overrideBranch": {
                    "type": "string",
                    "description": "Name of configured Override Branch in profile"
                  },
                  "overrideExpirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO 8601 date when override will expire"
                  },
                  "lastUpdateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO 8601 date when profile was last updated"
                  },
                  "days": {
                    "type": "array",
                    "description": "Collection of Days",
                    "items": {
                      "title": "Day",
                      "description": "Day",
                      "required": [ "day", "openTime", "closeTime", "hasAdditionalHours", "additionalOpenTime", "additionalCloseTime", "isClosedAllDay" ],
                      "properties": {
                        "day": {
                          "type": "string",
                          "description": "Name of day"
                        },
                        "openTime": {
                          "type": "string",
                          "description": "Time of opening in 24-hour clock"
                        },
                        "closeTime": {
                          "type": "string",
                          "description": "Time of closing in 24-hour clock"
                        },
                        "hasAdditionalHours": {
                          "type": "boolean",
                          "description": "Any additional hours configured"
                        },
                        "additionalOpenTime": {
                          "type": "string",
                          "description": "Time of additional opening in 24-hour clock"
                        },
                        "additionalCloseTime": {
                          "type": "string",
                          "description": "Time of additional closing in 24-hour clock"
                        },
                        "isClosedAllDay": {
                          "type": "boolean",
                          "description": "Is profile closed for entire day"
                        }
                      }
                    }
                  },
                  "holidays": {
                    "type": "array",
                    "description": "Collection of Holidays",
                    "items": {
                      "title": "Day",
                      "description": "Day",
                      "required": [ "day", "openTime", "closeTime", "hasAdditionalHours", "additionalOpenTime", "additionalCloseTime", "isClosedAllDay" ],
                      "properties": {
                        "day": {
                          "type": "string",
                          "description": "Name of day"
                        },
                        "openTime": {
                          "type": "string",
                          "description": "Time of opening in 24-hour clock"
                        },
                        "closeTime": {
                          "type": "string",
                          "description": "Time of closing in 24-hour clock"
                        },
                        "hasAdditionalHours": {
                          "type": "boolean",
                          "description": "Any additional hours configured"
                        },
                        "additionalOpenTime": {
                          "type": "string",
                          "description": "Time of additional opening in 24-hour clock"
                        },
                        "additionalCloseTime": {
                          "type": "string",
                          "description": "Time of additional closing in 24-hour clock"
                        },
                        "isClosedAllDay": {
                          "type": "boolean",
                          "description": "Is profile closed for entire day"
                        }
                      }
                    }
                  },
                  "skills": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "skillId": {
                          "type": "integer"
                        },
                        "skillName": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "scripts": {
                    "type": "array",
                    "description": "Collection of Scripts",
                    "items": {
                      "title": "Script",
                      "description": "Script",
                      "required": [ "scriptId", "scriptName" ],
                      "properties": {
                        "scriptId": {
                          "type": "integer",
                          "description": "Script Id"
                        },
                        "scriptName": {
                          "type": "string",
                          "description": "Script Name"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getLocationsResponse": {
      "title": " ",
      "description": "Result Set",
      "required": [ "locations" ],
      "properties": {
        "locations": {
          "type": "array",
          "description": "Collection of Locations",
          "items": {
            "title": "Location",
            "description": "Location",
            "required": [ "locaitonId", "locationName" ],
            "properties": {
              "locationId": {
                "type": "integer",
                "description": "Location Id"
              },
              "locationName": {
                "type": "string",
                "description": "Location Name"
              },
              "agents": {
                "type": "array",
                "description": "Collection of Agents",
                "items": {
                  "title": "Agent",
                  "description": "Agent",
                  "required": [ "agentId", "firstName", "lastName" ],
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "Agent Id"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "Agent First Name"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Agent Last Name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getMediaTypesResponse": {
      "title": " ",
      "description": "Result Set",
      "required": [ "mediaTypes" ],
      "properties": {
        "mediaTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "mediaTypeName": {
                "type": "string"
              },
              "mediaTypeId": {
                "type": "integer"
              },
              "subTypes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "subTypeId": {
                      "type": "integer"
                    },
                    "subTypeName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postMessageTemplatesResponse": {
      "title": " ",
      "required": [ "templateId" ],
      "properties": {
        "templateId": {
          "type": "integer",
          "description": "Message Template Id"
        }
      }
    },
    "getMessageTemplatesResponse": {
      "title": " ",
      "type": "object",
      "required": [ "messageTemplates" ],
      "properties": {
        "messageTemplates": {
          "type": "array",
          "description": "Collection of Message Templates",
          "items": {
            "title": "MessageTemplate",
            "description": "Message Template",
            "required": [ "templateId", "templateName", "templateTypeId", "templateTypeDesc", "isActive", "smsContent" ],
            "properties": {
              "templateId": {
                "type": "integer",
                "description": "Message Template Id"
              },
              "templateName": {
                "type": "string",
                "description": "Message Template Name"
              },
              "templateTypeId": {
                "type": "integer",
                "description": "Message Template Type Id"
              },
              "templateTypeDesc": {
                "type": "string",
                "description": "Message Template Type Description"
              },
              "isActive": {
                "type": "boolean",
                "description": "Indicates if the template is active"
              },
              "isHTML": {
                "type": "boolean",
                "description": " Indicates if body is HTML formatted string",
                "required": true
              },
              "ccAddress": {
                "type": "string",
                "description": "Email addresses in the CC field of email.",
                "required": true
              },
              "bccAddress": {
                "type": "string",
                "description": " Email addresses in the BCC field of email.",
                "required": true
              },
              "replyToAddress": {
                "type": "string",
                "description": "Email addresses in the reply field of email.",
                "required": true
              },
              "fromName": {
                "type": "string",
                "description": "Name in the from field of the email",
                "required": true
              },
              "fromAddress": {
                "type": "string",
                "description": "Email addresses in the from field of email.",
                "required": true
              },
              "body": {
                "type": "string",
                "description": " Content of the SMS or Email message.  Changed from smsContent in v7.0",
                "required": true
              },
              "subject": {
                "type": "string",
                "description": " Subject of the Email message",
                "required": true
              }
            }
          }
        }
      }
    },
    "getMessageTemplateResponse": {
      "title": " ",
      "type": "object",
      "required": [ "messageTemplate" ],
      "properties": {
        "messageTemplate": {
          "title": "MessageTemplate",
          "type": "object",
          "description": "Message Template",
          "required": [ "templateId", "templateName", "templateTypeId", "templateTypeDesc", "isActive", "smsContent" ],
          "properties": {
            "templateId": {
              "type": "integer",
              "description": "Message Template Id"
            },
            "templateName": {
              "type": "string",
              "description": "Message Template Name"
            },
            "templateTypeId": {
              "type": "integer",
              "description": "Message Template Type Id"
            },
            "templateTypeDesc": {
              "type": "string",
              "description": "Message Template Type Description"
            },
            "isActive": {
              "type": "boolean",
              "description": "Indicates if the template is active"
            },
            "isHTML": {
              "type": "boolean",
              "description": "Indicates if body is HTML formatted string",
              "required": true
            },
            "ccAddress": {
              "type": "string",
              "description": " Email addresses in the CC field of email.",
              "required": true
            },
            "bccAddress": {
              "type": "string",
              "description": " Email addresses in the BCC field of email.",
              "required": true
            },
            "replyToAddress": {
              "type": "string",
              "description": "Email addresses in the reply field of email.",
              "required": true
            },
            "fromName": {
              "type": "string",
              "description": "Name in the from field of the email",
              "required": true
            },
            "fromAddress": {
              "type": "string",
              "description": "Email addresses in the from field of email.",
              "required": true
            },
            "body": {
              "type": "string",
              "description": " Content of the SMS or Email message.",
              "required": true
            },
            "subject": {
              "type": "string",
              "description": " Subject of the Email message",
              "required": true
            }
          }
        }
      }
    },
    "getPermissionsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "permissions" ],
      "properties": {
        "permissions": {
          "type": "array",
          "description": "Collection of Permissions",
          "items": {
            "title": "permission",
            "description": "Permission",
            "required": [ "BusinessUnitId", "Key", "Value" ],
            "properties": {
              "BusinessUnitId": {
                "type": "integer",
                "description": "Business Unit Id"
              },
              "Key": {
                "type": "string",
                "description": "Permission Name"
              },
              "Value": {
                "type": "string",
                "description": "Permission Action"
              }
            }
          }
        }
      }
    },
    "getPhoneCodesResponse": {
      "title": " ",
      "type": "object",
      "required": [ "phoneCodes" ],
      "properties": {
        "phoneCodes": {
          "type": "array",
          "description": "Collection of Phone Codes",
          "items": {
            "title": "PhoneCode",
            "description": "Phone Code",
            "required": [ "transportCode", "transportTypeId", "transportTypeDesc", "note" ],
            "properties": {
              "transportCode": {
                "type": "integer",
                "description": "Transport Code"
              },
              "transportTypeId": {
                "type": "integer",
                "description": "Transport Type Id"
              },
              "transportTypeDesc": {
                "type": "string",
                "description": "Transport Type Description"
              },
              "note": {
                "type": "string",
                "description": "Transport Type Note"
              }
            }
          }
        }
      }
    },
    "getPointsOfContactResponse": {
      "title": " ",
      "type": "object",
      "required": [ "pointsOfContact" ],
      "properties": {
        "businessUnitId": {
          "type": "integer"
        },
        "lastPollTime": {
          "type": "string",
          "format": "date-time"
        },
        "pointsOfContact": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "businessUnitId": {
                "type": "integer"
              },
              "contactAddress": {
                "type": "string"
              },
              "contactCode": {
                "type": "integer"
              },
              "contactDescription": {
                "type": "string"
              },
              "defaultSkillId": {
                "type": "integer"
              },
              "isActive": {
                "type": "boolean"
              },
              "mediaTypeId": {
                "type": "integer"
              },
              "subType": {
                "type": "string"
              },
              "mediaTypeName": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "outboundSkill": {
                "type": "boolean"
              },
              "scriptName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "getSecurityProfilesResponse": {
      "title": " ",
      "type": "object",
      "required": [ "profiles" ],
      "properties": {
        "profiles": {
          "type": "array",
          "description": "Collection of Security Profiles",
          "items": {
            "title": "SecurityProfile",
            "description": "Security Profile",
            "required": [ "profileId", "profileName", "description", "isActive", "isExternal", "pwUseRandom", "pwMinLength", "pwMinLower", "pwMinUpper", "pwMinNumeric", "pwMinNonAlpha" ],
            "properties": {
              "profileId": {
                "type": "integer",
                "description": "Profile Id"
              },
              "profileName": {
                "type": "string",
                "description": "Profile Name"
              },
              "description": {
                "type": "string",
                "description": "Profile Description"
              },
              "isActive": {
                "type": "boolean",
                "description": "Indicates if the profile is active"
              },
              "isExternal": {
                "type": "boolean",
                "description": "Indicates if the profile is external"
              },
              "pwUseRandom": {
                "type": "boolean",
                "description": "Indicates if the password is generated randomly"
              },
              "pwMinLength": {
                "type": "integer",
                "description": "Minimum length of password"
              },
              "pwMinLower": {
                "type": "integer",
                "description": "Minimum number of lower case characters in the password"
              },
              "pwMinUpper": {
                "type": "integer",
                "description": "Minimum number of upper case characters in the password"
              },
              "pwMinNumeric": {
                "type": "integer",
                "description": "Minimum number of numeric characters in the password"
              },
              "pwMinNonAlpha": {
                "type": "integer",
                "description": "Minimum number of non alphabetic characters in the password"
              }
            }
          }
        }
      }
    },
    "getSecurityProfileResponse": {
      "title": " ",
      "type": "object",
      "required": [ "profile" ],
      "properties": {
        "profile": {
          "title": "SecurityProfile",
          "type": "object",
          "description": "Security Profile",
          "required": [ "profileId", "profileName", "description", "isActive", "isExternal", "pwUseRandom", "pwMinLength", "pwMinLower", "pwMinUpper", "pwMinNumeric", "pwMinNonAlpha" ],
          "properties": {
            "profileId": {
              "type": "integer",
              "description": "Profile Id"
            },
            "profileName": {
              "type": "string",
              "description": "Profile Name"
            },
            "description": {
              "type": "string",
              "description": "Profile Description"
            },
            "isActive": {
              "type": "boolean",
              "description": "Indicates if the profile is active"
            },
            "isExternal": {
              "type": "boolean",
              "description": "Indicates if the profile is external"
            },
            "pwUseRandom": {
              "type": "boolean",
              "description": "Indicates if the password is generated randomly"
            },
            "pwMinLength": {
              "type": "integer",
              "description": "Minimum length of password"
            },
            "pwMinLower": {
              "type": "integer",
              "description": "Minimum number of lower case characters in the password"
            },
            "pwMinUpper": {
              "type": "integer",
              "description": "Minimum number of upper case characters in the password"
            },
            "pwMinNumeric": {
              "type": "integer",
              "description": "Minimum number of numeric characters in the password"
            },
            "pwMinNonAlpha": {
              "type": "integer",
              "description": "Minimum number of non alphabetic characters in the password"
            },
            "assignedAgents": {
              "type": "array",
              "description": "Collection of Assigned Agents",
              "items": {
                "title": "Agent",
                "description": "Agent",
                "required": [ "agentId", "firstName", "lastName" ],
                "properties": {
                  "agentId": {
                    "type": "integer",
                    "description": "Agent Id"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "Agent First Name"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Agent Last Name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "getScriptsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "title": "ResultSet",
          "description": "Result Set",
          "required": [ "businessUnitId", "totalRecords", "scripts" ],
          "properties": {
            "_links": {
              "schema": {
                "title": "_links",
                "description": "Links used to parse paginated response",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to same page of results"
                  },
                  "next": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to next page of results"
                  },
                  "previous": {
                    "type": "string",
                    "format": "URL",
                    "description": " Link to previous page of results"
                  }
                }
              }
            },
            "businessUnitId": {
              "type": "integer",
              "description": "Business Unit Id"
            },
            "totalRecords": {
              "type": "integer",
              "description": "Total number of records in the result set"
            },
            "scripts": {
              "type": "array",
              "description": "Collection of Scripts",
              "items": {
                "title": "Script",
                "description": "Script",
                "required": [ "scriptId", "scriptName", "isActive", "createDate", "lastModified", "hidden", "readOnly", "isLocked", "lockedBy", "mediaTypeId", "mediaTypeName" ],
                "properties": {
                  "scriptId": {
                    "type": "integer",
                    "description": "Script Id"
                  },
                  "scriptName": {
                    "type": "string",
                    "description": "Script Name"
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Indicates if Script is active"
                  },
                  "createDate": {
                    "type": "date-time",
                    "description": "Script Create Date (ISO 8601 format)"
                  },
                  "lastModified": {
                    "type": "date-time",
                    "description": "Script Last Modified Date (ISO 8601 format)"
                  },
                  "hidden": {
                    "type": "boolean",
                    "description": "Indicates whether the Script is hidden"
                  },
                  "readOnly": {
                    "type": "boolean",
                    "description": "Indicates whether the Script is read only"
                  },
                  "isLocked": {
                    "type": "boolean",
                    "description": "Indicates whether the Script is locked"
                  },
                  "lockedBy": {
                    "type": "integer",
                    "description": "Script Locking Agent Id"
                  },
                  "mediaTypeId": {
                    "type": "integer",
                    "description": "Script Media Type Id"
                  },
                  "mediaTypeName": {
                    "type": "string",
                    "description": "Script Media Type Name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "GetScript": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of a script"
        },
        "filePath": {
          "type": "string",
          "description": "file path"
        },
        "ScriptId": {
          "type": "integer",
          "description": "MasterId"
        },
        "body": {
          "type": "string",
          "description": "XML of a Script"
        }
      }
    },
    "postScriptsResponse": {
      "title": " ",
      "type": "object",
      "description": "Contact",
      "required": [ "contactId" ],
      "properties": {
        "contactId": {
          "type": "integer",
          "description": "Contact Id"
        }
      }
    },
    "getServerTimeResponse": {
      "title": " ",
      "type": "object",
      "description": "Server Time",
      "required": [ "ServerTime" ],
      "properties": {
        "ServerTime": {
          "type": "string",
          "format": "date-time",
          "description": "Server Time (ISO 8601 format)"
        }
      }
    },
    "getTagsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "tags" ],
      "properties": {
        "tags": {
          "type": "array",
          "description": "Collection of Tags",
          "items": {
            "title": "Tag",
            "description": "Tag",
            "required": [ "tagId", "tagName", "isActive", "notes" ],
            "properties": {
              "tagId": {
                "type": "integer",
                "description": "Tag Id"
              },
              "tagName": {
                "type": "string",
                "description": "Tag Name",
                "required": true
              },
              "isActive": {
                "type": "boolean",
                "description": "Indicates if Tag is active"
              },
              "notes": {
                "type": "string",
                "description": "Tag Notes"
              }
            }
          }
        }
      }
    },
    "postTagsResponse": {
      "title": " ",
      "required": [ "tagId" ],
      "properties": {
        "tagId": {
          "type": "integer",
          "description": "Tag Id"
        }
      }
    },
    "LockUnlockScript": {
      "type": "object",
      "properties": {
        "errorState": {
          "type": "boolean",
          "description": "Inform if there was an error at the time of executing the process"
        },
        "errorMessage": {
          "type": "string",
          "description": "Error message in case there is any"
        },
        "lockUnlockResult": {
          "type": "string",
          "description": "Result of executing the process (e.g. SuccessOperation)"
        }
      }
    },
    "kickScripts": {
      "type": "object",
      "properties": {
        "masterId": {
          "type": "integer",
          "description": "Master ID of Script"
        },
        "lockedBy": {
          "type": "integer",
          "description": "ID of kicked User"
        },
        "currErrorState": {
          "type": "string",
          "description": "Error state"
        },
        "errorStateMsg": {
          "type": "string",
          "description": "Error Message from Service"
        },
        "currLockState": {
          "type": "string",
          "description": "Error state"
        },
        "kickDate": {
          "type": "string",
          "description": "Request Date"
        }
      }
    },
    "HistoryScripts": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "full path of a script joined with the name"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoryScripts_versions"
          }
        }
      }
    },
    "HistoryScripts_versions": {
      "type": "object",
      "properties": {
        "masterID": {
          "type": "integer",
          "description": "Master ID"
        },
        "busNo": {
          "type": "integer",
          "description": "Bus Number"
        },
        "scriptName": {
          "type": "string",
          "description": "Script Name"
        },
        "modifyDate": {
          "type": "string",
          "format": "date-time",
          "description": "Modify date"
        },
        "modifyAgentID": {
          "type": "integer",
          "description": "Modify Agent ID"
        },
        "status": {
          "type": "string",
          "description": "Modify user"
        },
        "modifyAgentName": {
          "type": "string",
          "description": "Modify Agent Name"
        }
      }
    },
    "getTimeZonesResponse": {
      "title": " ",
      "required": [ "timeZones" ],
      "properties": {
        "timeZones": {
          "type": "array",
          "description": "Collection of Timezones",
          "items": {
            "title": "Timezone",
            "description": "Timezone",
            "required": [ "displayName", "standardName", "offset" ],
            "properties": {
              "displayName": {
                "type": "string",
                "description": "Timezone Display Name"
              },
              "standardName": {
                "type": "string",
                "description": "Timezone Standard Name"
              },
              "offset": {
                "type": "string",
                "description": "Offset from UTC Timezone"
              }
            }
          }
        }
      }
    },
    "searchFiles": {
      "type": "object",
      "properties": {
        "rootFolder": {
          "type": "string",
          "example": "Audios//Folder1",
          "description": "Folder name"
        },
        "busNo": {
          "type": "string",
          "example": 1234,
          "description": "Full script path"
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "string",
            "example": 1
          },
          "example": [
            {
              "busNo": 408,
              "entryID": 40917,
              "fileName": "1006510888.wav",
              "fullFileName": "Audio//1006510888.wav",
              "isFolder": false
            }
          ],
          "description": "list of files and folders"
        }
      }
    },
    "GetFileInfo": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "description": "File full name",
          "example": "Audio//1006510888.wav"
        },
        "fileInfo": {
          "type": "object",
          "properties": {
            "busNo": {
              "type": "integer"
            },
            "entryID": {
              "type": "integer"
            },
            "fileName": {
              "type": "string"
            },
            "fullFileName": {
              "type": "string"
            },
            "isFolder": {
              "type": "boolean"
            }
          },
          "example": {
            "busNo": 408,
            "entryID": 40916,
            "fileName": "1006510888.wav",
            "fileFullName": "1006510888.wav",
            "isFolder": false,
            "folderID": 1,
            "protected": false,
            "weblink": false,
            "description": "",
            "contactid": 5555,
            "version": 0,
            "created": "2020-07-13T23:08:26Z",
            "modified": "2020-07-13T11:08:26Z",
            "accessed": "2020-07-13T23:08:26Z",
            "authorID": null,
            "modifiedID": null,
            "size": 4365006,
            "physicalBytes": 4366336,
            "numFiles": 0,
            "deleteTime": "1900-01-01T07:00:00Z",
            "purpose": "CallLog",
            "volumeID": 0,
            "physicalLocation": "R:\\F0\\40915",
            "isDeleted": false,
            "volumeStatus": "Normal",
            "mailStatus": null,
            "childCount": 0,
            "totalCount": 0,
            "totalPhysicalBytes": 0,
            "isAuthorized": false,
            "cloudLocation": "",
            "cloudEntryID": 0,
            "needsProcessing": false,
            "state": "Current",
            "purposeID": 0
          }
        },
        "fileContent": {
          "type": "string",
          "description": "file content",
          "example": "..string base64"
        }
      }
    },
    "PostFile": {
      "type": "object",
      "properties": { }
    },
    "PutFileConfiguration": {
      "type": "object",
      "properties": {
        "fileInfo": {
          "type": "object",
          "description": "configuration file",
          "properties": {
            "fileFullName": {
              "type": "string"
            },
            "protectedFile": {
              "type": "boolean"
            },
            "weblink": {
              "type": "boolean"
            },
            "contactid": {
              "type": "number"
            },
            "purpose": {
              "type": "integer",
              "description": "number of pupose (0...27)"
            }
          }
        }
      },
      "example": {
        "fileInfo": {
          "fileFullName": "1006510888.wav",
          "protectedFile": false,
          "weblink": false,
          "contactid": 1234,
          "purpose": 2
        }
      }
    }
  }
}
