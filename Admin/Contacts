{
  "contacts_contactId_chat_transcript": {
    "get": {
      "tags": [ "Contacts" ],
      "summary": "Returns active Chat or SMS transcript.",
      "operationId": "ChatTranscript",
      "description": "This method returns the transcript of an active Chat or SMS contact identified by contactId. This method will only return the chat transcript for up to 48 hours. After 48 hours the chat transcript will be available using the GET /contacts/{contactId}/historical-chat-transcript method.<div class='tabs_wrapper' data-path='admin_contacts_getChatTranscript.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getChatTranscriptResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Contact Id"
        }
      }
    }
  },
  "contacts_contactid_historical-chat-transcript": {
    "get": {
      "tags": [ "Contacts" ],
      "summary": "Returns historical chat transcript",
      "operationId": "getHistoricalChatTranscript",
      "description": "This method returns a historical chat transcript by ContactId.<br/><div class='tabs_wrapper' data-path='admin_contacts_getHistoricalChatTranscript.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transcript": {
                "type": "object",
                "properties": {
                  "cloudState": {
                    "type": "string"
                  },
                  "transcript": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "partyType": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "roomId": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Contact Id"
        }
      }
    }
  },
  "contacts-contactId-email-transcript": {
    "get": {
      "tags": [ "Contacts" ],
      "summary": "Returns an Email Transcript",
      "operationId": "EmailTranscript",
      "description": "This method returns the transcript of the Email contact identified by contactId.<div class='tabs_wrapper' data-path='admin_contacts_getEmailTranscript.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        },
        {
          "name": "includeAttachments",
          "description": "Indicates if the attachments should be included",
          "type": "boolean",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getEmailTranscriptResponse"
          }
        },
        "204": {
          "description": "No email transcript available"
        },
        "400": {
          "description": "Invalid includeAttachments - {0}"
        },
        "404": {
          "description": "Invalid contactId - '{0}'"
        }
      }
    }
  },
  "contacts_contactId_sms-historical-transcript": {
    "get": {
      "tags": [ "Contacts" ],
      "summary": "  Returns SMS transcript",
      "operationId": "get-contacts-id-sms-historical-transcript ",
      "description": "This method will return a sms transcript from storage services by “contactId”.  “businessUnitId” is a required parameter added to the request url.<div class='tabs_wrapper' data-path='admin_contacts_getsmshistoricaltranscript.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        },
        {
          "name": "businessUnitId",
          "description": "ID of the Business Unit",
          "type": "integer",
          "in": "query",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Contact Id or Invalid Business Unit Id"
        }
      }
    }
  },
  "contacts_sms-historical-contacts": {
    "get": {
      "tags": [ "Contacts" ],
      "summary": "  Returns past SMS contacts",
      "operationId": "get-contacts-sms-historical-contacts",
      "description": "This method will return all past contactIds for a requested “skillId” and “ani” from storage services.  “ani”, “skillId”, and “businessUnitId” are required as part of the request url.<div class='tabs_wrapper' data-path='admin_contacts_getsmshistoricalcontacts.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "ani",
          "description": "ani",
          "type": "integer",
          "required": true,
          "in": "query"
        },
        {
          "name": "skillId",
          "description": "Skill Id",
          "type": "integer",
          "required": true,
          "in": "query"
        },
        {
          "name": "businessUnitId",
          "description": "ID of the Business Unit",
          "type": "integer",
          "required": true,
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Contact Id or Invalid Business Unit Id"
        }
      }
    }
  },
  "persistent-contacts_contactid": {
    "put": {
      "tags": [ "Contacts" ],
      "summary": " Update Persistent Contact",
      "operationId": "put-persistent-contacts-id",
      "description": "This method is used to update a persistent contact that is in queue.<br/><br/>  NOTE: Persistent contacts are limited to 10 per second. <div class='tabs_wrapper' data-path='admin_list_persistentcontacts.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "contactId",
          "description": "Contact ID to update",
          "type": "string",
          "in": "path",
          "required": true
        },
        {
          "name": "persistentContact",
          "description": "A Dynamic Data object containing the persistent contact information to upate",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "persistentContact": {
                "type": "object",
                "properties": {
                  "skillId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "targetAgentId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "initialPriority": {
                    "type": "integer",
                    "nullable": true
                  },
                  "acceleration": {
                    "type": "integer",
                    "nullable": true
                  },
                  "maxPriority": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              }
            },
            "required": [
              "persistentContact"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "401": {
          "description": "Invalid Security User"
        },
        "404": {
          "description": "<p><p>Invalid Contact ID</p><p>Invalid Contact State</p></p><p>{0}</p>"
        },
        "409": {
          "description": "Too many requests"
        }
      }
    }
  },
  "contacts_contactId_end": {
    "post": {
      "tags": [ "Contacts" ],
      "summary": "Force a contact to be disconnected and to end",
      "operationId": "endAContact",
      "description": "<span><p>Can be useful for ending \"stuck\" contacts (where both parties have ended their respective legs, but the contact still shows as \"active\" on the platform).</p><p><b style='color:red;'>WARNING:</b> This will end the contact and disconnect all parties (for phone contacts) without regard to the state of the contact. Use with caution!<div class='tabs_wrapper' data-path='admin_contacts_postContactIDEnd.html'></div></p></span>",
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        }
      ],
      "responses": {
        "202": {
          "description": "Accepted"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient permissions"
        },
        "404": {
          "description": "Invalid Contact Id"
        },
        "405": {
          "description": "Method Not Allowed: must use POST"
        },
        "409": {
          "description": "Conflict: The contact is already ended"
        },
        "500": {
          "description": "Internal Server Error: contact tech support"
        }
      }
    }
  },
  "contacts_contactId_files": {
    "get": {
      "tags": [ "Contacts" ],
      "summary": "Returns a Contacts Files",
      "operationId": "ContactFiles",
      "description": "This method returns the files associates with the Contact identified by \"contactId\".<div class='tabs_wrapper' data-path='admin_contacts_getContactFiles.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "contactId",
          "description": "ID of the Contact",
          "required": true,
          "type": "integer",
          "in": "path"
        },
        {
          "name": "fields",
          "description": "Comma separated list of elements to return in response",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "title": "Files",
            "description": "Collection of Contact Files",
            "properties": {
              "files": {
                "type": "array",
                "items": {
                  "title": "files",
                  "description": "Files",
                  "properties": {
                    "isDeleted": {
                      "type": "boolean",
                      "description": "Indicates if file has been deleted from the file system",
                      "required": true
                    },
                    "businessUnitId": {
                      "type": "integer",
                      "description": "ID of the Business Unit",
                      "required": true
                    },
                    "fileName": {
                      "type": "string",
                      "description": "Name of the file",
                      "required": true
                    },
                    "fullFileName": {
                      "type": "string",
                      "description": "Full path to file",
                      "required": true
                    },
                    "weblink": {
                      "type": "boolean",
                      "description": "Indicates if the file is a weblink for example an Agent indicator",
                      "required": true
                    },
                    "contactId": {
                      "type": "integer",
                      "description": "ID of the Contact",
                      "required": true
                    },
                    "createDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date the file was created",
                      "required": true
                    },
                    "modifiedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date the file was modified",
                      "required": true
                    },
                    "accessDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date the file was last accessed",
                      "required": true
                    },
                    "authorId": {
                      "type": "integer",
                      "description": "ID of the User that created the file",
                      "required": true
                    },
                    "modifiedId": {
                      "type": "integer",
                      "description": "ID of the User that modified the file",
                      "required": true
                    },
                    "size": {
                      "type": "integer",
                      "description": "Size of the file in bytes",
                      "required": true
                    },
                    "physicalBytes": {
                      "type": "integer",
                      "description": "Size of the file in bytes including header info",
                      "required": true
                    },
                    "deleteDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date the file was deleted",
                      "required": true
                    },
                    "purposeId": {
                      "type": "integer",
                      "description": "ID of the type of file",
                      "required": true
                    },
                    "purposeName": {
                      "type": "integer",
                      "description": "Name of the type of file",
                      "required": true
                    },
                    "mailStatusId": {
                      "type": "integer",
                      "description": "ID of the email contact status",
                      "required": true
                    },
                    "mailStatusName": {
                      "type": "string",
                      "description": "Name of the email contact status",
                      "required": true
                    }
                  }
                }
              }
            }
          }
        },
        "204": {
          "description": "<p>No files associates with contactId - {parameter value}</p><p>File access for contactId '{parameter value}' pending</p>"
        },
        "400": {
          "description": "<p>Invalid fields list {parameter value}</p><p>Invalid {parameter name} - '{parameter value}'</p>"
        }
      }
    }
  },
  "contacts_contactId_monitor": {
    "post": {
      "tags": [ "Contacts" ],
      "summary": "Starts monitoring a phone call",
      "operationId": "monitorAContactCall",
      "description": "<span><p>The inContact platform will call the phone number you specify, and begin streaming the voice interaction to that phone. Monitoring is a one-way action: you can hear the conversation, but you can not participate in it.<div class='tabs_wrapper' data-path='admin_contacts_postContactIDMonitor.html'></div></p></span>",
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postContactMonitorRequest"
          }
        }
      ],
      "responses": {
        "202": {
          "description": "Accepted"
        },
        "400": {
          "description": "<p>Number Length Exceeded</p><p>Invalid Phone Number</p>"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient permissions"
        },
        "404": {
          "description": "Invalid Contact Id"
        },
        "405": {
          "description": "Method Not Allowed: must use POST"
        },
        "409": {
          "description": "Conflict: If contact is ended, or is not a phone contact"
        },
        "500": {
          "description": "Internal Server Error: contact tech support"
        }
      }
    }
  },
  "contacts_contactId_record": {
    "post": {
      "tags": [ "Contacts" ],
      "summary": "Allows to begin the recording of an active phone call",
      "operationId": "recordAContact",
      "description": "Once you begin recording a call, there is no way to stop the recording until the call is ended.<div class='tabs_wrapper' data-path='admin_contacts_postContactIDRecord.html'></div>",
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        }
      ],
      "responses": {
        "202": {
          "description": "Accepted"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Insufficient permissions"
        },
        "404": {
          "description": "Invalid Contact Id"
        },
        "405": {
          "description": "Method Not Allowed: must use POST"
        },
        "409": {
          "description": "Conflict: If contact is ended, or is not a phone contact"
        },
        "500": {
          "description": "Internal Server Error: contact tech support"
        }
      }
    }
  },
  "contacts_contactid_set-disposition": {
    "post": {
      "tags": [ "Contacts" ],
      "summary": " Set Disposition For Contact",
      "operationId": "post-contacts-id-set-disposition",
      "description": "Sets the disposition for an active outbound dialer contact.  This is only available for outbound dialer.  This will then suppress the agent disposition experience in MAX. <div class='tabs_wrapper' data-path='admin_contacts_contactid_set-disposition.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        },
        {
          "name": "skill",
          "description": "Skill",
          "required": true,
          "type": "integer",
          "in": "query"
        },
        {
          "name": "disposition",
          "description": "",
          "required": true,
          "type": "integer",
          "in": "query"
        },
        {
          "name": "callbackNumber",
          "description": "",
          "type": "integer",
          "in": "query"
        },
        {
          "name": "callbackTime",
          "description": "",
          "type": "date-time",
          "in": "query"
        },
        {
          "name": "notes",
          "description": "",
          "type": "string",
          "in": "query"
        },
        {
          "name": "commitmentAmount",
          "description": "",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p><p><p><p><p><p><p><p>Skill Not Running</p><p>Skill Not Configured For Dispositioning Via Script</p></p><p>Unable To Determine BusNo</p></p><p>SpecifiedDisposition Has No Classification</p></p><p>Invalid Contact ID</p></p><p>Invalid Skill</p></p><p>Invalid Disposition Code</p></p><p>Invalid Commitment Amount</p></p><p>Invalid Callback Time</p>"
        },
        "401": {
          "description": "Invalid Security User"
        }
      }
    }
  },
  "contacts-contactId-tags": {
    "post": {
      "tags": [ "Contacts" ],
      "summary": "Assigns Tags to a Contact",
      "operationId": "AssignTagsContact",
      "description": "This method assigns Tags to the contact identified by contactId.<div class='tabs_wrapper' data-path='admin_contacts_postContactTags.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        },
        {
          "$ref": "#/definitions/parameters/contentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postContactTagsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postContactTagsResponse"
          }
        },
        "400": {
          "description": "Invalid tags - cannot be null or empty"
        },
        "404": {
          "description": "Invalid contactId - {0}"
        }
      }
    }
  },
  "contact_state_description": {
    "get": {
      "tags": [ "Contacts" ],
      "summary": "Returns a list of contact states",
      "operationId": "getContactStateDescriptions",
      "description": "Can be useful in presenting categories of contact states in a report or dashboard.<div class='tabs_wrapper' data-path='admin_contacts_getStateDescription.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [ ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getContactStateDescriptions"
          }
        },
        "401": {
          "description": "Unauthorized: token is expired"
        },
        "403": {
          "description": "Insufficient Privileges: security profile prevents access"
        },
        "404": {
          "description": "Not Found: invalid contact state ID"
        },
        "405": {
          "description": "Method Not Allowed: must use GET"
        },
        "500": {
          "description": "Internal Server Error: contact tech support"
        }
      }
    }
  },
  "contact_state_descriptions_stateId": {
    "get": {
      "tags": [ "Contacts" ],
      "summary": "Returns a single contact state",
      "operationId": "getContactStateById",
      "description": "Can be useful in presenting categories of contact states in a report or dashboard.<div class='tabs_wrapper' data-path='admin_contacts_getStateDescriptionID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "contactStateId",
          "description": "Contact State Id",
          "required": true,
          "type": "integer",
          "in": "path"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getContactStateDescriptions"
          }
        },
        "401": {
          "description": "Unauthorized: token is expired"
        },
        "403": {
          "description": "Insufficient Privileges: security profile prevents access"
        },
        "404": {
          "description": "Invalid Contact State Id"
        },
        "405": {
          "description": "Method Not Allowed: must use GET"
        },
        "500": {
          "description": "Internal Server Error: contact tech support"
        }
      }
    }
  },
  "interactions_contactId_signal": {
    "post": {
      "tags": [ "Contacts" ],
      "summary": "Create a Signal for a Contact",
      "operationId": "Signal a Contact",
      "description": "This method can be used to send up to 9 custom data variables into a script environment.  This call can be made outside of an Agent Session with only the contactId value needed.<div class='tabs_wrapper' data-path='admin_contacts_postContactIDSignal.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/contactId"
        },
        {
          "name": "p1",
          "description": "Custom data",
          "type": "string",
          "in": "query"
        },
        {
          "name": "p2",
          "description": "Custom data",
          "type": "string",
          "in": "query"
        },
        {
          "name": "p3",
          "description": "Custom data",
          "type": "string",
          "in": "query"
        },
        {
          "name": "p4",
          "description": "Custom data",
          "type": "string",
          "in": "query"
        },
        {
          "name": "p5",
          "description": "Custom data",
          "type": "string",
          "in": "query"
        },
        {
          "name": "p6",
          "description": "Custom data",
          "type": "string",
          "in": "query"
        },
        {
          "name": "p7",
          "description": "Custom data",
          "type": "string",
          "in": "query"
        },
        {
          "name": "p8",
          "description": "Custom data",
          "type": "string",
          "in": "query"
        },
        {
          "name": "p9",
          "description": "Custom data",
          "type": "string",
          "in": "query"
        }
      ],
      "responses": {
        "202": {
          "description": "Accepted"
        },
        "404": {
          "description": "Invalid Contact Id"
        },
        "403": {
          "description": "Insufficient permissions"
        },
        "401": {
          "description": "Unauthorized"
        }
      }
    }
  },
  "definitions": {
    "parameters": {
      "contactId": {
        "name": "contactId",
        "description": "Contact Id",
        "required": true,
        "type": "integer",
        "in": "path"
      },
      "contentBodyMetaData": {
        "in": "body",
        "name": "Content Body",
        "type": "DynamicData",
        "description": "Content Body",
        "allowMultiple": true
      }
    },
    "getEmailTranscriptResponse": {
      "title": " ",
      "type": "object",
      "required": [ "emails" ],
      "properties": {
        "emails": {
          "type": "array",
          "description": "Collection of Emails",
          "items": {
            "title": "Email",
            "description": "Email",
            "required": [ "emailTypeId", "sentDate", "fromAddress", "toAddress", "ccAddress", "bccAddress", "subject", "bodyHtml" ],
            "properties": {
              "emailTypeId": {
                "type": "integer",
                "description": "ID of the email type such as inbound, reply, forward etc."
              },
              "sentDate": {
                "type": "string",
                "format": "date-time",
                "description": "Date the email was sent"
              },
              "fromAddress": {
                "type": "string",
                "description": "Address the email was sent from"
              },
              "toAddress": {
                "type": "string",
                "description": "Address the email was sent to"
              },
              "ccAddress": {
                "type": "string",
                "description": "Address the email was copied to"
              },
              "bccAddress": {
                "type": "string",
                "description": "Address the email was blind copied to"
              },
              "subject": {
                "type": "string",
                "description": "Subject of the email"
              },
              "rawFileName": {
                "type": "string",
                "description": "Location of raw email log file"
              },
              "bodyHtml": {
                "type": "string",
                "description": "Body of the email"
              },
              "hasAttachments": {
                "type": "boolean",
                "description": "Indicates if email has attachments"
              },
              "attachments": {
                "type": "array",
                "description": "Collection of Attachments",
                "items": {
                  "title": "Attachment",
                  "description": "Attachment",
                  "required": [ "attachmentName", "attachment" ],
                  "properties": {
                    "attachmentName": {
                      "type": "string",
                      "description": "Attachment Name"
                    },
                    "attachment": {
                      "type": "string",
                      "description": "Attachment Content (Base64 encoded)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getChatTranscriptResponse": {
      "title": " ",
      "type": "object",
      "required": [ "messages" ],
      "properties": {
        "messages": {
          "type": "array",
          "description": "Collection of Chats",
          "items": {
            "title": "messages",
            "description": "messages",
            "required": [ "Text", "TimeStamp", "PartyType", "Label", "RoomId" ],
            "properties": {
              "Text": {
                "type": "string",
                "description": "Text that has to be sent"
              },
              "TimeStamp": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp"
              },

              "PartyType": {
                "type": "string",
                "description": "PartyType"
              },
              "Label": {
                "type": "string",
                "description": "Label"
              },
              "RoomId": {
                "type": "integer",
                "description": "RoomId"
              }
            }
          }
        }
      }
    },
    "postContactTagsRequest": {
      "title": " ",
      "type": "object",
      "required": [ "tags" ],
      "properties": {
        "tags": {
          "type": "array",
          "description": "Collection of Tags to assign",
          "items": {
            "title": "Tag",
            "required": [ "tagId" ],
            "properties": {
              "tagId": {
                "type": "integer",
                "description": "Tag Id to assign to Contact"
              }
            }
          }
        }
      }
    },
    "postContactTagsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "items": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "errorCount", "tagResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of unsuccessful tag assignments",
                "required": true
              },
              "tagResults": {
                "type": "array",
                "description": "Collection of Tag Results",
                "items": {
                  "title": "TagResult",
                  "description": "",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Tag Assignment Success State"
                    },
                    "tagId": {
                      "type": "integer",
                      "description": "Tag Id. Only returned if assignment was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Tag Assignment Error. Only returned if assignment was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postContactMonitorRequest": {
      "title": " ",
      "type": "object",
      "required": [ "phoneNumber" ],
      "properties": {
        "phoneNumber": {
          "type": "number",
          "description": "Phone Number"
        }
      }
    },
    "getContactStateDescriptions": {
      "title": " ",
      "type": "object",
      "required": [ "contactStateDescriptions" ],
      "properties": {
        "contactStateDescriptions": {
          "type": "array",
          "description": "Collection of Contact States",
          "items": {
            "title": "ContactState",
            "description": "Contact State",
            "required": [ "ContactStateCategory", "ContactStateDescription", "ContactStateId" ],
            "properties": {
              "ContactStateCategory": {
                "type": "string",
                "description": "Contact State Category"
              },
              "ContactStateDescription": {
                "type": "string",
                "description": "Contact State Description"
              },
              "ContactStateId": {
                "type": "integer",
                "description": "Contact State Id"
              }
            }
          }
        }
      }
    }
  }
}
