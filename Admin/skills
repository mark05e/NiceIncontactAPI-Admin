{
  "skills_skillid_parameters_time-zones": {
    "put": {
      "tags": [
        "Skills"
      ],
      "summary": "Updates the timezone boundings for the given skill",
      "operationId": "put-skills-id-parameters-time-zones",
      "description": "This method updates the timezone boundings information for the given skill. All timezone boundings to be made active must be given in a request. All timezone boundings not in the request will be deactivated. <div class='tabs_wrapper' data-path='admin_putskills_skillid_parameters_timezone.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "",
          "type": "string",
          "in": "path",
          "required": true
        },
        {
          "name": "timeZoneSettings",
          "description": "A Dynamic Data object containing the skill timezone setting information to upate",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "timeZoneSettings": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "standardName": {
                      "type": "string",
                      "nullable": true
                    },
                    "startTime": {
                      "type": "string",
                      "nullable": true
                    },
                    "endTime": {
                      "type": "string",
                      "nullable": true
                    },
                    "timeZoneActiveToCall": {
                      "type": "boolean"
                    },
                    "overrideTime": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p><p>{0}</p><p>{0}</p></p><p>{0}</p>"
        },
        "404": {
          "description": "{0}"
        }
      }
    },
    "get": {
      "tags": [
        "Skills"
      ],
      "summary": "List of the timezone boundings for the given skill",
      "operationId": "get-skills-id-parameters-time-zones",
      "description": "This method returns a list of the timezone boundings for a skill <div class='tabs_wrapper' data-path='admin_skills_skillid_parameters_timezone.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "",
          "type": "string",
          "in": "path",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>{0}</p><p>{0}</p>"
        },
        "404": {
          "description": "{0}"
        }
      }
    }
  },
  "skills_skillid_parameters": {
    "get": {
      "tags": [ "Skills" ],
      "summary": " Get skill settings",
      "operationId": "get-skills-id-parameters",
      "description": "Gets all skill parameters for a specific outbound dialer skill. (General, Cadence, Delivery, list management, etc.) <div class='tabs_wrapper' data-path='admin_skills_skillid_parameters.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "Skill ID",
          "type": "integer",
          "in": "path"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "skillName": {
                "type": "string"
              },
              "skillNo": {
                "type": "integer"
              },
              "generalSettings": {
                "type": "object",
                "properties": {
                  "minimumRetryMinutes": {
                    "type": "integer"
                  },
                  "maximumAttempts": {
                    "type": "integer"
                  },
                  "defaultContactExpiration": {
                    "type": "integer"
                  },
                  "getPriorityContactsOnContactInsertion": {
                    "type": "boolean"
                  },
                  "loadCallbacks": {
                    "type": "boolean"
                  },
                  "loadFresh": {
                    "type": "boolean"
                  },
                  "loadNonFresh": {
                    "type": "boolean"
                  },
                  "overrideBusinessUnitAbandonRate": {
                    "type": "boolean"
                  },
                  "maximumRingingDuration": {
                    "type": "integer"
                  },
                  "beginDampenPercentage": {
                    "type": "number"
                  },
                  "abandonRateCutoff": {
                    "type": "number"
                  },
                  "abandonRateThreshold": {
                    "type": "number"
                  },
                  "inactiveBlenderTimer": {
                    "type": "integer"
                  },
                  "maximumRatio": {
                    "type": "integer"
                  },
                  "aggressiveness": {
                    "type": "integer"
                  },
                  "endOfListNotificationsDelay": {
                    "type": "integer"
                  },
                  "notifyAgentsWhenListIsEmpty": {
                    "type": "boolean"
                  },
                  "percentageOfAgentsBeforeOverdial": {
                    "type": "integer"
                  },
                  "blockMultipleCalls": {
                    "type": "boolean"
                  },
                  "consecutiveAttemptsWithoutALiveConnect": {
                    "type": "integer"
                  },
                  "enableDialingByProficiency": {
                    "type": "boolean"
                  },
                  "proficiencyFactor": {
                    "type": "number"
                  },
                  "waitTimeFactor": {
                    "type": "boolean"
                  },
                  "maxConcurrentCallsPerAgent": {
                    "type": "integer"
                  },
                  "maxWaitTimeSeconds": {
                    "type": "integer"
                  }
                }
              },
              "cadenceSettings": {
                "type": "object",
                "properties": {
                  "cadenceMaximumAttempts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "maxAttempts": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "attemptMode": {
                    "type": "integer"
                  },
                  "recordRequestMode": {
                    "type": "integer"
                  },
                  "destinationRetryRestMinutes": {
                    "type": "integer"
                  },
                  "cadences": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldName": {
                          "type": "string"
                        },
                        "attempts": {
                          "type": "integer"
                        },
                        "order": {
                          "type": "integer"
                        },
                        "timeConstraints": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dayType": {
                                "type": "string"
                              },
                              "startTime": {
                                "type": "string"
                              },
                              "endTime": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "deliveryPreferences": {
                "type": "object",
                "properties": {
                  "confirmationRequiredDisabled": {
                    "type": "boolean"
                  },
                  "confirmationRequiredDeliveryType": {
                    "type": "integer"
                  },
                  "confirmationRequiredTimeout": {
                    "type": "integer"
                  },
                  "confirmationRequiredTimeoutSubsequent": {
                    "type": "integer"
                  },
                  "confirmationRequiredDefaultAccept": {
                    "type": "boolean"
                  },
                  "confirmationRequiredDefault": {
                    "type": "boolean"
                  },
                  "complianceRecordsDisabled": {
                    "type": "boolean"
                  },
                  "complianceRecordsDeliveryType": {
                    "type": "integer"
                  },
                  "complianceRecordsTimeout": {
                    "type": "integer"
                  },
                  "complianceRecordsTimeoutSubsequent": {
                    "type": "integer"
                  },
                  "complianceRecordsDefaultAccept": {
                    "type": "boolean"
                  },
                  "showComplianceButtonReschedule": {
                    "type": "boolean"
                  },
                  "showComplianceButtonRequeue": {
                    "type": "boolean"
                  },
                  "showComplianceButtonSnooze": {
                    "type": "boolean"
                  },
                  "showComplianceButtonDisposition": {
                    "type": "boolean"
                  },
                  "showPreviewButtonReschedule": {
                    "type": "boolean"
                  },
                  "showPreviewButtonRequeue": {
                    "type": "boolean"
                  },
                  "showPreviewButtonSnooze": {
                    "type": "boolean"
                  },
                  "showPreviewButtonDisposition": {
                    "type": "boolean"
                  }
                }
              },
              "callingLists": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              },
              "cpaSettings": {
                "type": "object",
                "properties": {
                  "abandonTimeout": {
                    "type": "number"
                  },
                  "abandonMessagePath": {
                    "type": "string"
                  },
                  "abandonMsgMode": {
                    "type": "integer"
                  },
                  "ansMachineDetMode": {
                    "type": "integer"
                  },
                  "ansMachineMsg": {
                    "type": "string"
                  },
                  "exceptions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "attemptNo": {
                          "type": "integer"
                        },
                        "ansMachineDetMode": {
                          "type": "integer"
                        },
                        "ansMachineMsg": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "treatProgressAsRinging": {
                    "type": "boolean"
                  },
                  "preConnectCPAEnabled": {
                    "type": "boolean"
                  },
                  "agentOverrideOptionFax": {
                    "type": "boolean"
                  },
                  "agentOverrideOptionAnsweringMachine": {
                    "type": "boolean"
                  },
                  "agentOverrideOptionBadNumber": {
                    "type": "boolean"
                  },
                  "utteranceMinimumSeconds": {
                    "type": "number"
                  },
                  "customerLiveSilenceSeconds": {
                    "type": "number"
                  },
                  "machineMinimumWithAgentSeconds": {
                    "type": "number"
                  },
                  "machineMinimumWithoutAgentSeconds": {
                    "type": "number"
                  },
                  "machineEndSilenceSeconds": {
                    "type": "number"
                  },
                  "machineEndTimeoutSeconds": {
                    "type": "number"
                  },
                  "agentResponseUtteranceMinimumSeconds": {
                    "type": "number"
                  },
                  "agentNoResponseSeconds": {
                    "type": "number"
                  },
                  "agentVoiceThreshold": {
                    "type": "number"
                  },
                  "customerVoiceThreshold": {
                    "type": "number"
                  },
                  "preConnectCPARecording": {
                    "type": "boolean"
                  },
                  "enableCPALogging": {
                    "type": "string"
                  }
                }
              },
              "retrySettings": {
                "type": "object",
                "properties": {
                  "loadNonFresh": {
                    "type": "boolean"
                  },
                  "finalizeWhenExhausted": {
                    "type": "boolean"
                  },
                  "maximumAttempts": {
                    "type": "integer"
                  },
                  "minimumRetryMinutes": {
                    "type": "integer"
                  },
                  "maximumNumberOfHandledCalls": {
                    "type": "integer"
                  },
                  "restrictedCallingMinutes": {
                    "type": "integer"
                  },
                  "restrictedCallingMaxAttempts": {
                    "type": "integer"
                  },
                  "generalStaleMinutes": {
                    "type": "integer"
                  },
                  "callbackRestMinutes": {
                    "type": "integer"
                  },
                  "releaseAgentSpecificCalls": {
                    "type": "boolean"
                  },
                  "maximumNumberOfCallbacks": {
                    "type": "integer"
                  },
                  "callbackStaleMinutes": {
                    "type": "integer"
                  }
                }
              },
              "filterSettings": {
                "type": "object",
                "properties": {
                  "isFilterActive": {
                    "type": "boolean"
                  },
                  "excludePriority": {
                    "type": "boolean"
                  },
                  "excludeCallback": {
                    "type": "boolean"
                  },
                  "applyOptions": {
                    "type": "integer"
                  },
                  "filterConditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "string"
                        },
                        "operator": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "listManagementSettings": {
                "type": "object",
                "properties": {
                  "displayField1Id": {
                    "type": "integer"
                  },
                  "displayField1Name": {
                    "type": "string"
                  },
                  "displayField2Id": {
                    "type": "integer"
                  },
                  "displayField2NAme": {
                    "type": "string"
                  },
                  "listOrderingOptions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "orderType": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "scheduleSettings": {
                "type": "object",
                "properties": {
                  "isScheduled": {
                    "type": "boolean"
                  },
                  "schedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "day": {
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "startTime": {
                          "type": "string"
                        },
                        "endTime": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "timeZoneSettings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "overrideTime": {
                      "type": "boolean"
                    },
                    "timeZoneActiveToCall": {
                      "type": "boolean"
                    },
                    "startTime": {
                      "type": "string"
                    },
                    "endTime": {
                      "type": "string"
                    }
                  }
                }
              },
              "xsSettings": {
                "type": "object",
                "properties": {
                  "xsScriptId": {
                    "type": "integer"
                  },
                  "xsCheckinScriptId": {
                    "type": "integer"
                  },
                  "externalOutboundSkill_No": {
                    "type": "string"
                  },
                  "xsSkillChangedActive": {
                    "type": "boolean"
                  },
                  "xsGetContactsActive": {
                    "type": "boolean"
                  },
                  "xsFreshThreshold": {
                    "type": "integer"
                  },
                  "xsAvailableThreshold": {
                    "type": "integer"
                  },
                  "xsReadyThreshold": {
                    "type": "integer"
                  },
                  "xsNumberToRetrieve": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Other Error - See Error Message"
        },
        "401": {
          "description": "Invalid security user"
        },
        "404": {
          "description": "Invalid skillId"
        }
      }
    }
  },
  "skills_skillid_parameters_cadence-settings": {
    "put": {
      "tags": [ "Skills" ],
      "summary": " Update Skill Cadence Settings",
      "operationId": "put-skills-id-parameters-cadence-settings",
      "description": "Updates the cadence setting for an outbound dialer skill. <div class='tabs_wrapper' data-path='admin_skills_skillid_parameters_cadence-settings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "name": "cadenceSettings",
          "description": "A Dynamic Data object containing the skill CPA setting information to update",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "attemptMode": {
                "type": "string",
                "nullable": true
              },
              "recordRequestMode": {
                "type": "string",
                "nullable": true
              },
              "destinationRetryRestMinutes": {
                "type": "integer"
              },
              "maximumAttempts": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "fieldName": {
                      "type": "string",
                      "nullable": true
                    },
                    "attempts": {
                      "type": "integer"
                    }
                  }
                }
              },
              "cadences": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "fieldName": {
                      "type": "string",
                      "nullable": true
                    },
                    "attempts": {
                      "type": "integer"
                    },
                    "timeConstraints": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "weekdayTimeConstraints": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "startTime": {
                                "type": "string",
                                "nullable": true
                              },
                              "endTime": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "weekendTimeConstraints": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "startTime": {
                                "type": "string",
                                "nullable": true
                              },
                              "endTime": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid parameter</p><p>Other Error - See Error Message</p>"
        },
        "401": {
          "description": "Invalid security user"
        },
        "404": {
          "description": "Invalid skillId"
        }
      }
    }
  },
  "skills_parameters": {
    "get": {
      "tags": [ "Skills" ],
      "summary": " Get skills settings list",
      "operationId": "get-skills-parameters",
      "description": "Gets all outbound skill parameters for all outbound dialer skills. (General, Cadence, Delivery, list management, etc.) <div class='tabs_wrapper' data-path='admin_skills_parameters.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "skills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillName": {
                      "type": "string"
                    },
                    "skillNo": {
                      "type": "integer"
                    },
                    "generalSettings": {
                      "type": "object",
                      "properties": {
                        "minimumRetryMinutes": {
                          "type": "integer"
                        },
                        "maximumAttempts": {
                          "type": "integer"
                        },
                        "defaultContactExpiration": {
                          "type": "integer"
                        },
                        "getPriorityContactsOnContactInsertion": {
                          "type": "boolean"
                        },
                        "loadCallbacks": {
                          "type": "boolean"
                        },
                        "loadFresh": {
                          "type": "boolean"
                        },
                        "loadNonFresh": {
                          "type": "boolean"
                        },
                        "overrideBusinessUnitAbandonRate": {
                          "type": "boolean"
                        },
                        "maximumRingingDuration": {
                          "type": "integer"
                        },
                        "beginDampenPercentage": {
                          "type": "number"
                        },
                        "abandonRateCutoff": {
                          "type": "number"
                        },
                        "abandonRateThreshold": {
                          "type": "number"
                        },
                        "inactiveBlenderTimer": {
                          "type": "integer"
                        },
                        "maximumRatio": {
                          "type": "integer"
                        },
                        "aggressiveness": {
                          "type": "integer"
                        },
                        "endOfListNotificationsDelay": {
                          "type": "integer"
                        },
                        "notifyAgentsWhenListIsEmpty": {
                          "type": "boolean"
                        },
                        "percentageOfAgentsBeforeOverdial": {
                          "type": "integer"
                        },
                        "blockMultipleCalls": {
                          "type": "boolean"
                        },
                        "consecutiveAttemptsWithoutALiveConnect": {
                          "type": "integer"
                        },
                        "enableDialingByProficiency": {
                          "type": "boolean"
                        },
                        "proficiencyFactor": {
                          "type": "number"
                        },
                        "waitTimeFactor": {
                          "type": "boolean"
                        },
                        "maxConcurrentCallsPerAgent": {
                          "type": "integer"
                        },
                        "maxWaitTimeSeconds": {
                          "type": "integer"
                        }
                      }
                    },
                    "cadenceSettings": {
                      "type": "object",
                      "properties": {
                        "cadenceMaximumAttempts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "maxAttempts": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "attemptMode": {
                          "type": "integer"
                        },
                        "recordRequestMode": {
                          "type": "integer"
                        },
                        "destinationRetryRestMinutes": {
                          "type": "integer"
                        },
                        "cadences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "fieldName": {
                                "type": "string"
                              },
                              "attempts": {
                                "type": "integer"
                              },
                              "order": {
                                "type": "integer"
                              },
                              "timeConstraints": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "dayType": {
                                      "type": "string"
                                    },
                                    "startTime": {
                                      "type": "string"
                                    },
                                    "endTime": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "deliveryPreferences": {
                      "type": "object",
                      "properties": {
                        "confirmationRequiredDisabled": {
                          "type": "boolean"
                        },
                        "confirmationRequiredDeliveryType": {
                          "type": "integer"
                        },
                        "confirmationRequiredTimeout": {
                          "type": "integer"
                        },
                        "confirmationRequiredTimeoutSubsequent": {
                          "type": "integer"
                        },
                        "confirmationRequiredDefaultAccept": {
                          "type": "boolean"
                        },
                        "confirmationRequiredDefault": {
                          "type": "boolean"
                        },
                        "complianceRecordsDisabled": {
                          "type": "boolean"
                        },
                        "complianceRecordsDeliveryType": {
                          "type": "integer"
                        },
                        "complianceRecordsTimeout": {
                          "type": "integer"
                        },
                        "complianceRecordsTimeoutSubsequent": {
                          "type": "integer"
                        },
                        "complianceRecordsDefaultAccept": {
                          "type": "boolean"
                        },
                        "showComplianceButtonReschedule": {
                          "type": "boolean"
                        },
                        "showComplianceButtonRequeue": {
                          "type": "boolean"
                        },
                        "showComplianceButtonSnooze": {
                          "type": "boolean"
                        },
                        "showComplianceButtonDisposition": {
                          "type": "boolean"
                        },
                        "showPreviewButtonReschedule": {
                          "type": "boolean"
                        },
                        "showPreviewButtonRequeue": {
                          "type": "boolean"
                        },
                        "showPreviewButtonSnooze": {
                          "type": "boolean"
                        },
                        "showPreviewButtonDisposition": {
                          "type": "boolean"
                        }
                      }
                    },
                    "callingLists": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "cpaSettings": {
                      "type": "object",
                      "properties": {
                        "abandonTimeout": {
                          "type": "number"
                        },
                        "abandonMessagePath": {
                          "type": "string"
                        },
                        "abandonMsgMode": {
                          "type": "integer"
                        },
                        "ansMachineDetMode": {
                          "type": "integer"
                        },
                        "ansMachineMsg": {
                          "type": "string"
                        },
                        "exceptions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "attemptNo": {
                                "type": "integer"
                              },
                              "ansMachineDetMode": {
                                "type": "integer"
                              },
                              "ansMachineMsg": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "treatProgressAsRinging": {
                          "type": "boolean"
                        },
                        "preConnectCPAEnabled": {
                          "type": "boolean"
                        },
                        "agentOverrideOptionFax": {
                          "type": "boolean"
                        },
                        "agentOverrideOptionAnsweringMachine": {
                          "type": "boolean"
                        },
                        "agentOverrideOptionBadNumber": {
                          "type": "boolean"
                        },
                        "utteranceMinimumSeconds": {
                          "type": "number"
                        },
                        "customerLiveSilenceSeconds": {
                          "type": "number"
                        },
                        "machineMinimumWithAgentSeconds": {
                          "type": "number"
                        },
                        "machineMinimumWithoutAgentSeconds": {
                          "type": "number"
                        },
                        "machineEndSilenceSeconds": {
                          "type": "number"
                        },
                        "machineEndTimeoutSeconds": {
                          "type": "number"
                        },
                        "agentResponseUtteranceMinimumSeconds": {
                          "type": "number"
                        },
                        "agentNoResponseSeconds": {
                          "type": "number"
                        },
                        "agentVoiceThreshold": {
                          "type": "number"
                        },
                        "customerVoiceThreshold": {
                          "type": "number"
                        },
                        "preConnectCPARecording": {
                          "type": "boolean"
                        },
                        "enableCPALogging": {
                          "type": "string"
                        }
                      }
                    },
                    "retrySettings": {
                      "type": "object",
                      "properties": {
                        "loadNonFresh": {
                          "type": "boolean"
                        },
                        "finalizeWhenExhausted": {
                          "type": "boolean"
                        },
                        "maximumAttempts": {
                          "type": "integer"
                        },
                        "minimumRetryMinutes": {
                          "type": "integer"
                        },
                        "maximumNumberOfHandledCalls": {
                          "type": "integer"
                        },
                        "restrictedCallingMinutes": {
                          "type": "integer"
                        },
                        "restrictedCallingMaxAttempts": {
                          "type": "integer"
                        },
                        "generalStaleMinutes": {
                          "type": "integer"
                        },
                        "callbackRestMinutes": {
                          "type": "integer"
                        },
                        "releaseAgentSpecificCalls": {
                          "type": "boolean"
                        },
                        "maximumNumberOfCallbacks": {
                          "type": "integer"
                        },
                        "callbackStaleMinutes": {
                          "type": "integer"
                        }
                      }
                    },
                    "filterSettings": {
                      "type": "object",
                      "properties": {
                        "isFilterActive": {
                          "type": "boolean"
                        },
                        "excludePriority": {
                          "type": "boolean"
                        },
                        "excludeCallback": {
                          "type": "boolean"
                        },
                        "applyOptions": {
                          "type": "integer"
                        },
                        "filterConditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "column": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "listManagementSettings": {
                      "type": "object",
                      "properties": {
                        "displayField1Id": {
                          "type": "integer"
                        },
                        "displayField1Name": {
                          "type": "string"
                        },
                        "displayField2Id": {
                          "type": "integer"
                        },
                        "displayField2NAme": {
                          "type": "string"
                        },
                        "listOrderingOptions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "orderType": {
                                "type": "string"
                              },
                              "direction": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "scheduleSettings": {
                      "type": "object",
                      "properties": {
                        "isScheduled": {
                          "type": "boolean"
                        },
                        "schedules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "type": "string"
                              },
                              "active": {
                                "type": "boolean"
                              },
                              "startTime": {
                                "type": "string"
                              },
                              "endTime": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "timeZoneSettings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "overrideTime": {
                            "type": "boolean"
                          },
                          "timeZoneActiveToCall": {
                            "type": "boolean"
                          },
                          "startTime": {
                            "type": "string"
                          },
                          "endTime": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "xsSettings": {
                      "type": "object",
                      "properties": {
                        "xsScriptId": {
                          "type": "integer"
                        },
                        "xsCheckinScriptId": {
                          "type": "integer"
                        },
                        "externalOutboundSkill_No": {
                          "type": "string"
                        },
                        "xsSkillChangedActive": {
                          "type": "boolean"
                        },
                        "xsGetContactsActive": {
                          "type": "boolean"
                        },
                        "xsFreshThreshold": {
                          "type": "integer"
                        },
                        "xsAvailableThreshold": {
                          "type": "integer"
                        },
                        "xsReadyThreshold": {
                          "type": "integer"
                        },
                        "xsNumberToRetrieve": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "{0}"
        },
        "401": {
          "description": "Unauthorized"
        }
      }
    }
  },
  "skills_skillid_parameters_list-management": {
    "put": {
      "tags": [ "Skills" ],
      "summary": " Update Skill List Management Settings",
      "operationId": "put-skills-id-parameters-list-management",
      "description": "Updates list management parameters for an outbound dialer skill like display fields, list ordering, Order type, and direction.<div class='tabs_wrapper' data-path='admin_skills_skillid_parameters_list-management.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "name": "listManagementSettings",
          "description": "A Dynamic Data object containing the skill CPA setting information to update",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "displayField1Name": {
                "type": "string",
                "nullable": true
              },
              "displayField2Name": {
                "type": "string",
                "nullable": true
              },
              "listOrderingOptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "orderType": {
                      "type": "string",
                      "nullable": true
                    },
                    "direction": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Invalid parameter<p>Other Error - See Error Message</p>"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid SkillId"
        }
      }
    }
  },
  "skills_skillid_agents_agentid": {
    "delete": {
      "tags": [ "Skills" ],
      "summary": "Delete skills based on skillid and agentid",
      "operationId": "delete-skills-id-agents-id",
      "description": "This method delete skills based on skillid and agentid.<br/><br/><b><i><span style='color:red'>v17.0 NOTE: </span></i></b> Added permission check, this API requires Skills>Edit permission.<div class='tabs_wrapper' data-path='admin_skills_skillid_agents_agentid.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "Skill Id",
          "type": "string",
          "in": "path",
          "required": true
        },
        {
          "name": "agentId",
          "description": "Agent Id",
          "type": "string",
          "in": "path",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "<p>Insufficient permissions</p><p>{0}. Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "<p><p><p><p>{0}</p><p>{0}</p></p><p>'{0}', must be an integer</p></p><p>'{0}', must be an integer or guid</p></p><p>'{0}', agent is not assigned to skill</p>"
        }
      }
    }
  },
  "campaigns": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "  Returns a list of Campaigns",
      "operationId": "getCampaignID",
      "responseClass": "Campaigns",
      "description": "This method returns a list of all Campaigns. A Campaign is a grouping of skills that serve a common business purpose.<br/><br/><b><i><span style='color:red'>v15.0 NOTE: </span></i></b> Added paging parameters to the request and response.<div class='tabs_wrapper' data-path='admin_skills_getCampaigns.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/isActive"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "_links": {
                "schema": {
                  "title": "Links",
                  "description": "Links used to parse paginated response",
                  "required": [ "self" ],
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "campaigns": {
                "type": "object",
                "properties": {
                  "campaignId": {
                    "type": "integer"
                  },
                  "campaignName": {
                    "type": "string"
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "lastUpdateTime": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": " <p>Invalid fields</p><p>Invalid top</p>"
        }
      }
    },
    "post": {
      "tags": [ "Skills" ],
      "summary": "  Creates a campaign",
      "operationId": "post-campaigns",
      "description": "This method creates a new campaign.It does allow for an array of new campaigns to be created.<br/><br/><b><i><span style='color:red'>v15.0 NOTE: </span></i></b> When using an array any errors for a specific campaign creation request will show in the response with the “error” parameter. <div class='tabs_wrapper' data-path='admin_skills_postCampaigns.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "campaigns",
          "description": "campaigns",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "campaigns": {
                "type": "array",
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "campaignName": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 80
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 100
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 2000
                    }
                  },
                  "required": [
                    "campaignName",
                    "isActive"
                  ]
                }
              }
            },
            "required": [
              "campaigns"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "campaignResults": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "campaignId": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "206": {
          "description": "Partial Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "campaignResults": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "campaignId": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid campaigns{0}.campaignName - String '' is less than minimum length of 1."
        },
        "403": {
          "description": "Security permissions prevent access to data"
        }
      }
    }
  },
  "campaigns_campaignId": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Returns a single Campaign",
      "operationId": "getCampaignById",
      "responseClass": "Campaigns",
      "description": "This method returns details of a Campaign identified by campaignId.A Campaign is a grouping of skills that serve a common business purpose.<div class='tabs_wrapper' data-path='admin_skills_getCampaignID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "campaignId",
          "description": "Campaign Id",
          "required": true,
          "type": "integer",
          "in": "path"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getCampaignResponse"
          }
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Campaign - {0} is restricted</p>"
        },
        "404": {
          "description": "Invalid {0} - '{1}'"
        }
      }
    },
    "put": {
      "tags": [ "Skills" ],
      "summary": "  Updates a campaign",
      "operationId": "put-campaigns-id",
      "description": "This method updates the configuration for a campaign.<br/><br/><b><i><span style='color:red'>v15.0 NOTE: </span></i></b> When deactivating a campaign all active skills must be assigned to another campaign first using DELETE /{version}/campaign/{campaignId}/skills.<div class='tabs_wrapper' data-path='admin_skills_putCampaignID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "campaign",
          "description": "Dynamic data for campaign",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "campaign": {
                "type": "object",
                "properties": {
                  "campaignName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 80
                  },
                  "isActive": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 100
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true,
                    "maxLength": 2000
                  }
                },
                "required": [
                  "campaignName",
                  "isActive"
                ]
              }
            },
            "required": [
              "campaign"
            ]
          }
        },
        {
          "name": "campaignId",
          "description": "Campaign Id",
          "type": "integer",
          "required": true,
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Campaign name in use - '{0}'</p><p>Invalid {0}</p>"
        },
        "403": {
          "description": "Campaign '{0}' is restricted"
        },
        "404": {
          "description": "Invalid CampaignId {0}"
        },
        "409": {
          "description": "Cannot make a Campaign with active skills inactive.  Please move active skills to another campaign or make the skills inactive"
        }
      }
    }
  },
  "campaigns_campaignId_skills": {
    "post": {
      "tags": [ "Skills" ],
      "summary": "  Assigns skills to a campaign",
      "operationId": "post-campaigns-id-skills",
      "description": "This method allows for an array of skills to be assigned to one campaign.Active skills must be associated with an active campaign.<br/><br/><b><i><span style='color:red'>v15.0 NOTE: </span></i></b> When creating an array any errors for a specific campaign skill assignment request will show in the response with the “error” parameter.<div class='tabs_wrapper' data-path='admin_skills_postCampaignIDskills.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "campaignId",
          "description": "Campaign Id",
          "type": "integer",
          "required": true,
          "in": "path"
        },
        {
          "name": "skills",
          "description": "skills",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "skills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "skillId": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 2147483647.0
                    }
                  },
                  "required": [ "skillId" ]
                }
              }
            },
            "required": [ "skills" ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "results": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "skillId": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "206": {
          "description": "Partial Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "results": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "skillId": {
                      "type": "integer"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Security permissions prevent access to data"
        },
        "404": {
          "description": "Inavlid campaign id"
        }
      }
    },
    "delete": {
      "tags": [ "Skills" ],
      "summary": "  Removes a skill from a campaign",
      "operationId": "delete-campaigns-id-skills",
      "description": "Description: This method allows for an array of skills to be removed from one campaign and assigned to another.  Active skills must be associated with an active campaign.<br/><br/><b><i><span style='color:red'>v15.0 NOTE: </span></i></b> When using an array any errors for a specific campaign deletion request will show in the response with the “error” parameter.<div class='tabs_wrapper' data-path='admin_skills_deleteCampaignIDskills.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skills",
          "description": "skills",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "skills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "skillId": {
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 2147483647.0
                    },
                    "transferCampaignId": {
                      "type": "integer",
                      "description": "campaignId transferring skill",
                      "minimum": 1.0,
                      "maximum": 2147483647.0
                    }
                  },
                  "required": [
                    "skillId",
                    "transferCampaignId"
                  ]
                }
              }
            },
            "required": [
              "skills"
            ]
          }
        },
        {
          "name": "campaignId",
          "description": "",
          "type": "integer",
          "required": true,
          "in": "path"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "results": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillId": {
                      "type": "integer"
                    },
                    "transferCampaignId": {
                      "type": "integer",
                      "description": "campaignId transferring skill"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "206": {
          "description": "Partial Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "errorCount": {
                "type": "integer"
              },
              "results": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillId": {
                      "type": "integer"
                    },
                    "transferCampaignId": {
                      "type": "integer",
                      "description": "campaignId transferring skill"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "403": {
          "description": "Security permissions prevent access to data"
        },
        "404": {
          "description": "Inavlid campaign id"
        }
      }
    }
  },
  "dispositions_skills": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "  Returns a list of dispositions with skill assignment",
      "operationId": "get-dispositions-skills",
      "description": "This method will return a list of dispositions and the “skillId” with “mediaTypeName” associated with each disposition. <div class='tabs_wrapper' data-path='admin_skills_getDispositionSkills.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/isActive"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "dispositionId": {
                "type": "integer"
              },
              "dispositionName": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "skills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillId": {
                      "type": "integer"
                    },
                    "mediaTypeId": {
                      "type": "integer"
                    },
                    "mediaTypeName": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "<p>Invalid fields</p><p>Invalid Top</p>"
        }
      }
    }
  },
  "dispositions_dispositionid": {
    "get": {
      "tags": [
        "Skills"
      ],
      "summary": "Returns a disposition configuration",
      "operationId": "GetDispositon",
      "description": "This method returns response fields for a disposition <div class='tabs_wrapper' data-path='admin_skills_getdispositionsbyid.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "dispositionId",
          "description": "Disposition Id",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/GetDispositonResponse"
          }
        },
        "400": {
          "description": "Invalid fields - '{0}' is not a valid field name"
        },
        "404": {
          "description": "Invalid dispositionId - '{1}'"
        }
      }
    },
    "put": {
      "tags": [
        "Skills"
      ],
      "summary": "Modifies the configuration of a disposition",
      "operationId": "ModifyDisposition",
      "description": "This method modifies the configuration fields of a disposition <div class='tabs_wrapper' data-path='admin_skills_putdispositionsbyid.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "dispositionId",
          "description": "Disposition Id",
          "type": "integer",
          "required": true,
          "in": "path"
        },
        {
          "name": "dispositionName",
          "description": "Disposition Name",
          "type": "string",
          "required": true,
          "in": "query"
        },
        {
          "name": "classificationId",
          "description": "Classification Id",
          "type": "integer",
          "required": true,
          "in": "query"
        },
        {
          "name": "isPreviewDisposition",
          "description": "Is Preview Disposition",
          "type": "boolean",
          "required": true,
          "in": "query"
        },
        {
          "name": "isActive",
          "description": "Filter results based on active status",
          "type": "boolean",
          "in": "query",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Invalid {0} - '{1}' {2}"
        },
        "404": {
          "description": "Invalid dispositionId - '{1}'"
        },
        "409": {
          "description": "<p>DispositionId - '{0}' can not be updated</p><p>Invalid DispositionName - '{0}' {1}</p>"
        }
      }
    }
  },
  "dispositions_classifications": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Returns a list of disposition classifications",
      "operationId": "DispostionClassifications",
      "description": "This method returns a list of the disposition classifications.<div class='tabs_wrapper' data-path='admin_skills_getdispositionsclasicfications.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/GetDispostionClassificationsResponse"
          }
        },
        "400": {
          "description": "Invalid fields - '{0}' is not a valid field name"
        }
      }
    }
  },
  "skills": {
    "get": {
      "tags": [
        "Skills"
      ],
      "summary": "Get Skills",
      "operationId": "get-skills",
      "description": "This method returns a complete list of Skills configured in the business unit. “mediaTypeId” is required filter parameter.  Email= 1, Chat =3, Phone = 4, Voice Mail = 5, Work Item = 6, Social = 8. <br/><br/><b><i><span style='color:red'>V13 Note: </span></i></b>Removed unused response parameters and added new parameters for Personal Connection settings.<div class='tabs_wrapper' data-path='admin_skills_getSkills.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "name": "mediaTypeId",
          "description": "Media Type IDs: Email= 1,Chat =3 ,Phone = 4, Voice Mail = 5, Work Item = 6, Social = 8",
          "type": "integer"
        },
        {
          "name": "outboundStrategy",
          "description": "Outbound Strategy",
          "type": "string"
        },
        {
          "$ref": "#/definitions/parameters/isActive"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/GetCreateSkillResponse"
          }
        },
        "400": {
          "description": "Invalid parameter"
        }
      }
    },
    "post": {
      "tags": [
        "Skills"
      ],
      "summary": "Creates a Skill",
      "operationId": "post-skills",
      "description": "This method creates a Skill.<br/><br/><b><i><span style='color:red'>V13 Note: </span></i></b>Removed unused input parameters and added new parameters to support Personal Connection skill settings APIs.<div class='tabs_wrapper' data-path='admin_skills_postSkills.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skills",
          "description": "A Dynamic Data object containing the skill information to upate",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/postSkillsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postSkillDetailsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid skill name.Skill name is minimum length of 1</p><p>Invalid screenpoptriggerevent type.Expecting Integer or Null but got String"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Security permissions prevent access to data"
        },
        "404": {
          "description": "Not found"
        },
        "409": {
          "description": "Invalid state.  Cannot update a running skill"
        },
        "500": {
          "description": "Skill setup failed. Skill cannot be marked active"
        }
      }
    }
  },
  "skills_skillid_thank-you-page": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Returns config for thank you page",
      "operationId": "get-skills-id-thank-you-page",
      "description": "This method returns the configuration for the chat thank you page.<div class='tabs_wrapper' data-path='admin_skills_getThankyou.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "Skill Id",
          "type": "integer",
          "required": true,
          "allowMultiple": false,
          "in": "path"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "canDownloadChatTranscript": {
                "type": "boolean"
              },
              "chatThankPopURL": {
                "type": "string"
              },
              "displayChatThankPage": {
                "type": "boolean"
              },
              "thankMessage": {
                "type": "string"
              },
              "useChatThankPopURL": {
                "type": "boolean"
              },
              "fromAddress": {
                "type": "string"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Invalid Skill-ID"
        }
      }
    }
  },
  "skills_skillId": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Get Skill details",
      "operationId": "get-skills-id",
      "description": "This method returns details for the Skill identified by skillId.<br/><br/><b><i><span style='color:red'>Note: </span></i></b>Removed unused response parameters and added new response parameters to support Personal Connection settings.<div class='tabs_wrapper' data-path='admin_skills_getSkillID.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "Skill Id",
          "type": "integer",
          "required": true,
          "allowMultiple": false,
          "in": "path"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "skillId": {
                "type": "integer",
                "description": "The ID of the Skill",
                "required": true
              },
              "skillName": {
                "type": "string",
                "description": "The name of the Skill",
                "required": true
              },
              "mediaTypeId": {
                "type": "integer",
                "description": "The media type ID for the Skill's media type (phone, chat, etc.)",
                "required": true
              },
              "mediaTypeName": {
                "type": "string",
                "description": "The textual description or name of the media type for the Skill",
                "required": true
              },
              "isActive": {
                "type": "boolean",
                "description": "Indicates if Skill is active",
                "required": true
              },
              "campaignId": {
                "type": "integer",
                "format": "int64",
                "description": "The numerical ID of the campaign with which the Skill is associated",
                "required": true
              },
              "campaignName": {
                "type": "string",
                "description": "The textual name of the campaign with which the Skill is associated",
                "required": true
              },
              "notes": {
                "type": "string",
                "description": "Notes associated with the Skill",
                "required": true
              },
              "acwTypeId": {
                "type": "integer",
                "description": "ID of the ACW tyep. 1 for \"None\", 2 for \"Disposition\", 3 for \"Automatic Wrap-up\"",
                "required": true,
                "enum": [
                  "1",
                  "2",
                  "3"
                ]
              },
              "stateIdACW": {
                "type": "integer",
                "description": "ID of the ACW state for the Skill",
                "required": true
              },
              "stateNameACW": {
                "type": "string",
                "description": "Name of the ACW state for the Skill",
                "required": true
              },
              "maxSecondsACW": {
                "type": "integer",
                "description": "Maximum number of seconds in ACW state",
                "required": true
              },
              "acwPostTimeoutStateId": {
                "type": "integer"
              },
              "acwPostTimeoutStateName": {
                "type": "string"
              },
              "requireDisposition": {
                "type": "boolean",
                "description": "Indicates if the Skill requires a disposition",
                "required": true
              },
              "allowSecondaryDispositions": {
                "type": "boolean",
                "description": "Indicates if the Skill uses a secondary disposition",
                "required": true
              },
              "scriptDisposition": {
                "type": "boolean",
                "description": "Indicates if the Skill disposition can be set in a script",
                "required": true
              },
              "agentRestTime": {
                "type": "integer",
                "description": "Time in seconds forced between PC calls",
                "required": true
              },
              "makeTranscriptAvailable": {
                "type": "boolean",
                "description": "Indicates if the Chat Skill saves a transcript",
                "required": true
              },
              "transcriptFromAddress": {
                "type": "string",
                "description": "",
                "required": true
              },
              "displayThankyou": {
                "type": "boolean",
                "description": "Indicates if a Thank You is used on the Skill",
                "required": true
              },
              "thankYouLink": {
                "type": "string",
                "description": "URL for Thank You used on the Skill",
                "required": true
              },
              "popThankYou": {
                "type": "boolean",
                "description": "Indicates if a Thank You is popped on the Skill",
                "required": true
              },
              "popThankYouURL": {
                "type": "string",
                "description": "URL for Thank You that is popped on the Skill",
                "required": true
              },
              "isOutbound": {
                "type": "boolean",
                "description": "Indicates if the Skill is outbound",
                "required": true
              },
              "outboundStrategy": {
                "type": "string",
                "description": "Outbound strategy assigned to the Skill",
                "required": true
              },
              "isRunning": {
                "type": "boolean",
                "description": "Indicates if the Personal Connection Skill is running",
                "required": true
              },
              "priorityBlending": {
                "type": "boolean",
                "description": "Indicates if the Skill uses priority blending",
                "required": true
              },
              "callerIdOverride": {
                "type": "string",
                "description": " If set then the Override Caller ID setting is enabled and this value is used for Caller ID",
                "required": true
              },
              "scriptId": {
                "type": "integer",
                "description": "The ID of the Script",
                "required": true
              },
              "scriptName": {
                "type": "string",
                "description": "The Name of the Script",
                "required": true
              },
              "emailFromAddress": {
                "type": "string",
                "description": "Email address for the Agent on the Skill",
                "required": true
              },
              "emailFromEditable": {
                "type": "boolean",
                "description": "Indicates if the from email address can be changed on the Skill",
                "required": true
              },
              "emailBccAddress": {
                "type": "string",
                "description": "Email Bcc address for the Skill",
                "required": true
              },
              "emailParking": {
                "type": "boolean",
                "description": "Indicates if Email Parking is enabled",
                "required": true
              },
              "chatWarningThreshold": {
                "type": "integer",
                "description": "Time in seconds before a warning is sent about a stale Chat.  Number between 1 and 999",
                "required": true
              },
              "agentTypingIndicator": {
                "type": "boolean",
                "description": "Indicates if the Patron can see an indicator showing the Agent is typing",
                "required": true
              },
              "patronTypingPreview": {
                "type": "boolean",
                "description": "Indicates if the Agent is allowed to see what characters the Patron is typing before they hit send",
                "required": true
              },
              "interruptible": {
                "type": "boolean",
                "description": "Indicates if Skill is interruptible",
                "required": true
              },
              "callSuppressionScriptId": {
                "type": "integer",
                "description": "The ID of the suppression Script",
                "required": true
              },
              "reSkillHours": {
                "type": "integer",
                "description": "Profile ID returned from GET /hours-of-operation",
                "required": true
              },
              "reSkillHoursName": {
                "type": "string",
                "description": "Profile name returned from GET /hours-of-operation",
                "required": true
              },
              "countReSkillHours": {
                "type": "boolean",
                "description": "Indicates if reskill hours are counted",
                "required": true
              },
              "minWFIAgents": {
                "type": "integer",
                "description": "Minimum number of Agents for WFI",
                "required": true
              },
              "minWfiAvailableAgents": {
                "type": "integer",
                "description": "Minimum number of available agents setting"
              },
              "useScreenPops": {
                "type": "boolean",
                "description": "Indicates if the Skill uses screen pops",
                "required": true
              },
              "screenPopTriggerEvent": {
                "type": "string",
                "description": "Determines when the screen pop for the Skill occurs",
                "required": true
              },
              "useCustomScreenPops": {
                "type": "boolean",
                "description": "Indicates if the Skill uses custom screen pops",
                "required": true
              },
              "screenPopDetail": {
                "type": "string",
                "description": "If set then the Custom Screen Pop type is set to \"Application\" and the value is used as the screenpop",
                "required": true
              },
              "minWorkingTime": {
                "type": "integer",
                "description": "Minimum time spent on Email contact in seconds",
                "required": true
              },
              "agentless": {
                "type": "boolean",
                "description": "Indicates if the Skill is agentless",
                "required": true
              },
              "agentlessPorts": {
                "type": "boolean",
                "description": "Indicates number of ports used for agentless",
                "required": true,
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6",
                  "7",
                  "8",
                  "9",
                  "10"
                ]
              },
              "initialPriority": {
                "type": "integer",
                "description": "Initial priority setting for the Skill",
                "required": true
              },
              "acceleration": {
                "type": "integer",
                "description": "Acceleration rate for the Skill",
                "required": true
              },
              "maxPriority": {
                "type": "integer",
                "description": "Maximum priority value for the Skill",
                "required": true
              },
              "serviceLevelThreshold": {
                "type": "integer",
                "description": "SLA threshold in percentage",
                "required": true
              },
              "serviceLevelGoal": {
                "type": "integer",
                "description": "SLA goal in percentage",
                "required": true
              },
              "enableShortAbandon": {
                "type": "boolean",
                "description": "Indicates if the Skill uses short abandons",
                "required": true
              },
              "shortAbandonThreshold": {
                "type": "integer",
                "description": "Short abandon threshold in seconds",
                "required": true
              },
              "countShortAbandons": {
                "type": "boolean",
                "description": "Indicates if the Skill counts short abandons",
                "required": true
              },
              "countOtherAbandons": {
                "type": "boolean",
                "description": "Indicates if the Skill counts other abandons",
                "required": true
              },
              "messageTempateId": {
                "type": "integer",
                "description": "ID of the Message Template assigned to the Skill",
                "required": true
              },
              "smsTransportCodeID": {
                "type": "integer",
                "description": "ID of the SMS transport code",
                "required": true
              },
              "smsTransportCode": {
                "type": "string",
                "description": "SMS transport code",
                "required": true
              },
              "dispositions": {
                "type": "array",
                "description": "",
                "items": {
                  "title": "skills",
                  "description": "",
                  "type": "object",
                  "properties": {
                    "dispositionId": {
                      "type": "integer",
                      "description": "The ID of the Disposition",
                      "required": true
                    },
                    "dispositionName": {
                      "type": "string",
                      "description": "The name of the Disposition",
                      "required": true
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Defines the order of display for the Agent",
                      "required": true
                    },
                    "isPreviewDisposition": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "deliverMultipleNumbersSerially": {
                "type": "boolean"
              },
              "cradleToGrave": {
                "type": "boolean"
              },
              "priorityInterrupt": {
                "type": "boolean"
              },
              "outboundTelecomRouteId": {
                "type": "integer"
              }
            }
          }
        },
        "404": {
          "description": "<p>Invalid parameter</p><p>Invalid skillId</p>"
        }
      }
    },
    "put": {
      "tags": [ "Skills" ],
      "summary": "Updates a Skill",
      "operationId": "put-skills-id",
      "description": "This method updates a Skill.<br/><br/><b><i><span style='color:red'>V13 Note: </span></i></b>Removed unused response parameters and added new response parameters to support Personal Connection settings.<div class='tabs_wrapper' data-path='admin_skills_putSkillsID.html'></div>",
      "produces": [ "application/json" ],
      "parameters": [
        {
          "name": "skillId",
          "description": "skillId to update",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "name": "skill",
          "description": "A Dynamic Data object containing the skill information to upate",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/putSkillRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "success": {
                "type": "boolean"
              },
              "skillId": {
                "type": "integer"
              },
              "error": {
                "type": "string"
              }
            }
          }
        },
        "400": {
          "description": "<p>Invalid UnauthorizedParameter </p><p>Missing required field - 'FieldRequired'</p><p>Skill name in use</p><p>Invalid skillId</p><p>Invalid skillName</p><p>Invalid stateIdACW</p><p>Invalid scriptId</p><p>Invalid reskillHours</p><p>Invalid campaignId</p><p>ScreenPopTriggerEvent - Invalid type. Expected Integer, Null but got String</p><p>Must include screenPopType and screenPopDetails values together</p><p>Bad Request</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Given skill is restricted"
        },
        "404": {
          "description": "Invalid skillId"
        },
        "409": {
          "description": "Invalid state.  Cannot update a running skill"
        },
        "500": {
          "description": "Skill setup failed. Skill cannot be marked active"
        }
      }
    }
  },
  "skills_skillId_start": {
    "post": {
      "tags": [ "Skills" ],
      "summary": "Start a Personal Connection Skill",
      "description": "This method will allow you to start a Personal Connection Skill identified by skillId.<div class='tabs_wrapper' data-path='admin_skills_postSkillStart.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        }
      ],
      "responses": {
        "202": {
          "description": "Accepted"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Forbidden. Check Security Profile permissions"
        },
        "404": {
          "description": "<p>Invalid skillId - '{1}', not a valid Natural Calling skill</p><p>Invalid skillId - '{1}', cannot be null or empty</p><p>Invalid skillId - '{1}', must be an integer</p>"
        },
        "409": {
          "description": "Invalid state.  Cannot start skill"
        }
      }
    }
  },
  "skills_skillId_stop": {
    "post": {
      "tags": [ "Skills" ],
      "summary": "Stop a Personal Connection Skill",
      "description": "This method will allow you to stop a Personal Connection Skill identified by skillId.<div class='tabs_wrapper' data-path='admin_skills_postSkillStop.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "name": "force",
          "description": "Forces the Skill to be stopped regardless of state",
          "type": "boolean",
          "enum": [ "true", "false" ],
          "default": false,
          "in": "query"
        }
      ],
      "responses": {
        "202": {
          "description": "Accepted"
        },
        "400": {
          "description": "Invalid force - '{1}', must be a boolean true or false"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Forbidden. Check Security Profile permissions"
        },
        "404": {
          "description": "<p>Invalid skillId - '{1}', not a valid or a non-running Natural Calling skill</p><p>Invalid skillId - '{1}', cannot be null or empty</p><p>Invalid skillId - '{1}', must be an integer</p>"
        },
        "409": {
          "description": "Invalid state.  Cannot stop skill"
        }
      }
    }
  },
  "skills_agents": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Returns Skills assignments",
      "operationId": "getAgentsAllSkills",
      "responseClass": "AgentSkillAssignmentsV4",
      "description": "This method will return the Skill assignment mappings for an array of skills.  If no value is provided in the \"updatedSince\" parameter, then all active Skill Assignment mappings will be returned.  The maximum duration of changes that are stored in cache is 7 days. <br/><br/><b><i><span style='color:red'>Note: </span></i></b> Previous versions earlier than v9.0 have been deprecated.  <br/><br/><div class='tabs_wrapper' data-path='admin_skills_getSkillAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "name": "skills",
          "description": "A string array of Skill Ids.",
          "type": "string",
          "in": "query",
          "required": true,
          "example": "[{\"skillId\": 1}, {\"skillId\": 2},...etc.]",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "skills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "lastPollTime": {
                "type": "string"
              },
              "businessUnitId": {
                "type": "integer"
              },
              "agentSkillAssignments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer"
                    },
                    "agentName": {
                      "type": "string"
                    },
                    "agentProficiencyValue": {
                      "type": "integer"
                    },
                    "agentProficiencyName": {
                      "type": "string"
                    },
                    "campaignId": {
                      "type": "integer"
                    },
                    "campaignName": {
                      "type": "string"
                    },
                    "emailFromAddress": {
                      "type": "string"
                    },
                    "internalId": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "isSkillActive": {
                      "type": "boolean"
                    },
                    "isNaturalCalling": {
                      "type": "boolean"
                    },
                    "isNaturalCallingRunning": {
                      "type": "boolean"
                    },
                    "isOutbound": {
                      "type": "boolean"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "mediaType": {
                      "type": "integer"
                    },
                    "mediaTypeName": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "outboundStrategy": {
                      "type": "string"
                    },
                    "priorityBlending": {
                      "type": "boolean"
                    },
                    "requireDispositions": {
                      "type": "boolean"
                    },
                    "scriptDisposition": {
                      "type": "boolean"
                    },
                    "skillId": {
                      "type": "integer"
                    },
                    "skillName": {
                      "type": "string"
                    },
                    "useACW": {
                      "type": "boolean"
                    },
                    "useDisposition": {
                      "type": "boolean"
                    },
                    "useSecondaryDisposition": {
                      "type": "boolean"
                    },
                    "screenPopTriggerEvent": {
                      "type": "string"
                    },
                    "isAssigned": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "invalidSkills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillId": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "206": {
          "description": "Partial Success (Invalid skillIds described in response body)",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "lastPollTime": {
                "type": "string"
              },
              "businessUnitId": {
                "type": "integer"
              },
              "agentSkillAssignments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "integer"
                    },
                    "agentName": {
                      "type": "string"
                    },
                    "agentProficiencyValue": {
                      "type": "integer"
                    },
                    "agentProficiencyName": {
                      "type": "string"
                    },
                    "campaignId": {
                      "type": "integer"
                    },
                    "campaignName": {
                      "type": "string"
                    },
                    "emailFromAddress": {
                      "type": "string"
                    },
                    "internalId": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "isSkillActive": {
                      "type": "boolean"
                    },
                    "isNaturalCalling": {
                      "type": "boolean"
                    },
                    "isNaturalCallingRunning": {
                      "type": "boolean"
                    },
                    "isOutbound": {
                      "type": "boolean"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "mediaType": {
                      "type": "integer"
                    },
                    "mediaTypeName": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "outboundStrategy": {
                      "type": "string"
                    },
                    "priorityBlending": {
                      "type": "boolean"
                    },
                    "requireDispositions": {
                      "type": "boolean"
                    },
                    "scriptDisposition": {
                      "type": "boolean"
                    },
                    "skillId": {
                      "type": "integer"
                    },
                    "skillName": {
                      "type": "string"
                    },
                    "useACW": {
                      "type": "boolean"
                    },
                    "useDisposition": {
                      "type": "boolean"
                    },
                    "useSecondaryDisposition": {
                      "type": "boolean"
                    },
                    "screenPopTriggerEvent": {
                      "type": "string"
                    },
                    "isAssigned": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "invalidSkills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skillId": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid parameter"
        }
      }
    }
  },
  "skills_skillid_parameters_general-settings": {
    "get": {
      "tags": [
        "Skills"
      ],
      "summary": "Returns the General settings for a skill",
      "operationId": "get-skills-id-parameters-general-settings",
      "description": "This method will return the General-Settings for a skill. This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_getskillsettings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "Skill Id",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/GetOutBoundSkillSettingsResponse"
          }
        },
        "400": {
          "description": "Invalid parameter"
        },
        "404": {
          "description": "Invalid skillId"
        }
      }
    },
    "put": {
      "tags": [
        "Skills"
      ],
      "summary": "Updates the General settings for a skill",
      "operationId": "put-skills-id-parameters-general-settings",
      "description": "This method modifies the General-Settings for a skill. This method is for Personal Connection skills only.<br/><br/><b><i><span style='color:red'>V13 Note: </span></i></b>modifying these settings will have an immediate effect on your Dialing Campaign, this includes if the skill is currently running.<div class='tabs_wrapper' data-path='admin_skills_putskillsettings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "Skill Id",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "name": "generalSettings",
          "description": "A Dynamic Data object containing the skill general setting information to upate",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/UpdateSkillGenral"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Invalid parameter"
        },
        "404": {
          "description": "Invalid skillId"
        }
      }
    }
  },
  "skills_skillId_agents": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Returns Agents assigned to a Skill",
      "operationId": "getAgentsBySkillId",
      "description": "This method will return the list of Agents, both active and inactive, who have a Skill assignment for the Skill identfied by \"skillId\".  If a value is provided in the \"updatedSince\" parameter, then only Agents whose Skill assignment for this Skill has changed since that value will be returned.  The maximum duration of changes that are stored in cache is 7 days. <br/><br/>In previous versions of this API it returned the list of active Agents who were not <i>currently</i> assigned to this Skill unless you set the \"assigned\" parameter to true.  The default behavior has been changed to return the list of Agents with an <i>active</i> Skill assignment to this Skill. The \"assigned\" parameter has been removed from this API.<div class='tabs_wrapper' data-path='admin_skills_getSkillIDAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "$ref": "#/definitions/parameters/updatedSince"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getSkillAgentsResponse"
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "$ref": "#/definitions/getSkillAgentsResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Skill - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "<p>Invalid skillId - '{0}', does not exist</p><p>Invalid skillId - '{0}', must be an integer</p><p>Invalid skillId - '{0}', cannot be null or empty</p>"
        },
        "500": {
          "description": "Error has occured while calling external service"
        }
      }
    },
    "post": {
      "tags": [ "Skills" ],
      "summary": "Assign Agents to a Skill",
      "operationId": "AgentAssignmentsSkill",
      "description": "This method will assign the list of Agents in the \"agents\" parameter, to a Skill identfied by \"skillId\".<div class='tabs_wrapper' data-path='admin_skills_postSkillIDAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "$ref": "#/definitions/parameters/agentContentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postSkillAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postSkillAgentsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid agents - cannot be null or empty</p><p>Cannot send more than {0} records in a single call</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Skill - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "<p>Invalid skillId - '{0}'</p><p>Invalid skillId - '{0}', does not exist</p>"
        }
      }
    },
    "delete": {
      "tags": [ "Skills" ],
      "summary": "Remove Skill Agent assignments",
      "operationId": "RemoveAgentAssignmentsSkill",
      "description": "This method will remove the assignments for the list of Agents in the \"agents\" parameter for a Skill identfied by \"skillId\". <br/><br/><b><i><span style='color:red'>v17.0 NOTE: </span></i></b>Added permission check, this API requires Skills>Edit permission. <div class='tabs_wrapper' data-path='admin_skills_deleteSkillIDAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "$ref": "#/definitions/parameters/agentContentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/deleteSkillAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/deleteSkillAgentsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid agents - cannot be null or empty</p><p>Cannot send more than {0} records in a single call</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Skill - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "<p>Invalid skillId - '{0}'</p><p>Invalid skillId - '{0}', does not exist</p>"
        }
      }
    },
    "put": {
      "tags": [ "Skills" ],
      "summary": "Update Skill Agent assignments",
      "operationId": "ModifyAssignmentsSkill",
      "description": "This method will modify the Agent assignments for a Skill identfied by \"skillId\".<div class='tabs_wrapper' data-path='admin_skills_putSkillIDAgents.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "$ref": "#/definitions/parameters/agentContentBodyMetaData",
          "schema": {
            "$ref": "#/definitions/postSkillAgentsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postSkillAgentsResponse"
          }
        },
        "400": {
          "description": "<p>Invalid agents - cannot be null or empty</p><p>Cannot send more than {0} records in a single call</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Skill - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "<p>Invalid skillId - '{0}'</p><p>Invalid skillId - '{0}', does not exist</p>"
        }
      }
    }
  },
  "skills-skillId-agents-unassigned": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Get Agents that are not assigned to Skill",
      "operationId": "Get Agents that are not assigned to Skill",
      "description": "<div class='tabs_wrapper' data-path='admin_skills_getAgentsUnassigned.html'></div>",
      "responseClass": "",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getSkillAgentsUnassignedResponse"
          }
        },
        "400": {
          "description": "Invalid {parameter name} - '{parameter value}'"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "<p>Security permissions prevent access to data</p><p>Skill - '{parameter value}' is restricted</p>"
        },
        "404": {
          "description": "<p>Invalid skillId - '{parameter value}', cannot be null or empty</p><p>Invalid skillId - '{parameter value}', does not exist</p><p>Invalid skillId - '{parameter value}', must be an integer</p>"
        }
      }
    }
  },
  "skills_call_data": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Returns summary of contacts for all Skills",
      "operationId": "SKILLCALLDATA",
      "description": "This method will return summary information about the contacts handled for each Skill in a business unit over the period of time specified by \"startDate\" and \"endDate\".  This information will be returned for all Skills in the business unit that were active during that time period.<br/>This information is updated in 15 minute increments starting at the top of each hour therefore the API will only accept times in 15 minute increments.  If you span multiple 15 minute increments, the data is accumulated and then returned.<div class='tabs_wrapper' data-path='admin_skills_getSkillsCallData.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/startDate"
        },
        {
          "$ref": "#/definitions/parameters/endDate"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getSkillsCallDataResponse"
          }
        },
        "400": {
          "description": "<p>Invalid startDate. Must be in 15 minute intervals from the start of the hour</p><p>Invalid endDate. Must be in 15 minute intervals from the start of the hour</p><p>startDate can't be greater than endDate</p><p>Invalid date range.endDate no more than 30 day period</p>"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Security privileges prevent access to data"
        }
      }
    }
  },
  "skills_skillId_call_data": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Returns summary of contacts for a Skill",
      "operationId": "Skill Call Data",
      "description": "This method will return summary information about the contacts handled for a Skill identified by \"skillId\" over the period of time specified by \"startDate\" and \"endDate\".  This information will be returned if the Skill was active during that time period.<br/>This information is updated in 15 minute increments starting at the top of each hour therefore the API will only accept times in 15 minute increments.  If you span multiple 15 minute increments, the data is accumulated and then returned.<div class='tabs_wrapper' data-path='admin_skills_getSkillIdCallData.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "$ref": "#/definitions/parameters/startDate"
        },
        {
          "$ref": "#/definitions/parameters/endDate"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getSkillsCallDataResponse"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        }
      }
    }
  },
  "skills_skillId_dispositions": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Returns a Skill Dispositions",
      "operationId": "Disposition List",
      "description": "This method returns all available dispositions for the Skill provided by skillId.  This API replaces the /skills/{skillName}/dispositions API from earlier versions and allows you to get the Dispositions from Skills whose name contains an invalid character such as &amp;.<br/><br/><div class='tabs_wrapper' data-path='admin_skills_getSkillIdDispositions.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getSkillDispositionsResponse"
          }
        },
        "204": {
          "description": " No dispositions assgined "
        },
        "400": {
          "description": "Invalid skillId"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Skill - '{0}' is restricted"
        },
        "404": {
          "description": "<p>Invalid skillId - '{0}', does not exist</p><p>Invalid skillId - '{0}'</p>"
        }
      }
    }
  },
  "skills-skillId-dispositions-unassigned": {
    "get": {
      "tags": [ "Skills" ],
      "summary": "Returns unassigned dispositions for a Skill",
      "operationId": "DispositionsNotAssignedSkill",
      "description": "This method returns all unassigned dispositions for the Skill provided by \"skillId\".<br/><br/><div class='tabs_wrapper' data-path='admin_skills_getSkillIdDispositionsUnassigned.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "$ref": "#/definitions/parameters/searchString"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        },
        {
          "$ref": "#/definitions/parameters/skip"
        },
        {
          "$ref": "#/definitions/parameters/top"
        },
        {
          "$ref": "#/definitions/parameters/orderBy"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getSkillDispositionsUnassignedResponse"
          }
        },
        "400": {
          "description": "Invalid {0} - '{1}'{2}"
        },
        "401": {
          "description": "Invalid or expired token"
        },
        "403": {
          "description": "Skill - '{0}' is restricted"
        },
        "404": {
          "description": "<p>Invalid skillId - '{0}', does not exist</p><p>Invalid skillId - '{0}', must be an integer</p><p>Invalid skillId - '{0}', cannot be null or empty</p>"
        }
      }
    }
  },
  "skills-skillId-tags": {
    "get": {
      "tags": [ "Skills" ],
      "summary": " Returns Tags for a Skill",
      "operationId": "GetTagsSkill",
      "description": "This method returns all Tags assigned to the Skill identified by \"skillId\".<div class='tabs_wrapper' data-path='admin_skills_getSkillIdTags.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "name": "skip",
          "description": "Number of records to skip in the results",
          "type": "integer",
          "in": "query"
        },
        {
          "name": "top",
          "description": "Number of records to return in the results",
          "type": "integer",
          "in": "query"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/getSkillTagsResponse"
          }
        },
        "204": {
          "description": "No tags assigned",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "totalRecords": {
                "type": "integer",
                "description": "Returns total number of records"
              },
              "_links": {
                "schema": {
                  "title": "Links",
                  "description": "Links used to parse paginated response",
                  "required": [ "self" ],
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "resultSet": {
                "type": "object",
                "properties": {
                  "skillId": {
                    "type": "string"
                  },
                  "skillName": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "tagId": {
                          "type": "string"
                        },
                        "tagName": {
                          "type": "string"
                        },
                        "isActive": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid tags - cannot be null or empty"
        },
        "403": {
          "description": "<p>Skill - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid skillId - {0}"
        }
      }
    },
    "post": {
      "tags": [ "Skills" ],
      "summary": "Assigns a Tag to a Skill",
      "operationId": "AssignTagSkill",
      "description": "This method assigns Tags to the Skill identified by \"skillId\".<div class='tabs_wrapper' data-path='admin_skills_postSkillIdTags.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "in": "body",
          "name": "tags",
          "description": "Content Body",
          "required": true,
          "allowMultiple": true,
          "schema": {
            "$ref": "#/definitions/postSkillTagsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/postSkillTagsResponse"
          }
        },
        "400": {
          "description": "Invalid tags - cannot be null or empty"
        },
        "403": {
          "description": "<p>Skill - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid skillId - {0}"
        }
      }
    },
    "delete": {
      "tags": [ "Skills" ],
      "summary": " Removes Tags from a Skill",
      "operationId": "RemoveTagsSkill",
      "description": "This method removes Tags from the Skill identified by \"skillId\".<div class='tabs_wrapper' data-path='admin_skills_deleteSkillIdTags.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "name": "tags",
          "description": "Content Body",
          "required": true,
          "in": "body",
          "allowMultiple": true,
          "schema": {
            "$ref": "#/definitions/deleteSkillTagsRequest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "$ref": "#/definitions/deleteSkillTagsResponse"
          }
        },
        "400": {
          "description": "Invalid tags - cannot be null or empty"
        },
        "403": {
          "description": "<p>Skill - '{0}' is restricted</p><p>Security permissions prevent access to data</p>"
        },
        "404": {
          "description": "Invalid skillId - {0}"
        }
      }
    }
  },
  "skills_skillid_parameters_xs-settings": {
    "get": {
      "tags": [
        "Skills"
      ],
      "summary": "Returns the XS configuration for a skill",
      "operationId": "get-skills-id-parameters-xs-settings",
      "description": "This method will return the XS-Settings for a skill.  This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_getXsSettings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty</p><p>Cannot send more than 10,000 records in a single call</p>"
        },
        "404": {
          "description": "<p>Invalid skillId</p>"
        }
      }
    },
    "put": {
      "tags": [
        "Skills"
      ],
      "summary": "Updates XS settings for a skill",
      "operationId": "put-skills-id-parameters-xs-settings",
      "description": "This method modifies the XS-Settings for a skill. This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_putXsSettings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "$ref": "#/definitions/parameters/skillId"
        },
        {
          "name": "xsSettings",
          "description": "A Dynamic Data object containing the skill XS Settings information to update",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "xsSettings": {
                "type": "object",
                "properties": {
                  "xsScriptID": {
                    "type": "integer",
                    "description": ""
                  },
                  "xsCheckinScriptID": {
                    "type": "integer",
                    "description": ""
                  },
                  "externalOutboundSkill_No": {
                    "type": "string",
                    "description": ""
                  },
                  "xsSkillChangedActive": {
                    "type": "boolean",
                    "description": ""
                  },
                  "xsGetContactsActive": {
                    "type": "boolean",
                    "description": ""
                  },
                  "xsFreshThreshold": {
                    "type": "integer",
                    "description": "",
                    "minimum": 1.0,
                    "maximum": 30000.0
                  },
                  "xsAvailableThreshold": {
                    "type": "integer",
                    "description": "",
                    "minimum": 1.0,
                    "maximum": 30000.0
                  },
                  "xsReadyThreshold": {
                    "type": "integer",
                    "description": "",
                    "minimum": 1.0,
                    "maximum": 30000.0
                  },
                  "xsNumberToRetrieve": {
                    "type": "integer",
                    "description": "",
                    "minimum": 1.0,
                    "maximum": 10000.0
                  }
                }
              }
            },
            "required": [
              "xsSettings"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty</p><p>Cannot send more than 10,000 records in a single call</p>"
        },
        "404": {
          "description": "<p>Invalid skillId</p>"
        }
      }
    }
  },
  "skills_skillid_parameters_delivery-preferences": {
    "get": {
      "tags": [
        "Skills"
      ],
      "summary": "Returns the Delivery Preferences configuration for a skill",
      "operationId": "get-skills-id-parameters-delivery-preferences",
      "description": "This method will return the Delivery Preferences for a skill.  This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_getDeliveryPreference.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Invalid fields, not a valid field name"
        },
        "404": {
          "description": "Invalid skillId"
        }
      }
    },
    "put": {
      "tags": [
        "Skills"
      ],
      "summary": "Updates Delivery Preferences configuration for a skill",
      "operationId": "put-skills-id-parameters-delivery-preferences",
      "description": "This method modifies the Delivery Preferences for a skill.  This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_putDeliveryPreference.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "name": "deliveryPreferences",
          "description": "A Dynamic Data object containing the skill delivery preference information to update",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "deliveryPreferences": {
                "type": "object",
                "properties": {
                  "confirmationRequiredDisabled": {
                    "type": "boolean",
                    "description": "Determines if PC attempts records marked as a “confirmation required”."
                  },
                  "confirmationRequiredDeliveryType": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "description": "Specifies the way to Call “preview before delivery” required records.  1 = Click to Call, 2 = Manual Dial on Keyboard, 3 = Manual Dial with Auto Correct, 4 = Dial outside of NICE inContact."
                  },
                  "confirmationRequiredTimeout": {
                    "type": "integer",
                    "description": "Number of seconds system waits for agent to respond to the preview window.  (1 – 300)",
                    "minimum": 1.0,
                    "maximum": 300.0
                  },
                  "confirmationRequiredTimeoutSubsequent": {
                    "type": "integer",
                    "description": "Sets Preview Required Timeout for the second and subsequent attempts.  Only for “Serial Dialing” skills.",
                    "minimum": 1.0,
                    "maximum": 300.0
                  },
                  "confirmationRequiredDefaultAccept": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Tells the system to accept the call when the agent does not respond within the timeout window."
                  },
                  "confirmationRequiredDefault": {
                    "type": "boolean",
                    "description": "If enabled, the system will call all records on the skill as though marked for 'Preview Required' (Preview Handling). <br/> Possible values:'true' or 'false' (note this field is not nullable)"
                  },
                  "complianceRecordsDisabled": {
                    "type": "boolean",
                    "description": "Determines if PC attempts records marked as a “compliance” record."
                  },
                  "complianceRecordsDeliveryType": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "description": "Specifies the way to Call Compliance Records.  1 = Click to Call, 2 = Manual Dial on Keyboard, 3 = Manual Dial with Auto Correct, 4 = Dial outside of NICE inContact."
                  },
                  "complianceRecordsTimeout": {
                    "type": "integer",
                    "description": "Number of seconds system waits for agent to respond to compliance preview window.  (1 – 300)",
                    "minimum": 1.0,
                    "maximum": 300.0
                  },
                  "complianceRecordsTimeoutSubsequent": {
                    "type": "integer",
                    "description": "Sets Compliance Required Timeout for the second and subsequent attempts.  Only for “Serial Dialing” skills.",
                    "minimum": 1.0,
                    "maximum": 300.0
                  },
                  "complianceRecordsDefaultAccept": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Tells the system to accept the call when the agent does not respond within the timeout window."
                  },
                  "showComplianceButtonReschedule": {
                    "type": "boolean",
                    "description": "Enables the agent to schedule the call to occur at future date/time."
                  },
                  "showComplianceButtonRequeue": {
                    "type": "boolean",
                    "description": "Enables the agent to requeue the call for another agent to take."
                  },
                  "showComplianceButtonSnooze": {
                    "type": "boolean",
                    "description": "Enables the agent to delay the call by a few minutes."
                  },
                  "showComplianceButtonDisposition": {
                    "type": "boolean",
                    "description": "Enables the agent to disposition the call without dialing."
                  },
                  "showPreviewButtonReschedule": {
                    "type": "boolean",
                    "description": "Enables the agent to schedule the call to occur at future date/time."
                  },
                  "showPreviewButtonRequeue": {
                    "type": "boolean",
                    "description": "Enables the agent to requeue the call for another agent to take."
                  },
                  "showPreviewButtonSnooze": {
                    "type": "boolean",
                    "description": "Enables the agent to delay the call by a few minutes."
                  },
                  "showPreviewButtonDisposition": {
                    "type": "boolean",
                    "description": "Enables the agent to disposition the call without dialing."
                  }
                }
              }
            },
            "required": [
              "deliveryPreferences"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "Invalid fields, not a valid field name"
        },
        "403": {
          "description": "{0}"
        },
        "404": {
          "description": "Invalid skillId"
        }
      }
    }
  },
  "skills_skillid_parameters_retry-settings": {
    "put": {
      "tags": [
        "Skills"
      ],
      "summary": "Updates Retry settings for a skill",
      "operationId": "put-skills-id-parameters-retry-settings",
      "description": "This method modifies the Retry-Settings for a skill.  This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_putRetrySettings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "name": "retrySettings",
          "description": "A Dynamic Data object containing the skill retry setting information to update",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "retrySettings": {
                "type": "object",
                "properties": {
                  "loadNonFresh": {
                    "type": "boolean",
                    "description": "When selected, includes numbers from records that Personal Connection (PC) has already attempted in the calling list."
                  },
                  "finalizeWhenExhausted": {
                    "type": "boolean",
                    "description": "Specifies that when the record is exhausted based on maximum attempt settings, the record is finalized and listeners notified."
                  },
                  "maximumAttempts": {
                    "type": "integer",
                    "description": "The maximum number of times PC attempts to dial a record before exhausting it.",
                    "minimum": 1.0,
                    "maximum": 300.0
                  },
                  "minimumRetryMinutes": {
                    "type": "integer",
                    "description": "The minimum number of minutes PC waits before retrying a record."
                  },
                  "maximumNumberOfHandledCalls": {
                    "type": "integer",
                    "description": "Maximum number of call attempts that are answered by a live contact.",
                    "minimum": 1.0,
                    "maximum": 300.0
                  },
                  "restrictedCallingMinutes": {
                    "type": "integer",
                    "description": "The period of time to monitor the repeated effort to reach any one particular contact.",
                    "minimum": 0.0,
                    "maximum": 9999.0
                  },
                  "restrictedCallingMaxAttempts": {
                    "type": "integer",
                    "description": "The maximum number of call attempts allowed for any one particular contact within the restricted call period defined in Restricted Calling Minutes.",
                    "minimum": 0.0,
                    "maximum": 10.0
                  },
                  "generalStaleMinutes": {
                    "type": "integer",
                    "description": "The amount of time in minutes that a non-callback outbound contact can stay in the pacing queue before PC returns it to list management for reevaluation.",
                    "minimum": 10.0,
                    "maximum": 1440.0
                  },
                  "callbackRestMinutes": {
                    "type": "integer",
                    "description": "The amount of time in minutes after the Callback Stale Minutes have passed that the dialer must wait between callback attempts when it has not reached the right party.",
                    "minimum": 1.0,
                    "maximum": 129600.0
                  },
                  "releaseAgentSpecificCalls": {
                    "type": "boolean",
                    "description": "When selected, PC releases calls scheduled for the removed agent to the skill for general agent delivery. When not selected, PC finalizes calls scheduled for the removed agent."
                  },
                  "maximumNumberOfCallbacks": {
                    "type": "integer",
                    "description": "The number of times agents can mark a single record for callback before it becomes exhausted.",
                    "minimum": 1.0,
                    "maximum": 300.0
                  },
                  "callbackStaleMinutes": {
                    "type": "integer",
                    "description": "The amount of time in minutes that a callback can stay in the pacing queue before the system returns it to list management for reevaluation.",
                    "minimum": 10.0,
                    "maximum": 1440.0
                  }
                }
              }
            },
            "required": [
              "retrySettings"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid skills, cannot be null or empty</p>"
        },
        "404": {
          "description": "<p>Invalid skillId</p>"
        }
      }
    },
    "get": {
      "tags": [
        "Skills"
      ],
      "summary": "Returns Retry settings for a skill",
      "operationId": "get-skills-id-parameters-retry-settings",
      "description": "This method will return the Retry-Settings for a skill.  This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_getRetrySettings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty</p>"
        },
        "404": {
          "description": "<p>Invalid skillId</p>"
        }
      }
    }
  },
  "skills_skillid_parameters_schedule-settings": {
    "get": {
      "tags": [
        "Skills"
      ],
      "summary": "Returns the Schedule settings for a skill",
      "operationId": "get-skills-id-parameters-schedule-settings",
      "description": "This method will return the Schedule-Settings for a skill.  This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_getScheduleSettings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "",
          "type": "integer",
          "in": "path",
          "required": true
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "isScheduled": {
                "type": "boolean"
              },
              "sundayStartTime": {
                "type": "string"
              },
              "sundayEndTime": {
                "type": "string"
              },
              "sundayIsActive": {
                "type": "boolean"
              },
              "mondayStartTime": {
                "type": "string"
              },
              "mondayEndTime": {
                "type": "string"
              },
              "mondayIsActive": {
                "type": "boolean"
              },
              "tuesdayStartTime": {
                "type": "string"
              },
              "tuesdayEndTime": {
                "type": "string"
              },
              "tuesdayIsActive": {
                "type": "boolean"
              },
              "wednesdayStartTime": {
                "type": "string"
              },
              "wednesdayEndTime": {
                "type": "string"
              },
              "wednesdayIsActive": {
                "type": "boolean"
              },
              "thursdayStartTime": {
                "type": "string"
              },
              "thursdayEndTime": {
                "type": "string"
              },
              "thursdayIsActive": {
                "type": "boolean"
              },
              "fridayStartTime": {
                "type": "string"
              },
              "fridayEndTime": {
                "type": "string"
              },
              "fridayIsActive": {
                "type": "boolean"
              },
              "saturdayStartTime": {
                "type": "string"
              },
              "saturdayEndTime": {
                "type": "string"
              },
              "saturdayIsActive": {
                "type": "boolean"
              }
            }
          }
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty</p>"
        },
        "404": {
          "description": "<p>Invalid skillId</p>"
        }
      }
    },
    "put": {
      "tags": [
        "Skills"
      ],
      "summary": "Updates Schedule settings for a skill",
      "operationId": "put-skills-id-parameters-schedule-settings",
      "description": "This method modifies the Schedule-Settings for a skill.  This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_putScheduleSettings.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "",
          "type": "integer",
          "in": "path",
          "required": true
        },
        {
          "name": "scheduleSettings",
          "description": "A Dynamic Data object containing the skill schedule setting information to upate",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "scheduleSettings": {
                "type": "object",
                "properties": {
                  "isScheduled": {
                    "type": "boolean",
                    "description": "When enabled, the Skill will run on a schedule."
                  },
                  "sundayStartTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will start on this day of the week.  Example: 08:00."
                  },
                  "sundayEndTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will end on this day of the week.  Example: 21:00."
                  },
                  "sundayIsActive": {
                    "type": "boolean",
                    "description": "Indicates if the skill is active on this day of the week."
                  },
                  "mondayStartTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will start on this day of the week.  Example: 08:00"
                  },
                  "mondayEndTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will end on this day of the week.  Example: 21:00."
                  },
                  "mondayIsActive": {
                    "type": "boolean",
                    "description": "Indicates if the skill is active on this day of the week."
                  },
                  "tuesdayStartTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will start on this day of the week.  Example: 08:00"
                  },
                  "tuesdayEndTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will end on this day of the week.  Example: 21:00."
                  },
                  "tuesdayIsActive": {
                    "type": "boolean",
                    "description": "Indicates if the skill is active on this day of the week."
                  },
                  "wednesdayStartTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will start on this day of the week.  Example: 08:00"
                  },
                  "wednesdayEndTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will end on this day of the week.  Example: 21:00."
                  },
                  "wednesdayIsActive": {
                    "type": "boolean",
                    "description": "Indicates if the skill is active on this day of the week."
                  },
                  "thursdayStartTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will start on this day of the week.  Example: 08:00"
                  },
                  "thursdayEndTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will end on this day of the week.  Example: 21:00."
                  },
                  "thursdayIsActive": {
                    "type": "boolean",
                    "description": "Indicates if the skill is active on this day of the week."
                  },
                  "fridayStartTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will start on this day of the week.  Example: 08:00"
                  },
                  "fridayEndTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will end on this day of the week.  Example: 21:00."
                  },
                  "fridayIsActive": {
                    "type": "boolean",
                    "description": "Indicates if the skill is active on this day of the week."
                  },
                  "saturdayStartTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will start on this day of the week.  Example: 08:00"
                  },
                  "saturdayEndTime": {
                    "type": "string",
                    "description": "Indicates the time the skill will end on this day of the week.  Example: 21:00."
                  },
                  "saturdayIsActive": {
                    "type": "boolean",
                    "description": "Indicates if the skill is active on this day of the week."
                  }
                }
              }
            },
            "required": [
              "scheduleSettings"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p>Invalid skills - cannot be null or empty</p><p>Cannot send more than 10,000 records in a single call</p>"
        },
        "404": {
          "description": "<p>Invalid skillId</p>"
        }
      }
    }
  },
  "skills_skillid_parameters_cpa-management": {
    "get": {
      "tags": [
        "Skills"
      ],
      "summary": "Returns CPA Management configuration for a skill",
      "operationId": "get-skills-id-parameters-cpa-management",
      "description": "This method will return the CPA Management settings for a skill. This method is for Personal Connection skills only.<div class='tabs_wrapper' data-path='admin_skills_getSkillCpaManagement.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "type": "integer",
          "description": "Skill Id",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/definitions/parameters/fields"
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AnsMachineOverrideSeconds": {
                "type": "integer"
              }
            }
          }
        },
        "400": {
          "description": "Invalid parameter 'skillId',must be type Integer"
        },
        "500": {
          "description": "Invalid skillId"
        }
      }
    },
    "put": {
      "tags": [
        "Skills"
      ],
      "summary": "Updates CPA Management configuration for a skill",
      "operationId": "put-skills-id-parameters-cpa-management",
      "description": "This method modifies the CPA Management settings for a skill.  This method is for Personal Connection skills only.<br/><br/><b><i><span style='color:red'>V13 Note: </span></i></b>modifying these settings will have an immediate effect on your Dialing Campaign, this includes if the skill is currently running.<div class='tabs_wrapper' data-path='admin_skills_putSkillCpaManagement.html'></div>",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "skillId",
          "description": "Skill Id",
          "type": "integer",
          "in": "path"
        },
        {
          "name": "cpaSettings",
          "description": "A Dynamic Data object containing the skill CPA setting information to update",
          "type": "DynamicData",
          "in": "body",
          "schema": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "cpaSettings": {
                "type": "object",
                "properties": {
                  "abandonMessagePath": {
                    "description": "The path for the Call Abandoned Message. This will be based on the filepath for the message. If it is in the root folder it will be just the file name. If it is in subdirectories it will be formatted as \\SubDirectory\\SubDirectory\\Message.wav",
                    "type": "string"
                  },
                  "abandonMsgMode": {
                    "type": "integer",
                    "description": "1 for “Play message” and 2 for “Execute Custom Script”",
                    "enum": [
                      0,
                      1,
                      2
                    ]
                  },
                  "abandonTimeout": {
                    "type": "integer",
                    "description": "Amount of time in seconds (0-60) after customer’s initial utterance that a call will wait to be connected to an agent before being abandoned",
                    "minimum": 0.0,
                    "maximum": 60.0
                  },
                  "agentNoResponseSeconds": {
                    "type": "number",
                    "description": "Minimum duration of time in seconds that the agent must be silent on the line to classify the call as an answering machine. When an agent speaks for at least the Utterance Minimum, PC will not classify the call as an answering machine. The number should be long enough to ensure that the agent can tell he is not connected to a live contact but short enough to reduce the number of answering machine calls being classified as live due to noise on the agent's line. (0.5 – 4.0)",
                    "minimum": 0.5,
                    "maximum": 4.0
                  },
                  "agentOverrideOptionAnsweringMachine": {
                    "type": "boolean",
                    "description": "Enables agents using the skill to be able to press a button to indicate the number is an Answering Machine"
                  },
                  "agentOverrideOptionBadNumber": {
                    "type": "boolean",
                    "description": "Enables agents using the skill to be able to press a button to indicate the number is bad. Only available when “Treat Process as Ringing” or “Pre-Connect CPA” are enabled"
                  },
                  "agentOverrideOptionFax": {
                    "type": "boolean",
                    "description": "Enables agents using the skill to be able to press a button to indicated the number is a Fax"
                  },
                  "agentResponseUtteranceMinimumSeconds": {
                    "type": "number",
                    "description": "This value no longer applies. Use Utterance Minimum instead. (0.1 – 4.0)",
                    "minimum": 0.1,
                    "maximum": 4.0
                  },
                  "agentVoiceThreshold": {
                    "type": "number",
                    "description": "Defines the threshold for detection of the agent's voice against background noise. (100 - 100000)",
                    "minimum": 100.0,
                    "maximum": 100000.0
                  },
                  "ansMachineDetMode": {
                    "type": "integer",
                    "description": "Setting if answering machine is detected.  2 – End Call and Disposition Automatically, 3 – Play Message, 4 – Execute Custom Script (with  Agent), 5 – Execute Custom Script (no Agent)",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9
                    ]
                  },
                  "ansMachineMsg": {
                    "type": "string",
                    "nullable": true,
                    "description": "If using “Play Message” mode this is the path to the file.  This will be based on the filepath for the message. If it is in the root folder it will be just the file name. If it is in subdirectories it will be formatted as \\SubDirectory\\SubDirectory\\Message.wav"
                  },
                  "ansMachineOverrideSeconds": {
                    "type": "integer",
                    "maximum": 20,
                    "minimum": 0
                  },
                  "customerLiveSilenceSeconds": {
                    "type": "number",
                    "nullable": true,
                    "description": "Duration of customer silence in seconds required after PC has detected utterance to continue classifying the call. The value should be short so that the contact does not have the opportunity to say \"hello?\" a second time. (0.5 – 2.0)",
                    "minimum": 0.5,
                    "maximum": 2.0
                  },
                  "customerVoiceThreshold": {
                    "type": "number",
                    "nullable": true,
                    "description": "Defines the threshold for detection of the contact's voice against background noise. (100 - 100000)",
                    "minimum": 100.0,
                    "maximum": 100000.0
                  },
                  "enableCPALogging": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "Should only be enabled when directed by NICE inContact Tech Support for short term troubleshooting"
                  },
                  "exceptions": {
                    "type": "array",
                    "description": "array of Exceptions",
                    "items": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "attempt_No": {
                          "type": "integer",
                          "description": "Number for the attempt, starts with 1",
                          "minimum": 1.0,
                          "maximum": 6.0
                        },
                        "ansMachineDetMode": {
                          "type": "integer",
                          "description": "2 – End Call and Disposition Automatically, 3 – Play Message, 4 – Execute Custom Script (with  Agent), 5 – Execute Custom Script (no Agent)",
                          "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ]
                        },
                        "ansMachineMsg": {
                          "type": "string",
                          "nullable": true,
                          "description": "If using “Play Message” mode this is the path to the file.  This will be based on the filepath for the message. If it is in the root folder it will be just the file name. If it is in subdirectories it will be formatted as \\SubDirectory\\SubDirectory\\Message.wav"
                        }
                      }
                    }
                  },
                  "machineEndSilenceSeconds": {
                    "type": "number",
                    "description": "If PC does not detect a beep tone, this is the duration of silence in seconds PC waits after a machine message finishes before playing the answering machine message. If it detects a beep tone, the system plays the message immediately. (1.0 – 5.0)",
                    "minimum": 1.0,
                    "maximum": 5.0,
                    "nullable": true
                  },
                  "machineEndTimeoutSeconds": {
                    "type": "number",
                    "description": "Duration of time in seconds the answering machine message can continue without finishing before classifying the call as an answering machine. If it exceeds this amount of time, PC may have reached an IVR. (5.0 – 60.0)",
                    "minimum": 5.0,
                    "maximum": 60.0
                  },
                  "machineMinimumWithAgentSeconds": {
                    "type": "number",
                    "nullable": true,
                    "description": "Duration of time in seconds that the contact must speak before PC determines whether the contact is live or an answering machine. The value should try to balance long messages like \"Thank you for calling the Death Star. We are sorry we are unable to take your call. Please leave a message and we will return your call\" and simple messages like \"Hi, this is Darth Vader. Leave a message.\"",
                    "minimum": 2.0,
                    "maximum": 10.0
                  },
                  "machineMinimumWithoutAgentSeconds": {
                    "type": "number",
                    "nullable": true,
                    "description": "Duration of time in seconds that the contact has to say something before PC determines the call is an answering machine. Setting this value lower than Machine Minimum with Agent could reduce the possibility of abandonment. (2.0 – 10.0)",
                    "minimum": 2.0,
                    "maximum": 10.0
                  },
                  "preConnectCPAEnabled": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "This should only be enabled when directed by NICE inContact Tech Support for troubleshooting the absence of ringing"
                  },
                  "preConnectCPARecording": {
                    "type": "boolean",
                    "description": "Should only be enabled when directed by NICE inContact Tech Support for short term troubleshooting. Captures voice patterns during the CPA process for further analysis"
                  },
                  "treatProgressAsRinging": {
                    "type": "boolean",
                    "nullable": true,
                    "description": "This should only be enabled when directed by NICE inContact Tech Support for troubleshooting the absence of ringing"
                  },
                  "utteranceMinimumSeconds": {
                    "type": "number",
                    "nullable": true,
                    "description": "Minimum duration of time in seconds that PC must detect sound on the line for it to determine the source is the contact or the agent. PC defines a conversation as any agent utterance over the minimum value. If it does not detect a conversation, PC considers the destination to be an answering machine.(0.1 - 0.5)",
                    "minimum": 0.1,
                    "maximum": 0.5
                  }
                }
              }
            },
            "required": [
              "cpaSettings"
            ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success"
        },
        "400": {
          "description": "<p> Invalid parameter 'skillId',must be type Integer</p><p> Invalid abandonTimeout,expected Integer but got Null</p><p> Invalid abandonMsgMode,expected Integer but got Null</p><p> Invalid ansMachineDetMode,expected Integer but got Null</p>"
        },
        "403": {
          "description": "{0}"
        },
        "404": {
          "description": "{0}"
        },
        "500": {
          "description": "Invalid skillId"
        }
      }
    }
  },
  "definitions": {
    "parameters": {
      "skillId": {
        "name": "skillId",
        "description": "Skill Id",
        "required": true,
        "type": "integer",
        "in": "path"
      },
      "isActive": {
        "name": "isActive",
        "description": "Filter results based on active status",
        "type": "boolean",
        "in": "query"
      },
      "updatedSince": {
        "name": "updatedSince",
        "description": "Returns all records updated since ISO 8601 time",
        "type": "string",
        "format": "date-time",
        "in": "query"
      },


      "searchString": {
        "name": "searchString",
        "description": "Used to filter results to objects with the value in key fields",
        "type": "string",
        "in": "query"
      },

      "fields": {
        "name": "fields",
        "description": "Comma separated list of elements to return in response",
        "type": "string",
        "in": "query"
      },

      "skip": {
        "name": "skip",
        "description": "Number of records to skip in the results",
        "type": "integer",
        "in": "query"
      },

      "top": {
        "name": "top",
        "description": "Number of records to return in the results",
        "type": "integer",
        "in": "query"
      },

      "orderBy": {
        "name": "orderBy",
        "description": "Values used to order results before paginating them.  Can also specify \"asc\" or \"desc\" to specify direction for example \"field1 asc,field2 desc,...\".  Default is asc",
        "type": "string",
        "in": "query"
      },

      "mediaTypeId": {
        "name": "mediaTypeId",
        "description": "Filters based on the media type of the Skill",
        "type": "integer",
        "in": "query"
      },

      "outboundStrategy": {
        "name": "outboundStrategy",
        "description": "Filters based on outbound strategy for the Skill",
        "type": "string",
        "in": "query"
      },

      "isSkillActive": {
        "name": "isSkillActive",
        "description": "Filters based on active state of the Skill",
        "type": "boolean",
        "in": "query"
      },

      "agentContentBodyMetaData": {
        "name": "Agents",
        "description": "Content Body",
        "type": "DynamicData",
        "in": "body",
        "allowMultiple": true
      },
      "startDate": {
        "name": "startDate",
        "description": "ISO 8601 beginning of report interval",
        "required": true,
        "type": "string",
        "format": "date-time",
        "in": "query"
      },
      "endDate": {
        "name": "endDate",
        "description": "ISO 8601 end of report interval",
        "required": true,
        "type": "string",
        "format": "date-time",
        "in": "query"
      }
    },
    "getCampaignsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "businessUnitId", "totalRecords" ],
            "properties": {
              "_links": {
                "schema": {
                  "title": "_links",
                  "description": "Links used to parse paginated response",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "businessUnitId": {
                "type": "integer",
                "description": "Business Unit Id"
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the result set"
              },
              "campaigns": {
                "type": "array",
                "description": "Collection of Campaigns",
                "items": {
                  "title": "Campaign",
                  "description": "Campaign",
                  "required": [ "campaignId", "campaignName", "isActive", "description", "notes", "lastUpdateTime" ],
                  "properties": {
                    "campaignId": {
                      "type": "integer",
                      "description": "Campaign Id"
                    },
                    "campaignName": {
                      "type": "string",
                      "description": "Campaign Name"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Campaign is active"
                    },
                    "description": {
                      "type": "string",
                      "description": "Campaign Description"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Campaign Notes"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Campaign Last Update Time (ISO 8601 time)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getCampaignResponse": {
      "title": " ",
      "type": "object",
      "required": [ "campaign" ],
      "properties": {
        "campaign": {
          "schema": {
            "title": "Campaign",
            "description": "Campaign",
            "required": [ "campaignId", "campaignName", "isActive", "description", "notes", "lastUpdateTime" ],
            "properties": {
              "campaignId": {
                "type": "integer",
                "description": "Campaign Id"
              },
              "campaignName": {
                "type": "string",
                "description": "Campaign Name"
              },
              "isActive": {
                "type": "boolean",
                "description": "Indicates if Campaign is active"
              },
              "description": {
                "type": "string",
                "description": "Campaign Description"
              },
              "notes": {
                "type": "string",
                "description": "Campaign Notes"
              },
              "lastUpdateTime": {
                "type": "string",
                "format": "date-time",
                "description": "Campaign Last Update Time (ISO 8601 time)"
              }
            }
          }
        }
      }
    },
    "GetDispositonResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "dispositionId": {
          "type": "integer"
        },
        "dispositionName": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string"
        },
        "classificationId": {
          "type": "integer"
        },
        "systemOutcome": {
          "type": "string"
        },
        "isPreviewDisposition": {
          "type": "boolean"
        }
      },
      "required": [
        "dispositionId"
      ]
    },
    "GetOutBoundSkillSettingsResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "minimumRetryMinutes": {
          "type": "integer",
          "minimum": 1.0,
          "maximum": 50000.0
        },
        "maximumAttempts": {
          "type": "integer",
          "minimum": 1.0,
          "maximum": 300.0
        },
        "defaultContactExpiration": {
          "type": "integer",
          "minimum": 1.0,
          "maximum": 527039.0
        },
        "getPriorityContactsOnContactInsertion": {
          "type": "boolean"
        },
        "loadCallbacks": {
          "type": "boolean"
        },
        "loadFresh": {
          "type": "boolean"
        },
        "loadNonFresh": {
          "type": "boolean"
        },
        "overrideBusinessUnitAbandonRate": {
          "type": "boolean"
        },
        "maximumRingingDuration": {
          "type": "integer",
          "minimum": 1.0,
          "maximum": 60.0
        },
        "beginDampenPercentage": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0
        },
        "abandonRateCutoff": {
          "type": "number",
          "minimum": 0.0,
          "maximum": 100.0
        },
        "abandonRateThreshold": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 99.9
        },
        "inactiveBlenderTimer": {
          "type": "integer",
          "minimum": 15.0,
          "maximum": 999.0
        },
        "maximumRatio": {
          "type": "integer"
        },
        "aggressiveness": {
          "type": "string"
        },
        "endOfListNotificationsDelay": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 3600.0
        },
        "notifyAgentsWhenListIsEmpty": {
          "type": "boolean"
        },
        "percentageOfAgentsBeforeOverdial": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0
        },
        "blockMultipleCalls": {
          "type": "boolean"
        },
        "consecutiveAttemptsWithoutALiveConnect": {
          "type": "integer",
          "minimum": 1.0,
          "maximum": 999.0
        },
        "enableDialingByProficiency": {
          "type": "boolean"
        },
        "proficiencyFactor": {
          "type": "number"
        },
        "waitTimeFactor": {
          "type": "number"
        },
        "maxConcurrentCallsPerAgent": {
          "type": "integer"
        },
        "maxWaitTimeSeconds": {
          "type": "integer"
        }
      }
    },
    "GetDispostionClassificationsResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "classificationResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "classificationId": {
                "type": "integer"
              },
              "businessUnitId": {
                "type": "integer"
              },
              "classificationName": {
                "type": "string"
              },
              "classificationTypeID": {
                "type": "integer"
              },
              "direction": {
                "type": "integer"
              },
              "dialingOutcomeID": {
                "type": "integer"
              },
              "reportingGroupID": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              },
              "showCommitmentAmount": {
                "type": "boolean"
              },
              "showRescheduleDate": {
                "type": "boolean"
              },
              "isAgentSpecific": {
                "type": "boolean"
              },
              "isDestinationFinal": {
                "type": "boolean"
              },
              "isContactFinal": {
                "type": "boolean"
              },
              "excludeFromSerialDelivery": {
                "type": "boolean"
              },
              "carryoverForCallback": {
                "type": "boolean"
              }
            },
            "required": [
              "classificationId"
            ]
          }
        }
      }
    },
    "GetCreateSkillResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "_links": {
          "schema": {
            "title": "Links",
            "description": "Links used to parse paginated response",
            "required": [ "self" ],
            "properties": {
              "self": {
                "type": "string",
                "format": "URL",
                "description": " Link to same page of results"
              },
              "next": {
                "type": "string",
                "format": "URL",
                "description": " Link to next page of results"
              },
              "previous": {
                "type": "string",
                "format": "URL",
                "description": " Link to previous page of results"
              }
            }
          }
        },
        "businessUnitId": {
          "type": "integer"
        },
        "lastPollTime": {
          "type": "string"
        },
        "totalRecords": {
          "type": "integer"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "skillId": {
                "type": "integer"
              },
              "skillName": {
                "type": "string"
              },
              "mediaTypeId": {
                "type": "integer"
              },
              "mediaTypeName": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "campaignId": {
                "type": "integer"
              },
              "campaignName": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "acwTypeId": {
                "type": "integer",
                "nullable": true
              },
              "stateIdACW": {
                "type": "integer"
              },
              "stateNameACW": {
                "type": "string"
              },
              "maxSecondsACW": {
                "type": "integer"
              },
              "acwPostTimeoutStateId": {
                "type": "integer"
              },
              "acwPostTimeoutStateName": {
                "type": "string"
              },
              "requireDisposition": {
                "type": "boolean"
              },
              "allowSecondaryDisposition": {
                "type": "boolean"
              },
              "scriptDisposition": {
                "type": "boolean"
              },
              "agentRestTime": {
                "type": "integer"
              },
              "makeTranscriptAvailable": {
                "type": "boolean"
              },
              "transcriptFromAddress": {
                "type": "string"
              },
              "displayThankyou": {
                "type": "boolean"
              },
              "thankYouLink": {
                "type": "string"
              },
              "popThankYou": {
                "type": "boolean"
              },
              "popThankYouURL": {
                "type": "string"
              },
              "isOutbound": {
                "type": "boolean"
              },
              "outboundStrategy": {
                "type": "string"
              },
              "isRunning": {
                "type": "boolean"
              },
              "priorityBlending": {
                "type": "boolean"
              },
              "callerIdOverride": {
                "type": "string"
              },
              "scriptId": {
                "type": "integer"
              },
              "scriptName": {
                "type": "string"
              },
              "emailFromAddress": {
                "type": "string"
              },
              "emailFromEditable": {
                "type": "boolean"
              },
              "emailBccAddress": {
                "type": "string"
              },
              "emailParking": {
                "type": "boolean"
              },
              "chatWarningThreshold": {
                "type": "integer"
              },
              "agentTypingIndicator": {
                "type": "boolean"
              },
              "patronTypingPreview": {
                "type": "boolean"
              },
              "interruptible": {
                "type": "boolean"
              },
              "callSuppressionScriptId": {
                "type": "integer"
              },
              "reskillHours": {
                "type": "integer"
              },
              "reskillHoursName": {
                "type": "string"
              },
              "countReskillHours": {
                "type": "boolean"
              },
              "minWFIAgents": {
                "type": "integer"
              },
              "useScreenPops": {
                "type": "boolean"
              },
              "screenPopTriggerEvent": {
                "type": "string"
              },
              "useCustomScreenPops": {
                "type": "boolean"
              },
              "screenPopDetail": {
                "type": "string"
              },
              "minWorkingTime": {
                "type": "integer"
              },
              "agentless": {
                "type": "boolean"
              },
              "agentlessPorts": {
                "type": "integer"
              },
              "initialPriority": {
                "type": "integer"
              },
              "acceleration": {
                "type": "integer"
              },
              "maxPriority": {
                "type": "integer"
              },
              "serviceLevelThreshold": {
                "type": "integer"
              },
              "serviceLevelGoal": {
                "type": "integer"
              },
              "enableShortAbandon": {
                "type": "boolean"
              },
              "shortAbandonThreshold": {
                "type": "integer"
              },
              "countShortAbandons": {
                "type": "boolean"
              },
              "countOtherAbandons": {
                "type": "boolean"
              },
              "messageTemplateId": {
                "type": "integer"
              },
              "smsTransportCodeId": {
                "type": "integer"
              },
              "smsTransportCode": {
                "type": "string"
              },
              "dispositions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dispositionId": {
                      "type": "integer"
                    },
                    "dispositionName": {
                      "type": "string"
                    },
                    "priority": {
                      "type": "integer"
                    },
                    "isPreviewDisposition": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "deliverMultipleNumbersSerially": {
                "type": "boolean"
              },
              "cradleToGrave": {
                "type": "boolean"
              },
              "priorityInterrupt": {
                "type": "boolean"
              },
              "outboundTelecomRouteId": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "UpdateSkillGenral": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "generalSettings": {
          "type": "object",
          "properties": {
            "minimumRetryMinutes": {
              "type": "integer",
              "nullable": true,
              "description": "The number of minutes PC waits before retrying a record. (1 – 50000)",
              "minimum": 1.0,
              "maximum": 50000.0
            },
            "maximumAttempts": {
              "type": "integer",
              "nullable": true,
              "description": "The maximum number of times PC attempts to dial a record before exhausting it. (1 – 300)",
              "minimum": 1.0,
              "maximum": 300.0
            },
            "defaultContactExpiration": {
              "type": "integer",
              "nullable": true,
              "description": "The amount of time you can keep contacts from an external system in your PC environment before automatic removal. Is this minutes, hours, seconds?  The UI makes you separate them",
              "minimum": 1.0,
              "maximum": 527039.0
            },
            "getPriorityContactsOnContactInsertion": {
              "type": "boolean",
              "description": ": Inserts contacts with a priority flag set immediately into the calling list"
            },
            "loadCallbacks": {
              "type": "boolean",
              "description": "When selected, includes numbers scheduled for callback in the calling queue"
            },
            "loadFresh": {
              "type": "boolean",
              "description": "When selected, includes numbers from records that PC has not yet attempted in the calling queue"
            },
            "loadNonFresh": {
              "type": "boolean",
              "description": "When selected, includes numbers from records that PC has already attempted in the calling queue"
            },
            "overrideBusinessUnitAbandonRate": {
              "type": "boolean",
              "description": "When selected, the abandon rate for this individual skill is calculated based on activity in this skill only, not based on all skills in the business unit. Requires “Enable Skill Abandon Rate” is checked on the Business Unit"
            },
            "maximumRingingDuration": {
              "type": "integer",
              "nullable": true,
              "description": "The maximum amount of PC allows a call to ring before considering the call a ring with no answer. (1 – 60)",
              "minimum": 1.0,
              "maximum": 60.0
            },
            "beginDampenPercentage": {
              "type": "integer",
              "nullable": true,
              "description": "Skill throttles when abandon rate reaches this percentage. For “Override Business Unit Abandon Rate” when “Skill-level Modification of Abandon Rate” is on the BU",
              "minimum": 0.0,
              "maximum": 100.0
            },
            "abandonRateCutoff": {
              "type": "number",
              "nullable": true,
              "description": "Value subtracted from Abandon Rate Threshold to determine when the system limits calling to 1:1. For “Override Business Unit Abandon Rate” when “Skill-level Modification of Abandon Rate” is on the BU",
              "minimum": 0.0,
              "maximum": 100.0
            },
            "abandonRateThreshold": {
              "type": "number",
              "nullable": true,
              "description": "Max percent of abandoned call allowed. For “Override Business Unit Abandon Rate” when “Skill-level Modification of Abandon Rate” is on the BU",
              "minimum": 0.0,
              "maximum": 99.9
            },
            "inactiveBlenderTimer": {
              "type": "integer",
              "nullable": true,
              "description": "The minimum number of seconds an agent is retained for outbound activity before being released to handle other work",
              "minimum": 15.0,
              "maximum": 999.0
            },
            "maximumRatio": {
              "type": "integer",
              "nullable": true,
              "description": "The maximum dialing ratio, or the number of calls PC places per agent. (1-3)  What happens if I set between 4 \u2013 6, according to help site you need inContact for this, does this apply to the API Too?",
              "minimum": 1.0,
              "maximum": 3.0
            },
            "aggressiveness": {
              "type": "string",
              "nullable": true,
              "description": ": Determines how quickly the system ramps up the maximum dialing ratio. (Need Possible values)"
            },
            "endOfListNotificationsDelay": {
              "type": "integer",
              "nullable": true,
              "description": "The amount of time between when the system detects a lack of calling records and notifies the supervisor through Skill Control. (0 – 3600)",
              "minimum": 0.0,
              "maximum": 3600.0
            },
            "notifyAgentsWhenListIsEmpty": {
              "type": "boolean",
              "nullable": true,
              "description": "When selected, agents also receive notification through the marquee that PC reached the End-of-list Notification Delay time and the calling list is empty"
            },
            "percentageOfAgentsBeforeOverdial": {
              "type": "integer",
              "nullable": true,
              "description": "The percent of agents that must be waiting before PC allows more than one call per agent. (0 – 100)",
              "minimum": 0.0,
              "maximum": 100.0
            },
            "blockMultipleCalls": {
              "type": "boolean",
              "nullable": true,
              "description": "If selected, allows only one call per agent"
            },
            "consecutiveAttemptsWithoutALiveConnect": {
              "type": "integer",
              "nullable": true,
              "description": "In a priority blending environment, the maximum number of attempts PC should make to deliver a call to an agent before treating the call as inbound",
              "minimum": 1.0,
              "maximum": 999.0
            },
            "enableDialingByProficiency": {
              "type": "boolean",
              "nullable": true,
              "description": "Only available for voice skills when you select the Enable Dialing by Proficiency in your business unit. PC selects which available agent should receive the next call based on each agent's score in the skill"
            },
            "proficiencyFactor": {
              "type": "number",
              "description": "For “Dialing by Proficiency”.  Specifies the weight PC should place on an agent's proficiency level when it determines which agent should receive the next call. (1 - 999).",
              "minimum": 0.0,
              "maximum": 999.0
            },
            "waitTimeFactor": {
              "type": "number",
              "description": "For “Dialing by Proficiency”.  Specifies the weight PC should place on how long an agent has been waiting for a call when it determines which agent should receive the next call. (1 – 999)",
              "minimum": 0.0,
              "maximum": 999.0
            },
            "maxConcurrentCallsPerAgent": {
              "type": "integer",
              "description": "For “Dialing by Proficiency”.  Specifies the maximum number of simultaneous calls per agent. (1 – 10)",
              "minimum": 1.0,
              "maximum": 10.0
            },
            "maxWaitTimeSeconds": {
              "type": "integer",
              "description": "For “Dialing by Proficiency”.  Specifies the maximum amount of wait time in seconds PC should consider when it determines which agent should receive the next call. (0 – 999)",
              "minimum": 0.0,
              "maximum": 999.0
            }
          }
        }
      },
      "required": [
        "generalSettings"
      ]
    },
    "getSkillsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "businessUnitId", "lastPollTime", "totalRecords", "skills" ],
            "properties": {
              "_links": {
                "schema": {
                  "title": "_links",
                  "description": "Links used to parse paginated response",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "businessUnitId": {
                "type": "integer",
                "description": "Business Unit Id"
              },
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total number of records in the result set"
              },
              "skills": {
                "type": "array",
                "description": "Collection of Skills",
                "items": {
                  "title": "Skill",
                  "description": "Skill",
                  "required": [
                    "skillId",
                    "skillName",
                    "mediaTypeId",
                    "mediaTypeName",
                    "isActive",
                    "campaignId",
                    "campaignName",
                    "notes",
                    "acwTypeId",
                    "stateIdACW",
                    "stateNameACW",
                    "maxSecondsACW",
                    "requireDisposition",
                    "allowSecondaryDisposition",
                    "scriptDisposition",
                    "agentRestTime",
                    "makeTranscriptAvailable",
                    "transcriptFromAddress",
                    "displayThankyou",
                    "thankYouLink",
                    "popThankYou",
                    "popThankYouURL",
                    "isOutbound",
                    "outboundStrategy",
                    "isRunning",
                    "priorityBlending",
                    "callerIdOverride",
                    "scriptId",
                    "scriptName",
                    "emailFromAddress",
                    "emailFromEditable",
                    "emailBccAddress",
                    "emailParking",
                    "interruptible",
                    "callSuppressionScriptId",
                    "reskillHours",
                    "reskillHoursName",
                    "countReskillHours",
                    "minWFIAgents",
                    "useScreenPops",
                    "screenPopTriggerEvent",
                    "useCustomScreenPops",
                    "screenPopDetail",
                    "minWorkingTime",
                    "agentless",
                    "agentlessPorts",
                    "initialPriority",
                    "acceleration",
                    "maxPriority",
                    "serviceLevelThreshold",
                    "serviceLevelGoal",
                    "enableShortAbandon",
                    "shortAbandonThreshold",
                    "countShortAbandons",
                    "countOtherAbandons"
                  ],
                  "properties": {
                    "skillId": {
                      "type": "integer",
                      "description": "Skill Id"
                    },
                    "skillName": {
                      "type": "string",
                      "description": "Skill Name"
                    },
                    "mediaTypeId": {
                      "type": "integer",
                      "description": "Skill Media Type Id (phone, chat, etc.)"
                    },
                    "mediaTypeName": {
                      "type": "string",
                      "description": "Skill Media Type Name"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates if Skill is active"
                    },
                    "campaignId": {
                      "type": "integer",
                      "description": "Skill Campaign Id"
                    },
                    "campaignName": {
                      "type": "string",
                      "description": "Skill Campaign Name"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Skill Notes"
                    },
                    "acwTypeId": {
                      "type": "integer",
                      "description": "ACW Type Id. 1 for \"None\", 2 for \"Disposition\", 3 for \"Automatic Wrap-up\""
                    },
                    "stateIdACW": {
                      "type": "integer",
                      "description": "Skill ACW State Id"
                    },
                    "stateNameACW": {
                      "type": "string",
                      "description": "Skill ACW State Name"
                    },
                    "maxSecondsACW": {
                      "type": "integer",
                      "description": "Maximum number of seconds in ACW state"
                    },
                    "requireDisposition": {
                      "type": "boolean",
                      "description": "Indicates if the Skill requires a disposition"
                    },
                    "allowSecondaryDisposition": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses a secondary disposition"
                    },
                    "scriptDisposition": {
                      "type": "boolean",
                      "description": "Indicates if the Skill disposition can be set in a script"
                    },
                    "agentRestTime": {
                      "type": "integer",
                      "description": "Time in seconds forced between PC calls"
                    },
                    "makeTranscriptAvailable": {
                      "type": "boolean",
                      "description": "Indicates if the Chat Skill saves a transcript"
                    },
                    "transcriptFromAddress": {
                      "type": "string",
                      "description": "Transcript From Address"
                    },
                    "displayThankyou": {
                      "type": "boolean",
                      "description": "Indicates if a Thank You is used on the Skill"
                    },
                    "thankYouLink": {
                      "type": "string",
                      "description": "URL for Thank You used on the Skill"
                    },
                    "popThankYou": {
                      "type": "boolean",
                      "description": "Indicates if a Thank You is popped on the Skill"
                    },
                    "popThankYouURL": {
                      "type": "string",
                      "description": "URL for Thank You that is popped on the Skill"
                    },
                    "isOutbound": {
                      "type": "boolean",
                      "description": "Indicates if the Skill is outbound"
                    },
                    "outboundStrategy": {
                      "type": "string",
                      "description": "Skill Outbound Strategy"
                    },
                    "isRunning": {
                      "type": "boolean",
                      "description": "Indicates if the Personal Connection Skill is running"
                    },
                    "priorityBlending": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses priority blending"
                    },
                    "callerIdOverride": {
                      "type": "string",
                      "description": " If set then the Override Caller ID setting is enabled and this value is used for Caller ID"
                    },
                    "scriptId": {
                      "type": "integer",
                      "description": "Skill Script Id"
                    },
                    "scriptName": {
                      "type": "string",
                      "description": "Skill Script Name"
                    },
                    "emailFromAddress": {
                      "type": "string",
                      "description": "Skill Agent Email Address"
                    },
                    "emailFromEditable": {
                      "type": "boolean",
                      "description": "Indicates if the from email address can be changed on the Skill"
                    },
                    "emailBccAddress": {
                      "type": "string",
                      "description": "Email Bcc address for the Skill"
                    },
                    "emailParking": {
                      "type": "boolean",
                      "description": "Indicates if Email Parking is enabled"
                    },
                    "chatWarningThreshold": {
                      "type": "integer",
                      "description": "Time in seconds before a warning is sent about a stale Chat.  Number between 1 and 999",
                      "required": true
                    },
                    "agentTypingIndicator": {
                      "type": "boolean",
                      "description": "Indicates if the Patron can see an indicator showing the Agent is typing",
                      "required": true
                    },
                    "patronTypingPreview": {
                      "type": "boolean",
                      "description": "Indicates if the Agent is allowed to see what characters the Patron is typing before they hit send",
                      "required": true
                    },
                    "interruptible": {
                      "type": "boolean",
                      "description": "Indicates if Skill is interruptible"
                    },
                    "callSuppressionScriptId": {
                      "type": "integer",
                      "description": "Suppression Script Id"
                    },
                    "reskillHours": {
                      "type": "integer",
                      "description": "Hours of Operation Profile Id"
                    },
                    "reskillHoursName": {
                      "type": "string",
                      "description": "Hours of Operation Profile Name"
                    },
                    "countReskillHours": {
                      "type": "boolean",
                      "description": "Indicates if reskill hours are counted"
                    },
                    "minWFIAgents": {
                      "type": "integer",
                      "description": "Minimum number of Agents for WFI"
                    },
                    "useScreenPops": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses screen pops"
                    },
                    "screenPopTriggerEvent": {
                      "type": "string",
                      "description": "Determines when the screen pop for the Skill occurs"
                    },
                    "useCustomScreenPops": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses custom screen pops"
                    },
                    "screenPopDetail": {
                      "type": "string",
                      "description": "If set then the Custom Screen Pop type is set to \"Application\" and the value is used as the screenpop"
                    },
                    "minWorkingTime": {
                      "type": "integer",
                      "description": "Minimum time spent on Email contact in seconds"
                    },
                    "agentless": {
                      "type": "boolean",
                      "description": "Indicates if the Skill is agentless"
                    },
                    "agentlessPorts": {
                      "type": "boolean",
                      "description": "Indicates number of ports used for agentless"
                    },
                    "initialPriority": {
                      "type": "integer",
                      "description": "Initial priority setting for the Skill"
                    },
                    "acceleration": {
                      "type": "integer",
                      "description": "Acceleration rate for the Skill"
                    },
                    "maxPriority": {
                      "type": "integer",
                      "description": "Maximum priority value for the Skill"
                    },
                    "serviceLevelThreshold": {
                      "type": "integer",
                      "description": "SLA threshold in percentage"
                    },
                    "serviceLevelGoal": {
                      "type": "integer",
                      "description": "SLA goal in percentage"
                    },
                    "enableShortAbandon": {
                      "type": "boolean",
                      "description": "Indicates if the Skill uses short abandons"
                    },
                    "shortAbandonThreshold": {
                      "type": "integer",
                      "description": "Short abandon threshold in seconds"
                    },
                    "countShortAbandons": {
                      "type": "boolean",
                      "description": "Indicates if the Skill counts short abandons"
                    },
                    "countOtherAbandons": {
                      "type": "boolean",
                      "description": "Indicates if the Skill counts other abandons"
                    },
                    "messageTempateId": {
                      "type": "integer",
                      "description": "ID of the Message Template assigned to the Skill",
                      "required": true
                    },
                    "smsTransportCodeID": {
                      "type": "integer",
                      "description": "ID of the SMS transport code",
                      "required": true
                    },
                    "smsTransportCode": {
                      "type": "string",
                      "description": "SMS transport code",
                      "required": true
                    },
                    "dispositions": {
                      "type": "array",
                      "description": "Collection of Dispositions",
                      "items": {
                        "title": "Disposition",
                        "description": "Disposition",
                        "required": [ "dispositionId", "dispositionName", "priority" ],
                        "properties": {
                          "dispositionId": {
                            "type": "integer",
                            "description": "Disposition Id"
                          },
                          "dispositionName": {
                            "type": "string",
                            "description": "Disposition Name"
                          },
                          "priority": {
                            "type": "integer",
                            "description": "Defines the order of display for the Agent"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postSkillsRequest": {
      "title": " ",
      "additionalProperties": false,
      "type": "object",
      "description": "Content Body",
      "properties": {
        "skills": {
          "type": "array",
          "description": "Collection of Skills",
          "items": {
            "type": "object",
            "properties": {
              "mediaTypeId": {
                "type": "integer",
                "description": "Skill Media Type Id (phone, chat, etc.)"
              },
              "skillName": {
                "type": "string",
                "description": "Skill Name",
                "minLength": 1,
                "maxLength": 30,
                "pattern": "^(([a-zA-Z0-9-_\\.\\(\\)^\\s])*)$"
              },
              "isOutbound": {
                "type": "boolean"
              },
              "campaignId": {
                "type": "integer"
              },
              "outboundStrategy": {
                "type": "string"
              },
              "callerIdOverride": {
                "type": "string"
              },
              "emailFromAddress": {
                "type": "string",
                "minLength": 1,
                "pattern": "^(\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*\\b([,;]\\s?)?)*$"
              },
              "emailFromEditable": {
                "type": "boolean"
              },
              "emailBccAddress": {
                "type": "string",
                "pattern": "^(\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*\\b([,;]\\s?)?)*$"
              },
              "scriptId": {
                "type": "integer"
              },
              "reskillHours": {
                "type": "integer"
              },
              "minWfiAgents": {
                "type": "integer",
                "minimum": 1.0,
                "maximum": 2147483647.0
              },
              "minWfiAvailableAgents": {
                "type": "integer",
                "description": "Minimum number of available agents setting"
              },
              "interruptible": {
                "type": "boolean"
              },
              "enableParking": {
                "type": "boolean"
              },
              "minWorkingTime": {
                "type": "integer"
              },
              "agentless": {
                "type": "boolean"
              },
              "agentlessPorts": {
                "type": "integer",
                "minimum": 1.0,
                "maximum": 10.0
              },
              "notes": {
                "type": "string"
              },
              "acwTypeId": {
                "type": "integer"
              },
              "requireDisposition": {
                "type": "boolean"
              },
              "allowSecondaryDisposition": {
                "type": "boolean"
              },
              "stateIdAcw": {
                "type": "integer"
              },
              "maxSecondsAcw": {
                "type": "integer"
              },
              "agentRestTime": {
                "type": "integer"
              },
              "displayThankYou": {
                "type": "boolean"
              },
              "thankYouLink": {
                "type": "string"
              },
              "popThankYou": {
                "type": "boolean"
              },
              "popThankYouUrl": {
                "type": "string"
              },
              "makeTranscriptAvailable": {
                "type": "boolean"
              },
              "transcriptFromAddress": {
                "type": "string"
              },
              "priorityBlending": {
                "type": "boolean"
              },
              "callSuppressionScriptId": {
                "type": "integer"
              },
              "useScreenPops": {
                "type": "boolean",
                "description": "Indicates if the Skill uses screen pops"
              },
              "screenPopTriggerEvent": {
                "type": "integer",
                "description": "Determines when the screen pop for the Skill occurs"
              },
              "useCustomScreenPops": {
                "type": "boolean",
                "description": "Indicates if the Skill uses custom screen pops"
              },
              "screenPopType": {
                "type": "string",
                "description": "Screen Pop Type"
              },
              "screenPopDetails": {
                "type": "string",
                "description": "If set then the Custom Screen Pop type is set to \"Application\" and the value is used as the screenpop"
              },
              "initialPriority": {
                "type": "integer",
                "description": "Initial priority setting for the Skill"
              },
              "acceleration": {
                "type": "integer",
                "description": "Acceleration rate for the Skill"
              },
              "maxPriority": {
                "type": "integer",
                "description": "Maximum priority value for the Skill"
              },
              "serviceLevelThreshold": {
                "type": "integer",
                "description": "SLA threshold in percentage"
              },
              "serviceLevelGoal": {
                "type": "integer",
                "description": "SLA goal in percentage",
                "minimum": 0.0,
                "maximum": 100.0
              },
              "enableShortAbandon": {
                "type": "boolean",
                "description": "Indicates if the Skill uses short abandons"
              },
              "shortAbandonThreshold": {
                "type": "integer",
                "description": "Short abandon threshold in seconds",
                "minimum": 0.0,
                "maximum": 300.0
              },
              "countShortAbandons": {
                "type": "boolean",
                "description": "Indicates if the Skill counts short abandons"
              },
              "countOtherAbandons": {
                "type": "boolean",
                "description": "Indicates if the Skill counts other abandons"
              },
              "chatWarningThreshold": {
                "type": "integer",
                "description": "Chat Warning Threshold"
              },
              "agentTypingIndicator": {
                "type": "boolean",
                "description": "Agent Typing Indicator"
              },
              "patronTypingIndicator": {
                "type": "boolean"
              },
              "smsTransportCodeId": {
                "type": "integer",
                "description": "SMS Transport Code Id"
              },
              "messageTemplateId": {
                "type": "integer",
                "description": "Message Template Id"
              },
              "dispositions": {
                "type": "array",
                "description": "Collection of Dispositions",
                "items": {
                  "title": "Disposition",
                  "type": "object",
                  "description": "Disposition",
                  "properties": {
                    "dispositionId": {
                      "type": "integer",
                      "description": "Disposition Id"
                    },
                    "priority": {
                      "type": "integer",
                      "description": "Defines the order of display for the Agent"
                    }
                  },
                  "required": [
                    "dispositionId",
                    "priority"
                  ]
                }
              },
              "deliverMultipleNumbersSerially": {
                "type": "boolean",
                "nullable": true
              },
              "cradleToGrave": {
                "type": "boolean",
                "nullable": true
              },
              "priorityInterrupt": {
                "type": "boolean",
                "nullable": true
              },
              "outboundTelecomRouteId": {
                "type": "integer",
                "nullable": true
              },
              "acwPostTimeoutState": {
                "type": "integer",
                "nullable": true
              },
              "workItemQueueType": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "mediaTypeId",
              "skillName",
              "campaignId"
            ]
          }
        }
      },
      "required": [
        "skills"
      ]
    },
    "postSkillsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "resultSet",
            "description": "Result Set",
            "required": [ "errorCount", "skillsResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of Skills creations that had errors"
              },
              "skillsResults": {
                "type": "array",
                "description": "Collection of Skill Results",
                "items": {
                  "title": "SkillResult",
                  "description": "Skill Result",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the Skill creation was successful"
                    },
                    "skillId": {
                      "type": "integer",
                      "description": "ID of the Skill created.  Only returned if creation was successful"
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Describes error in the Skill creation.  Only returned if creation was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "postSkillDetailsResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "errorCount": {
          "type": "integer"
        },
        "skillsResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean"
              },
              "error": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "putSkillRequest": {
      "title": " ",
      "type": "object",
      "description": "Content Body",
      "additionalProperties": false,
      "properties": {
        "skill": {
          "type": "object",
          "properties": {
            "skillName": {
              "type": "string",
              "description": "Skill Name",
              "nullable": true,
              "minLength": 1,
              "maxLength": 30,
              "pattern": "^(([a-zA-Z0-9-_\\.\\(\\)^\\s])*)$"
            },
            "campaignId": {
              "type": "integer",
              "description": "Skill Campaign Id",
              "nullable": true
            },
            "callerIdOverride": {
              "type": "string",
              "nullable": true
            },
            "emailFromAddress": {
              "type": "string",
              "minLength": 1,
              "pattern": "^(\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*\\b([,;]\\s?)?)*$",
              "nullable": true
            },
            "emailFromEditable": {
              "type": "boolean",
              "nullable": true
            },
            "emailBccAddress": {
              "type": "string",
              "pattern": "^(\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*\\b([,;]\\s?)?)*$",
              "nullable": true
            },
            "scriptId": {
              "type": "integer",
              "nullable": true
            },
            "reskillHours": {
              "type": "integer",
              "nullable": true
            },
            "minWfiAgents": {
              "type": "integer",
              "minimum": 1.0,
              "maximum": 2147483647.0,
              "nullable": true
            },
            "minWfiAvailableAgents": {
              "type": "integer",
              "description": "Minimum number of available agents setting",
              "nullable": true
            },
            "interruptible": {
              "type": "boolean",
              "nullable": true
            },
            "enableParking": {
              "type": "boolean",
              "nullable": true
            },
            "minWorkingTime": {
              "type": "integer",
              "nullable": true
            },
            "agentless": {
              "type": "boolean"
            },
            "agentlessPorts": {
              "type": "integer",
              "minimum": 1.0,
              "maximum": 10.0,
              "nullable": true
            },
            "notes": {
              "type": "string"
            },
            "acwTypeId": {
              "type": "integer"
            },
            "requireDisposition": {
              "type": "boolean",
              "nullable": true
            },
            "allowSecondaryDisposition": {
              "type": "boolean",
              "nullable": true
            },
            "scriptDisposition": {
              "type": "boolean"
            },
            "stateIdAcw": {
              "type": "integer",
              "nullable": true
            },
            "maxSecondsAcw": {
              "type": "integer",
              "nullable": true
            },
            "agentRestTime": {
              "type": "integer",
              "nullable": true
            },
            "displayThankYou": {
              "type": "boolean",
              "nullable": true
            },
            "thankYouLink": {
              "type": "string",
              "nullable": true
            },
            "popThankYou": {
              "type": "boolean",
              "nullable": true
            },
            "popThankYouUrl": {
              "type": "string",
              "nullable": true
            },
            "makeTranscriptAvailable": {
              "type": "boolean",
              "nullable": true
            },
            "transcriptFromAddress": {
              "type": "string",
              "nullable": true
            },
            "priorityBlending": {
              "type": "boolean",
              "nullable": true
            },
            "callSuppressionScriptId": {
              "type": "integer",
              "nullable": true
            },
            "useScreenPops": {
              "type": "boolean",
              "description": "Indicates if the Skill uses screen pops",
              "nullable": true
            },
            "screenPopTriggerEvent": {
              "type": "integer",
              "description": "Determines when the screen pop for the Skill occurs",
              "nullable": true
            },
            "useCustomScreenPops": {
              "type": "boolean",
              "description": "Indicates if the Skill uses custom screen pops",
              "nullable": true
            },
            "screenPopType": {
              "type": "string",
              "description": "Screen Pop Type",
              "nullable": true
            },
            "screenPopDetails": {
              "type": "string",
              "nullable": true,
              "description": "If set then the Custom Screen Pop type is set to \"Application\" and the value is used as the screenpop"
            },
            "initialPriority": {
              "type": "integer",
              "description": "Initial priority setting for the Skill",
              "nullable": true
            },
            "acceleration": {
              "type": "integer",
              "description": "Acceleration rate for the Skill"
            },
            "maxPriority": {
              "type": "integer",
              "nullable": true,
              "description": "Maximum priority value for the Skill"
            },
            "serviceLevelThreshold": {
              "type": "integer",
              "description": "SLA threshold in percentage",
              "nullable": true
            },
            "serviceLevelGoal": {
              "type": "integer",
              "description": "SLA goal in percentage",
              "nullable": true,
              "minimum": 0.0,
              "maximum": 100.0
            },
            "enableShortAbandon": {
              "type": "boolean",
              "description": "Indicates if the Skill uses short abandons",
              "nullable": true
            },
            "shortAbandonThreshold": {
              "type": "integer",
              "description": "Short abandon threshold in seconds",
              "nullable": true,
              "minimum": 0.0,
              "maximum": 300.0
            },
            "countShortAbandons": {
              "type": "boolean",
              "description": "Indicates if the Skill counts short abandons",
              "nullable": true
            },
            "countOtherAbandons": {
              "type": "boolean",
              "description": "Indicates if the Skill counts other abandons",
              "nullable": true
            },
            "chatWarningThreshold": {
              "type": "integer",
              "description": "Chat Warning Threshold",
              "nullable": true
            },
            "agentTypingIndicator": {
              "type": "boolean",
              "description": "Agent Typing Indicator",
              "nullable": true
            },
            "patronTypingIndicator": {
              "type": "boolean"
            },
            "smsTransportCodeId": {
              "type": "integer",
              "nullable": true,
              "description": "SMS Transport Code Id"
            },
            "messageTemplateId": {
              "type": "integer",
              "nullable": true,
              "description": "Message Template Id"
            },
            "dispositions": {
              "type": "array",
              "description": "Collection of Dispositions",
              "items": {
                "type": "object",
                "title": "Disposition",
                "description": "Disposition",
                "required": [ "dispositionId", "priority" ],
                "properties": {
                  "dispositionId": {
                    "type": "integer",
                    "description": "Disposition Id"
                  },
                  "priority": {
                    "type": "integer",
                    "description": "Defines the order of display for the Agent"
                  }
                }

              }
            },
            "deliverMultipleNumbersSerially": {
              "type": "boolean"
            },
            "cradleToGrave": {
              "type": "boolean"
            },
            "priorityInterrupt": {
              "type": "boolean"
            },

            "acwPostTimeoutStateId": {
              "type": "integer"
            }
          }
        }
      },
      "required": [
        "skill"
      ]
    },
    "getSkillsAgentsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "businessUnitId", "lastPollTime" ],
            "properties": {
              "lastPollTime": {
                "type": "string",
                "format": "date-time",
                "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
              },
              "businessUnitId": {
                "type": "integer",
                "description": "Business Unit Id"
              },
              "agentSkillAssignments": {
                "type": "array",
                "description": "Collection of Agent Skill Assignments",
                "items": {
                  "title": "AgentSkillAssignment",
                  "description": "Agent Skill Assignment",
                  "required": [ "agentId", "agentName", "agentProficiencyValue", "agentProficiencyName", "campaignId", "campaignName", "emailFromAddress", "internalId", "isActive", "isSkillActive", "isNaturalCalling", "isNaturalCallingRunning", "isOutbound", "lastUpdateTime", "mediaType", "mediaTypeName", "notes", "outboundStrategy", "priorityBlending", "requireDisposition", "scriptDisposition", "skillId", "skillName", "useACW", "useDisposition", "useSecondaryDispositions", "screenPopTriggerEvent" ],
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "Agent Id"
                    },
                    "agentName": {
                      "type": "string",
                      "description": "Agent Name"
                    },
                    "agentProficiencyValue": {
                      "type": "integer",
                      "description": "Agent Proficiency Value"
                    },
                    "agentProficiencyName": {
                      "type": "string",
                      "description": "Agent Proficiency Name"
                    },
                    "campaignId": {
                      "type": "integer",
                      "description": "Campaign Id"
                    },
                    "campaignName": {
                      "type": "string",
                      "description": "Campaign Name"
                    },
                    "emailFromAddress": {
                      "type": "string",
                      "description": "Email From Address"
                    },
                    "internalId": {
                      "type": "string",
                      "description": "Custom Id"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Agent Active State"
                    },
                    "isSkillActive": {
                      "type": "boolean",
                      "description": "Skill Active State"
                    },
                    "isNaturalCalling": {
                      "type": "boolean",
                      "description": "Natural Calling State"
                    },
                    "isNaturalCallingRunning": {
                      "type": "boolean",
                      "description": "Natural Calling Running State"
                    },
                    "isOutbound": {
                      "type": "boolean",
                      "description": "Skill Outbound State"
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last Update Time (ISO 8601 format)"
                    },
                    "mediaType": {
                      "type": "integer",
                      "description": "Media Type Id"
                    },
                    "mediaTypeName": {
                      "type": "string",
                      "description": "Media Type Name"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Assignment Notes"
                    },
                    "outboundStrategy": {
                      "type": "string",
                      "description": "Outbound Strategy"
                    },
                    "priorityBlending": {
                      "type": "boolean",
                      "description": "Priority Blending State"
                    },
                    "requireDisposition": {
                      "type": "boolean",
                      "description": "Require Disposition State"
                    },
                    "scriptDisposition": {
                      "type": "boolean",
                      "description": "Script Disposition State"
                    },
                    "skillId": {
                      "type": "integer",
                      "description": "Skill Id"
                    },
                    "skillName": {
                      "type": "string",
                      "description": "Skill Name"
                    },
                    "useACW": {
                      "type": "boolean",
                      "description": "Use ACW State"
                    },
                    "useDisposition": {
                      "type": "boolean",
                      "description": "Use Disposition State"
                    },
                    "useSecondaryDispositions": {
                      "type": "boolean",
                      "description": "Use Secondary Dispositions State"
                    },
                    "screenPopTriggerEvent": {
                      "type": "string",
                      "description": "Screen Pop Trigger Event"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getSkillAgentsResponse": {
      "title": "ResultSet",
      "description": "Result Set",
      "required": [ "businessUnitId", "totalRecords", "lastPollTime" ],
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "_links": {
          "schema": {
            "title": "_links",
            "description": "Links used to parse paginated response",
            "properties": {
              "self": {
                "type": "string",
                "format": "URL",
                "description": " Link to same page of results"
              },
              "next": {
                "type": "string",
                "format": "URL",
                "description": " Link to next page of results"
              },
              "previous": {
                "type": "string",
                "format": "URL",
                "description": " Link to previous page of results"
              }
            }
          }
        },
        "lastPollTime": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp of last database poll.  Value should be passed in \"updatedSince\" parameter on next call"
        },
        "businessUnitId": {
          "type": "integer",
          "description": "Business Unit Id"
        },
        "totalRecords": {
          "type": "integer",
          "description": "Total Records in Result Set"
        },
        "hiddenAgents": {
          "type": "integer"
        },
        "agentSkillAssignments": {
          "type": "array",
          "description": "Collection of Agent Skill Assignments",
          "items": {
            "title": "AgentSkillAssignment",
            "description": "Agent Skill Assignment",
            "required": [ "agentId", "firstName", "middleName", "lastName", "agentProficiencyValue", "agentProficiencyName", "campaignId", "campaignName", "emailFromAddress", "internalId", "isActive", "isSkillActive", "isDialer", "isNaturalCalling", "isNaturalCallingRunning", "isOutbound", "lastUpdateTime", "mediaTypeId", "mediaTypeName", "notes", "outboundStrategy", "priorityBlending", "requireDisposition", "scriptDisposition", "skillId", "skillName", "teamId", "teamName", "useACW", "useDisposition", "useSecondaryDispositions", "screenPopTriggerEvent" ],
            "properties": {
              "agentId": {
                "type": "integer",
                "description": "Agent Id"
              },
              "userId": {
                "type": "string"
              },
              "firstName": {
                "type": "string",
                "description": "Agent First Name"
              },
              "middleName": {
                "type": "string",
                "description": "Agent Middle Name"
              },
              "lastName": {
                "type": "string",
                "description": "Agent Last Name"
              },
              "agentProficiencyValue": {
                "type": "integer",
                "description": "Agent Proficiency Value"
              },
              "agentProficiencyName": {
                "type": "string",
                "description": "Agent Proficiency Name"
              },
              "agentSklStatus": {
                "type": "string"
              },
              "campaignId": {
                "type": "integer",
                "description": "Campaign Id"
              },
              "campaignName": {
                "type": "string",
                "description": "Campaign Name"
              },
              "emailFromAddress": {
                "type": "string",
                "description": "Email From Address"
              },
              "internalId": {
                "type": "string",
                "description": "Custom Id"
              },
              "isActive": {
                "type": "boolean",
                "description": "Agent Active State"
              },
              "isAssigned": {
                "type": "boolean"
              },
              "isSkillActive": {
                "type": "boolean",
                "description": "Skill Active State"
              },
              "isDialer": {
                "type": "boolean",
                "description": "Dialer State"
              },
              "isNaturalCalling": {
                "type": "boolean",
                "description": "Natural Calling State"
              },
              "isNaturalCallingRunning": {
                "type": "boolean",
                "description": "Natural Calling Running State"
              },
              "isOutbound": {
                "type": "boolean",
                "description": "Skill Outbound State"
              },
              "lastUpdateTime": {
                "type": "string",
                "format": "date-time",
                "description": "Last Update Time (ISO 8601 format)"
              },
              "mediaTypeId": {
                "type": "integer",
                "description": "Media Type Id"
              },
              "mediaTypeName": {
                "type": "string",
                "description": "Media Type Name"
              },
              "notes": {
                "type": "string",
                "description": "Assignment Notes"
              },
              "outboundStrategy": {
                "type": "string",
                "description": "Outbound Strategy"
              },
              "priorityBlending": {
                "type": "boolean",
                "description": "Priority Blending State"
              },
              "requireDisposition": {
                "type": "boolean",
                "description": "Require Disposition State"
              },
              "scriptDisposition": {
                "type": "boolean",
                "description": "Script Disposition State"
              },
              "skillId": {
                "type": "integer",
                "description": "Skill Id"
              },
              "skillName": {
                "type": "string",
                "description": "Skill Name"
              },
              "teamId": {
                "type": "integer",
                "description": "Team Id"
              },
              "teamName": {
                "type": "string",
                "description": "Team Name"
              },
              "useACW": {
                "type": "boolean",
                "description": "Use ACW State"
              },
              "useDisposition": {
                "type": "boolean",
                "description": "Use Disposition State"
              },
              "useSecondaryDispositions": {
                "type": "boolean",
                "description": "Use Secondary Dispositions State"
              },
              "screenPopTriggerEvent": {
                "type": "string",
                "description": "Screen Pop Trigger Event"
              }
            }
          }
        }
      }
    },
    "postSkillAgentsRequest": {
      "title": " ",
      "type": "object",
      "required": [ "agents" ],
      "properties": {
        "agents": {
          "type": "array",
          "description": "Collection of Agent Assignments",
          "items": {
            "title": "Agent",
            "description": "Agent",
            "required": [ "agentId" ],
            "properties": {
              "agentId": {
                "type": "string",
                "description": "Agent Id",
                "default": "0"
              },
              "isActive": {
                "type": "boolean",
                "description": "Indicates if the Agent should be in an active or inactive state.  Default is true"
              },
              "proficiency": {
                "type": "integer",
                "description": "Agent Skill Proficiency Id",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5
                ]
              }
            }
          }
        }
      }
    },
    "postSkillAgentsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "resultSet",
            "additionalProperties": false,
            "description": "Result Set",
            "required": [ "errorCount", "agentResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of Agent Assignments that had errors"
              },
              "agentResults": {
                "type": "array",
                "description": "Collection of Agent Results",
                "items": {
                  "title": "AgentResult",
                  "description": "Agent Result",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the Agent assignment was successful"
                    },
                    "agentId": {
                      "type": "integer",
                      "description": "Agent Id assigned. Only returned if assignment was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Describes error in the Agent assignment. Only returned if assignment was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteSkillAgentsRequest": {
      "title": " ",
      "type": "object",
      "required": [ "agents" ],
      "properties": {
        "agents": {
          "type": "array",
          "description": "Collection of Agents to remove",
          "items": {
            "title": "Agent",
            "description": "Agent",
            "required": [ "agentId" ],
            "properties": {
              "agentId": {
                "type": "string",
                "description": "Agent Id",
                "default": "0"
              }
            }
          }
        }
      }
    },
    "deleteSkillAgentsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "resultSet",
            "description": "Result Set",
            "required": [ "errorCount", "agentResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of Agent Removals that had errors"
              },
              "agentResults": {
                "type": "array",
                "description": "Collection of Agent Results",
                "items": {
                  "title": "AgentResult",
                  "description": "Agent Result",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the Agent removal was successful"
                    },
                    "agentId": {
                      "type": "integer",
                      "description": "Agent Id assigned. Only returned if removal was successful"
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Describes error in the Agent removal. Only returned if removal was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getSkillAgentsUnassignedResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "totalRecords" ],
            "properties": {
              "_links": {
                "schema": {
                  "title": "_links",
                  "description": "Links used to parse paginated response",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to same page of results"
                    },
                    "next": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to next page of results"
                    },
                    "previous": {
                      "type": "string",
                      "format": "URL",
                      "description": " Link to previous page of results"
                    }
                  }
                }
              },
              "totalRecords": {
                "type": "integer",
                "description": "Total Records in Result Set"
              },
              "agents": {
                "type": "array",
                "description": "Collection of Unassigned Agents",
                "items": {
                  "title": "Agent",
                  "description": "Agent",
                  "required": [ "agentId", "firstName", "middleName", "lastName", "isActive", "teamId", "teamName" ],
                  "properties": {
                    "agentId": {
                      "type": "integer",
                      "description": "Agent Id"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "Agent First Name"
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Agent Middle Name"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Agent Last Name"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Agent Active State"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Team Id"
                    },
                    "teamName": {
                      "type": "string",
                      "description": "Team Name"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "getSkillsCallDataResponse": {
      "title": " ",
      "type": "object",
      "required": [ "SkillCallData" ],
      "properties": {
        "SkillCallData": {
          "schema": {
            "title": "SkillCallData",
            "description": "Skill Call Data",
            "required": [
              "SkillName",
              "SkillId",
              "BusinessUnitId",
              "EnteredQueueContacts",
              "OfferedContacts",
              "AnsweredContacts",
              "AnsweredServiceLevelContacts",
              "AbandonedContacts",
              "AbandonedTime",
              "AverageAbandonedTime",
              "AverageACDTime",
              "AverageHandleTime",
              "AverageSpeedAnswerTime"
            ],
            "properties": {
              "SkillName": {
                "type": "string",
                "description": "Skill Name"
              },
              "SkillId": {
                "type": "integer",
                "description": "Skill Id"
              },
              "BusinessUnitId": {
                "type": "integer",
                "description": "Business Unit Id"
              },
              "EnteredQueueContacts": {
                "type": "integer",
                "description": "Entered Queue Contacts"
              },
              "OfferedContacts": {
                "type": "integer",
                "description": "Offered Contacts"
              },
              "AnsweredContacts": {
                "type": "integer",
                "description": "Answered Contacts"
              },
              "AnsweredServiceLevelContacts": {
                "type": "integer",
                "description": "Answered Service Level Contacts"
              },
              "AbandonedContacts": {
                "type": "integer",
                "description": "Abandoned Contacts"
              },
              "AbandonedTime": {
                "type": "number",
                "format": "double",
                "description": "Abandoned Time"
              },
              "AverageAbandonedTime": {
                "type": "number",
                "format": "double",
                "description": "Average Abandoned Time"
              },
              "AverageACDTime": {
                "type": "number",
                "format": "double",
                "description": "Average ACD Time"
              },
              "AverageHandleTime": {
                "type": "number",
                "format": "double",
                "description": "Average Handle Time"
              },
              "AverageSpeedAnswerTime": {
                "type": "number",
                "format": "double",
                "description": "Average Speed Answer Time"
              }
            }
          }
        }
      }
    },
    "getSkillDispositionsResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "required": [ "resultSet" ],
      "properties": {
        "skillId": {
          "type": "integer"
        },
        "skillName": {
          "type": "string"
        },
        "totalRecords": {
          "type": "integer"
        },
        "dispositions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dispositionId": {
                "type": "integer"
              },
              "dispositionName": {
                "type": "string"
              },
              "displayOrder": {
                "type": "integer"
              },
              "classification": {
                "type": "string"
              },
              "reportingGroup": {
                "type": "string"
              },
              "systemOutcome": {
                "type": "string"
              },
              "requireCommitmentAmount": {
                "type": "boolean"
              },
              "requireRescheduleDate": {
                "type": "boolean"
              },
              "agentSpecific": {
                "type": "boolean"
              },
              "isPreviewDisposition": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "getSkillDispositionsUnassignedResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "additionalProperties": false,
      "properties": {
        "totalRecords": {
          "type": "integer",
          "description": "Total number of records in the result set"
        },
        "dispositions": {
          "type": "array",
          "description": "Collection of Dispositions",
          "items": {
            "title": "Disposition",
            "type": "object",
            "description": "Disposition",
            "required": [ "dispositionId", "dispositionName", "classification", "reportingGroup", "systemOutcome", "requireCommitmentAmount", "requireRescheduleDate", "agentSpecific" ],
            "properties": {
              "dispositionId": {
                "type": "integer",
                "description": "Disposition Id"
              },
              "dispositionName": {
                "type": "string",
                "description": "Disposition Name"
              },
              "displayOrder": {
                "type": "integer"
              },
              "classification": {
                "type": "string",
                "description": "Disposition Classification"
              },
              "reportingGroup": {
                "type": "string",
                "description": "Group that contacts can be reported against"
              },
              "systemOutcome": {
                "type": "string",
                "description": "Final outcome of the Contact"
              },
              "requireCommitmentAmount": {
                "type": "boolean",
                "description": "Indicates if commitment amount must be entered"
              },
              "requireRescheduleDate": {
                "type": "boolean",
                "description": "Indicates if reschedule date must be entered"
              },
              "agentSpecific": {
                "type": "boolean",
                "description": "Indicates if Disposition is unique to Agent"
              },
              "isPreviewDisposition": {
                "type": "boolean",
                "description": "List Only Preview Dispositions"

              }
            }
          }
        }
      }
    },
    "getSkillTagsResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "totalRecords": {
          "type": "integer"
        },
        "_links": {
          "schema": {
            "title": "Links",
            "description": "Links used to parse paginated response",
            "required": [ "self" ],
            "properties": {
              "self": {
                "type": "string",
                "format": "URL",
                "description": " Link to same page of results"
              },
              "next": {
                "type": "string",
                "format": "URL",
                "description": " Link to next page of results"
              },
              "previous": {
                "type": "string",
                "format": "URL",
                "description": " Link to previous page of results"
              }
            }
          }
        },
        "resultSet": {
          "type": "object",
          "properties": {
            "skillId": {
              "type": "string"
            },
            "skillName": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "tagId": {
                    "type": "string"
                  },
                  "tagName": {
                    "type": "string"
                  },
                  "isActive": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "postSkillTagsRequest": {
      "title": " ",
      "type": "object",
      "required": [ "tags" ],
      "properties": {
        "tags": {
          "type": "array",
          "description": "Collection of Tags to assign",
          "items": {
            "title": "Tag",
            "required": [ "tagId" ],
            "properties": {
              "tagId": {
                "type": "integer",
                "description": "Tag Id to assign to the Skill"
              }
            }
          }
        }
      }
    },
    "postSkillTagsResponse": {
      "title": " ",
      "type": "object",
      "required": [ "resultSet" ],
      "properties": {
        "resultSet": {
          "schema": {
            "title": "ResultSet",
            "description": "Result Set",
            "required": [ "errorCount", "tagResults" ],
            "properties": {
              "errorCount": {
                "type": "integer",
                "description": "Number of Tags assignments that had errors"
              },
              "tagResults": {
                "type": "array",
                "description": "Collection of Tag Results",
                "items": {
                  "title": "TagResult",
                  "description": "TagResult",
                  "required": [ "success" ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the Tag assignment was successful"
                    },
                    "tagId": {
                      "type": "integer",
                      "description": "Tag Id assigned. Only returned if assignment was successful"
                    },
                    "error": {
                      "type": "string",
                      "description": "Tag Assignment Error. Only returned if assignment was unsuccessful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "deleteSkillTagsRequest": {
      "title": " ",
      "type": "object",
      "required": [ "tags" ],
      "properties": {
        "tags": {
          "type": "array",
          "description": "Collection of Tags to remove",
          "items": {
            "title": "Tag",
            "required": [ "tagId" ],
            "properties": {
              "tagId": {
                "type": "string",
                "description": "Tag Id to remove from the Skill"
              }
            }
          }
        }
      }
    },
    "deleteSkillTagsResponse": {
      "title": " ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "errorCount": {
          "type": "string"
        },
        "tagResults": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "success": {
                "type": "string"
              },
              "tagId": {
                "type": "string"
              },
              "error": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
